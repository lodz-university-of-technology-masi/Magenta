{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/authentication/authentication-routing.module.ts","webpack:///./src/app/authentication/authentication.css","webpack:///./src/app/authentication/authentication.module.ts","webpack:///./src/app/authentication/login-page/login-page.component.css","webpack:///./src/app/authentication/login-page/login-page.component.html","webpack:///./src/app/authentication/login-page/login-page.component.ts","webpack:///./src/app/authentication/login-page/reset-password/reset-password.component.css","webpack:///./src/app/authentication/login-page/reset-password/reset-password.component.html","webpack:///./src/app/authentication/login-page/reset-password/reset-password.component.ts","webpack:///./src/app/authentication/registration-page/registration-confirm-password.ts","webpack:///./src/app/authentication/registration-page/registration-page.component.css","webpack:///./src/app/authentication/registration-page/registration-page.component.html","webpack:///./src/app/authentication/registration-page/registration-page.component.ts","webpack:///./src/app/authentication/services/authentication.service.ts","webpack:///./src/app/authentication/services/password.service.ts","webpack:///./src/app/core/core.module.ts","webpack:///./src/app/core/error-panel/error-panel.component.css","webpack:///./src/app/core/error-panel/error-panel.component.html","webpack:///./src/app/core/error-panel/error-panel.component.ts","webpack:///./src/app/core/header/header.component.css","webpack:///./src/app/core/header/header.component.html","webpack:///./src/app/core/header/header.component.ts","webpack:///./src/app/core/loading-spinner/loading-spinner.component.css","webpack:///./src/app/core/loading-spinner/loading-spinner.component.html","webpack:///./src/app/core/loading-spinner/loading-spinner.component.ts","webpack:///./src/app/dialogs/dialogs-style.css","webpack:///./src/app/dialogs/dialogs.module.ts","webpack:///./src/app/dialogs/warning-dialog/assign-redactor-to-test/assign-redactor-to-test.component.css","webpack:///./src/app/dialogs/warning-dialog/assign-redactor-to-test/assign-redactor-to-test.component.html","webpack:///./src/app/dialogs/warning-dialog/assign-redactor-to-test/assign-redactor-to-test.component.ts","webpack:///./src/app/dialogs/warning-dialog/import-dialog/import-dialog.component.css","webpack:///./src/app/dialogs/warning-dialog/import-dialog/import-dialog.component.html","webpack:///./src/app/dialogs/warning-dialog/import-dialog/import-dialog.component.ts","webpack:///./src/app/dialogs/warning-dialog/warning-dialog.component.css","webpack:///./src/app/dialogs/warning-dialog/warning-dialog.component.html","webpack:///./src/app/dialogs/warning-dialog/warning-dialog.component.ts","webpack:///./src/app/dialogs/yes-no-dialog/delete-user-account-dialog/delete-user-account-dialog.component.css","webpack:///./src/app/dialogs/yes-no-dialog/delete-user-account-dialog/delete-user-account-dialog.component.html","webpack:///./src/app/dialogs/yes-no-dialog/delete-user-account-dialog/delete-user-account-dialog.component.ts","webpack:///./src/app/dialogs/yes-no-dialog/yes-no-dialog.component.css","webpack:///./src/app/dialogs/yes-no-dialog/yes-no-dialog.component.html","webpack:///./src/app/dialogs/yes-no-dialog/yes-no-dialog.component.ts","webpack:///./src/app/error/error.module.ts","webpack:///./src/app/error/not-found/not-found.component.css","webpack:///./src/app/error/not-found/not-found.component.html","webpack:///./src/app/error/not-found/not-found.component.ts","webpack:///./src/app/guards/logged-user-guard.ts","webpack:///./src/app/guards/not-logged-user-quard.ts","webpack:///./src/app/guards/redactor-or-moderator-guard.ts","webpack:///./src/app/guards/redactor-quard.ts","webpack:///./src/app/guards/user-guard.ts","webpack:///./src/app/interceptor.ts","webpack:///./src/app/main-page/main-page-routing.module.ts","webpack:///./src/app/main-page/main-page.module.ts","webpack:///./src/app/main-page/main-page/main-page.component.css","webpack:///./src/app/main-page/main-page/main-page.component.html","webpack:///./src/app/main-page/main-page/main-page.component.ts","webpack:///./src/app/metrics-processor/metrics-processor.directive.ts","webpack:///./src/app/metrics-processor/metrics-processor.module.ts","webpack:///./src/app/metrics-processor/services/distance-calculator.service.ts","webpack:///./src/app/metrics-processor/services/metrics-processor.service.ts","webpack:///./src/app/models/metrics.ts","webpack:///./src/app/models/mouse-position.ts","webpack:///./src/app/models/positions.ts","webpack:///./src/app/models/question.ts","webpack:///./src/app/models/test.ts","webpack:///./src/app/moderator/add-redactor/add-redactor.component.css","webpack:///./src/app/moderator/add-redactor/add-redactor.component.html","webpack:///./src/app/moderator/add-redactor/add-redactor.component.ts","webpack:///./src/app/moderator/moderator-page/moderator-page.component.css","webpack:///./src/app/moderator/moderator-page/moderator-page.component.html","webpack:///./src/app/moderator/moderator-page/moderator-page.component.ts","webpack:///./src/app/moderator/moderator-routing.module.ts","webpack:///./src/app/moderator/moderator-tests/moderator-tests.component.css","webpack:///./src/app/moderator/moderator-tests/moderator-tests.component.html","webpack:///./src/app/moderator/moderator-tests/moderator-tests.component.ts","webpack:///./src/app/moderator/moderator.module.ts","webpack:///./src/app/moderator/modify-redactor/modify-redactor.component.css","webpack:///./src/app/moderator/modify-redactor/modify-redactor.component.html","webpack:///./src/app/moderator/modify-redactor/modify-redactor.component.ts","webpack:///./src/app/moderator/positions-edit/positions-edit.component.css","webpack:///./src/app/moderator/positions-edit/positions-edit.component.html","webpack:///./src/app/moderator/positions-edit/positions-edit.component.ts","webpack:///./src/app/moderator/redactors-list/redactors-list.component.css","webpack:///./src/app/moderator/redactors-list/redactors-list.component.html","webpack:///./src/app/moderator/redactors-list/redactors-list.component.ts","webpack:///./src/app/moderator/services/positions-resolve.service.ts","webpack:///./src/app/moderator/services/positions.service.ts","webpack:///./src/app/moderator/services/redactor-resolve.service.ts","webpack:///./src/app/moderator/services/redactor.service.ts","webpack:///./src/app/moderator/services/redactors-resolve.service.ts","webpack:///./src/app/redactor/redactor-main-page/redactor-main-page.component.css","webpack:///./src/app/redactor/redactor-main-page/redactor-main-page.component.html","webpack:///./src/app/redactor/redactor-main-page/redactor-main-page.component.ts","webpack:///./src/app/redactor/redactor-routing.module.ts","webpack:///./src/app/redactor/redactor.module.ts","webpack:///./src/app/redactor/services/test.service.ts","webpack:///./src/app/redactor/services/user.service.ts","webpack:///./src/app/shared/services/error-handling.service.ts","webpack:///./src/app/shared/services/session-storage.service.ts","webpack:///./src/app/shared/shared.module.ts","webpack:///./src/app/shared/utils/backend-urls.ts","webpack:///./src/app/shared/utils/confirm-password-error-state-matcher.ts","webpack:///./src/app/shared/utils/frontend-urls.ts","webpack:///./src/app/shared/utils/global-variables.ts","webpack:///./src/app/shared/utils/shared-confirm-password.ts","webpack:///./src/app/tests/all-tests/all-tests.component.css","webpack:///./src/app/tests/all-tests/all-tests.component.html","webpack:///./src/app/tests/all-tests/all-tests.component.ts","webpack:///./src/app/tests/check-solved-test/check-solved-test.component.css","webpack:///./src/app/tests/check-solved-test/check-solved-test.component.html","webpack:///./src/app/tests/check-solved-test/check-solved-test.component.ts","webpack:///./src/app/tests/redactor-tests/redactor-tests.component.css","webpack:///./src/app/tests/redactor-tests/redactor-tests.component.html","webpack:///./src/app/tests/redactor-tests/redactor-tests.component.ts","webpack:///./src/app/tests/resolve-test/resolve-test.component.css","webpack:///./src/app/tests/resolve-test/resolve-test.component.html","webpack:///./src/app/tests/resolve-test/resolve-test.component.ts","webpack:///./src/app/tests/services/question-resolve.service.ts","webpack:///./src/app/tests/services/question.service.ts","webpack:///./src/app/tests/services/solution-resolve.service.ts","webpack:///./src/app/tests/services/solutions-for-redactor-resolve.service.ts","webpack:///./src/app/tests/services/solutions.service.ts","webpack:///./src/app/tests/services/test-resolve.service.ts","webpack:///./src/app/tests/services/test.service.ts","webpack:///./src/app/tests/services/tests-resolve.service.ts","webpack:///./src/app/tests/services/user-solutions-resolve.service.ts","webpack:///./src/app/tests/solved-test/solved-test.component.css","webpack:///./src/app/tests/solved-test/solved-test.component.html","webpack:///./src/app/tests/solved-test/solved-test.component.ts","webpack:///./src/app/tests/test-editor/single-question/scala-answer/scala-answer.component.css","webpack:///./src/app/tests/test-editor/single-question/scala-answer/scala-answer.component.html","webpack:///./src/app/tests/test-editor/single-question/scala-answer/scala-answer.component.ts","webpack:///./src/app/tests/test-editor/single-question/single-question.component.css","webpack:///./src/app/tests/test-editor/single-question/single-question.component.html","webpack:///./src/app/tests/test-editor/single-question/single-question.component.ts","webpack:///./src/app/tests/test-editor/single-question/variant-answer/variant-answer.component.css","webpack:///./src/app/tests/test-editor/single-question/variant-answer/variant-answer.component.html","webpack:///./src/app/tests/test-editor/single-question/variant-answer/variant-answer.component.ts","webpack:///./src/app/tests/test-editor/test-editor.component.css","webpack:///./src/app/tests/test-editor/test-editor.component.html","webpack:///./src/app/tests/test-editor/test-editor.component.ts","webpack:///./src/app/tests/tests-routing.module.ts","webpack:///./src/app/tests/tests.module.ts","webpack:///./src/app/tests/user-solution/user-solution.component.css","webpack:///./src/app/tests/user-solution/user-solution.component.html","webpack:///./src/app/tests/user-solution/user-solution.component.ts","webpack:///./src/app/tests/user-tests/user-tests.component.css","webpack:///./src/app/tests/user-tests/user-tests.component.html","webpack:///./src/app/tests/user-tests/user-tests.component.ts","webpack:///./src/app/user-edit/services/change-password.service.ts","webpack:///./src/app/user-edit/services/logged-user-resolve.service.ts","webpack:///./src/app/user-edit/services/user-account.service.ts","webpack:///./src/app/user-edit/services/user-resolve.service.ts","webpack:///./src/app/user-edit/services/user.service.ts","webpack:///./src/app/user-edit/user-edit-page/delete-account/delete-account.component.css","webpack:///./src/app/user-edit/user-edit-page/delete-account/delete-account.component.html","webpack:///./src/app/user-edit/user-edit-page/delete-account/delete-account.component.ts","webpack:///./src/app/user-edit/user-edit-page/user-details-edit/user-details-edit.component.css","webpack:///./src/app/user-edit/user-edit-page/user-details-edit/user-details-edit.component.html","webpack:///./src/app/user-edit/user-edit-page/user-details-edit/user-details-edit.component.ts","webpack:///./src/app/user-edit/user-edit-page/user-edit-page.component.css","webpack:///./src/app/user-edit/user-edit-page/user-edit-page.component.html","webpack:///./src/app/user-edit/user-edit-page/user-edit-page.component.ts","webpack:///./src/app/user-edit/user-edit-page/user-password-change/user-edit-confirm-password.ts","webpack:///./src/app/user-edit/user-edit-page/user-password-change/user-password-change.component.css","webpack:///./src/app/user-edit/user-edit-page/user-password-change/user-password-change.component.html","webpack:///./src/app/user-edit/user-edit-page/user-password-change/user-password-change.component.ts","webpack:///./src/app/user-edit/user-edit-routing.module.ts","webpack:///./src/app/user-edit/user-edit.module.ts","webpack:///./src/app/user/positions/positions.component.css","webpack:///./src/app/user/positions/positions.component.html","webpack:///./src/app/user/positions/positions.component.ts","webpack:///./src/app/user/services/position.service.ts","webpack:///./src/app/user/services/positions-resolve.service.ts","webpack:///./src/app/user/user-page/user-page.component.css","webpack:///./src/app/user/user-page/user-page.component.html","webpack:///./src/app/user/user-page/user-page.component.ts","webpack:///./src/app/user/user-routing.module.ts","webpack:///./src/app/user/user.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import {Route, RouterModule} from '@angular/router';\r\nimport {NgModule} from '@angular/core';\r\nimport {NotFoundComponent} from './error/not-found/not-found.component';\r\nimport {\r\n  MAIN_PAGE_URL, NOT_FOUND_PAGE_URL,\r\n} from './shared/utils/frontend-urls';\r\n\r\n\r\nconst APP_ROUTES: Route[] = [\r\n  {\r\n    path: '',\r\n    pathMatch: 'full',\r\n    redirectTo: `${MAIN_PAGE_URL}`\r\n  },\r\n  {\r\n    path: NOT_FOUND_PAGE_URL,\r\n    component: <any>NotFoundComponent,\r\n  },\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forRoot(APP_ROUTES),\r\n  ],\r\n  exports: [\r\n    RouterModule\r\n  ]\r\n})\r\n\r\nexport class AppRoutingModule {}\r\n","module.exports = \".app-content {\\r\\n  width: 90%;\\r\\n  height: 100vh;\\r\\n  margin: 0px auto;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxVQUFVO0VBQ1YsYUFBYTtFQUNiLGdCQUFnQjtBQUNsQiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmFwcC1jb250ZW50IHtcclxuICB3aWR0aDogOTAlO1xyXG4gIGhlaWdodDogMTAwdmg7XHJcbiAgbWFyZ2luOiAwcHggYXV0bztcclxufVxyXG4iXX0= */\"","module.exports = \"<div appTheme appMetricsProcessor>\\r\\n  <app-header></app-header>\\r\\n  <app-loading-spinner></app-loading-spinner>\\r\\n  <app-error-panel></app-error-panel>\\r\\n  <div class=\\\"app-content\\\">\\r\\n    <router-outlet></router-outlet>\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\"","import {Component, HostListener} from '@angular/core';\r\nimport {SessionStorageService} from './shared/services/session-storage.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n\r\n  constructor(private sessionStorageService: SessionStorageService) {\r\n  }\r\n\r\n  @HostListener('document:keyup', ['$event'])\r\n  handleDeleteKeyboardEvent(evt: KeyboardEvent): void {\r\n    if (this.sessionStorageService.isUser()) {\r\n      if (evt.key === 'PrintScreen') {\r\n        this.copyToClipboard();\r\n        event.preventDefault();\r\n      }\r\n    }\r\n  }\r\n\r\n  @HostListener('contextmenu', ['$event'])\r\n  onRightMouseClick(evt: MouseEvent): void {\r\n    if (this.sessionStorageService.isUser()) {\r\n      if (evt.which === 3) {\r\n        event.preventDefault();\r\n      }\r\n    }\r\n  }\r\n\r\n  copyToClipboard(): void {\r\n    const aux = document.createElement('input');\r\n    aux.setAttribute('value', 'DO NOT EVENT TRY IT!');\r\n    document.body.appendChild(aux);\r\n    aux.select();\r\n    document.execCommand('copy');\r\n    document.body.removeChild(aux);\r\n  }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule} from '@angular/core';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport {MainPageModule} from './main-page/main-page.module';\r\nimport {AppRoutingModule} from './app-routing.module';\r\nimport {HTTP_INTERCEPTORS, HttpClientModule} from '@angular/common/http';\r\nimport {CoreModule} from './core/core.module';\r\nimport {ReactiveFormsModule} from '@angular/forms';\r\nimport {AuthenticationModule} from './authentication/authentication.module';\r\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\nimport {UserEditModule} from './user-edit/user-edit.module';\r\nimport {DialogsModule} from './dialogs/dialogs.module';\r\nimport {ErrorModule} from './error/error.module';\r\nimport {Interceptor} from './interceptor';\r\nimport {RedactorModule} from './redactor/redactor.module';\r\nimport {TestsModule} from './tests/tests.module';\r\nimport {UserModule} from './user/user.module';\r\nimport {ModeratorModule} from './moderator/moderator.module';\r\nimport {MetricsProcessorModule} from \"./metrics-processor/metrics-processor.module\";\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    MainPageModule,\r\n    UserEditModule,\r\n    TestsModule,\r\n    AuthenticationModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    CoreModule,\r\n    ReactiveFormsModule,\r\n    BrowserAnimationsModule,\r\n    DialogsModule,\r\n    ErrorModule,\r\n    RedactorModule,\r\n    UserModule,\r\n    ModeratorModule,\r\n    MetricsProcessorModule],\r\n  providers: [\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: Interceptor,\r\n      multi: true\r\n    },\r\n  ],\r\n  bootstrap: [\r\n    AppComponent\r\n  ],\r\n})\r\n\r\nexport class AppModule { }\r\n","import {Route, RouterModule} from '@angular/router';\r\nimport {NgModule} from '@angular/core';\r\nimport {LOGIN_PAGE_URL, REGISTER_PAGE_URL, RESET_PASSWORD_PAGE_URL} from '../shared/utils/frontend-urls';\r\nimport {ResetPasswordComponent} from './login-page/reset-password/reset-password.component';\r\nimport {NotLoggedUserGuard} from '../guards/not-logged-user-quard';\r\nimport {LoginPageComponent} from './login-page/login-page.component';\r\nimport {RegistrationPageComponent} from './registration-page/registration-page.component';\r\n\r\n\r\nconst AUTHENTICATION_PAGE_ROUTES: Route[] = [\r\n  {\r\n    path: REGISTER_PAGE_URL,\r\n    component: <any>RegistrationPageComponent,\r\n    canActivate: [NotLoggedUserGuard],\r\n    runGuardsAndResolvers: 'always'\r\n  },\r\n  {\r\n    path: LOGIN_PAGE_URL,\r\n    component: <any>LoginPageComponent,\r\n    canActivate: [NotLoggedUserGuard],\r\n    runGuardsAndResolvers: 'always'\r\n  },\r\n  {\r\n    path: RESET_PASSWORD_PAGE_URL,\r\n    component: <any>ResetPasswordComponent,\r\n    canActivate: [NotLoggedUserGuard],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forChild(AUTHENTICATION_PAGE_ROUTES),\r\n  ],\r\n  exports: [\r\n    RouterModule\r\n  ]\r\n})\r\nexport class AuthenticationRoutingModule {}\r\n","module.exports = \".authentication-form-wrapper {\\r\\n  width: 300px;\\r\\n  margin-left: auto;\\r\\n  margin-right: auto;\\r\\n}\\r\\n\\r\\n.authentication-form-button {\\r\\n  margin-top: 30px;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXV0aGVudGljYXRpb24vYXV0aGVudGljYXRpb24uY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsWUFBWTtFQUNaLGlCQUFpQjtFQUNqQixrQkFBa0I7QUFDcEI7O0FBRUE7RUFDRSxnQkFBZ0I7QUFDbEIiLCJmaWxlIjoic3JjL2FwcC9hdXRoZW50aWNhdGlvbi9hdXRoZW50aWNhdGlvbi5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuYXV0aGVudGljYXRpb24tZm9ybS13cmFwcGVyIHtcclxuICB3aWR0aDogMzAwcHg7XHJcbiAgbWFyZ2luLWxlZnQ6IGF1dG87XHJcbiAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xyXG59XHJcblxyXG4uYXV0aGVudGljYXRpb24tZm9ybS1idXR0b24ge1xyXG4gIG1hcmdpbi10b3A6IDMwcHg7XHJcbn1cclxuIl19 */\"","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { LoginPageComponent } from './login-page/login-page.component';\r\nimport { RegistrationPageComponent } from './registration-page/registration-page.component';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport {MatButtonModule, MatFormFieldModule, MatInputModule, MatSelectModule} from '@angular/material';\r\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\nimport { ResetPasswordComponent } from './login-page/reset-password/reset-password.component';\r\nimport {AuthenticationRoutingModule} from './authentication-routing.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    AuthenticationRoutingModule,\r\n    ReactiveFormsModule,\r\n    MatFormFieldModule,\r\n    MatSelectModule,\r\n    MatInputModule,\r\n    FormsModule,\r\n    MatButtonModule,\r\n    BrowserAnimationsModule\r\n  ],\r\n  declarations: [\r\n    LoginPageComponent,\r\n    RegistrationPageComponent,\r\n    ResetPasswordComponent\r\n  ]\r\n})\r\nexport class AuthenticationModule { }\r\n","module.exports = \".forgotten-password {\\r\\n  margin-top: 20px;\\r\\n  cursor: pointer;\\r\\n  float: right;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXV0aGVudGljYXRpb24vbG9naW4tcGFnZS9sb2dpbi1wYWdlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxnQkFBZ0I7RUFDaEIsZUFBZTtFQUNmLFlBQVk7QUFDZCIsImZpbGUiOiJzcmMvYXBwL2F1dGhlbnRpY2F0aW9uL2xvZ2luLXBhZ2UvbG9naW4tcGFnZS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmZvcmdvdHRlbi1wYXNzd29yZCB7XHJcbiAgbWFyZ2luLXRvcDogMjBweDtcclxuICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgZmxvYXQ6IHJpZ2h0O1xyXG59XHJcbiJdfQ== */\"","module.exports = \"<div class=\\\"authentication-form-wrapper \\\" >\\r\\n    <form [formGroup]=\\\"loginForm\\\" class=\\\"material-form authentication-form\\\">\\r\\n      <div>\\r\\n        <mat-form-field>\\r\\n          <input matInput formControlName=\\\"username\\\" placeholder=\\\"Nazwa użytkownika\\\">\\r\\n          <mat-error *ngIf=\\\"loginForm.get('username').hasError('required')\\\">\\r\\n            Nazwa użytkownika jest wymagana.\\r\\n          </mat-error>\\r\\n          <mat-error *ngIf=\\\"loginForm.get('username').hasError('minlength')\\\">\\r\\n            Nazwa użytkownika musi zawierać co najmniej{{minUsernameLength}} znaków.\\r\\n          </mat-error>\\r\\n          <mat-error *ngIf=\\\"loginForm.get('username').hasError('maxlength')\\\">\\r\\n            Nazwa użytkownika może zawierać maksymalnie {{maxUsernameLength}} znaków.\\r\\n          </mat-error>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div>\\r\\n        <mat-form-field>\\r\\n          <input matInput formControlName=\\\"password\\\" type=\\\"password\\\" placeholder=\\\"Hasło\\\">\\r\\n\\r\\n          <mat-error *ngIf=\\\"loginForm.get('password').hasError('required')\\\">\\r\\n            Hasło jest wymagane\\r\\n          </mat-error>\\r\\n          <mat-error *ngIf=\\\"loginForm.get('password').hasError('minlength')\\\">\\r\\n            Hasło musi zawierać co najmniej {{minPasswordLength}} znaków.\\r\\n          </mat-error>\\r\\n          <mat-error *ngIf=\\\"loginForm.get('password').hasError('maxlength')\\\">\\r\\n            Hasło może zawierać maksymalnie {{maxPasswordLength}} znaków.\\r\\n          </mat-error>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div class=\\\"authentication-form-button\\\">\\r\\n        <button mat-button [disabled]=\\\"loginForm.invalid || getProcessingLogin()\\\" type=\\\"submit\\\" (click)=\\\"login()\\\">Zaloguj się</button>\\r\\n      </div>\\r\\n\\r\\n    </form>\\r\\n  <div>\\r\\n    <div class=\\\"forgotten-password\\\"\\r\\n         [routerLink]=\\\"['/', resetPasswordPage]\\\">\\r\\n        Zapomniałeś hasła?\\r\\n    </div>\\r\\n    <div style=\\\"clear:both\\\"></div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\n\r\nimport {AuthenticationService} from '../services/authentication.service';\r\nimport {LoadingSpinnerComponent} from '../../core/loading-spinner/loading-spinner.component';\r\nimport {MAX_PASSWORD_LENGTH, MAX_USERNAME_LENGTH, MIN_PASSWORD_LENGTH, MIN_USERNAME_LENGTH} from '../../shared/utils/global-variables';\r\nimport {RESET_PASSWORD_PAGE_URL} from '../../shared/utils/frontend-urls';\r\n\r\n@Component({\r\n  selector: 'app-login-page',\r\n  templateUrl: './login-page.component.html',\r\n  styleUrls: [\r\n    './login-page.component.css',\r\n    '../authentication.css'\r\n  ]\r\n})\r\nexport class LoginPageComponent implements OnInit {\r\n  loginForm: FormGroup;\r\n\r\n  minUsernameLength = MIN_USERNAME_LENGTH;\r\n  maxUsernameLength = MAX_USERNAME_LENGTH;\r\n  minPasswordLength = MIN_PASSWORD_LENGTH;\r\n  maxPasswordLength = MAX_PASSWORD_LENGTH;\r\n\r\n  resetPasswordPage = RESET_PASSWORD_PAGE_URL;\r\n\r\n  constructor(private formBuilder: FormBuilder,\r\n              private authenticationService: AuthenticationService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.buildForm();\r\n  }\r\n  buildForm(): void {\r\n    this.loginForm = this.formBuilder.group({\r\n      username: ['', [\r\n        Validators.required,\r\n        Validators.minLength(this.minUsernameLength),\r\n        Validators.maxLength(this.maxUsernameLength)\r\n      ]],\r\n      password: ['', [\r\n        Validators.required,\r\n        Validators.minLength(this.minPasswordLength),\r\n        Validators.maxLength(this.maxPasswordLength)\r\n      ]],\r\n    });\r\n  }\r\n  login(): void {\r\n    this.authenticationService.login(this.loginForm.value);\r\n  }\r\n  getProcessingLogin(): boolean {\r\n    return LoadingSpinnerComponent.showLoadingIndicator;\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2F1dGhlbnRpY2F0aW9uL2xvZ2luLXBhZ2UvcmVzZXQtcGFzc3dvcmQvcmVzZXQtcGFzc3dvcmQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"authentication-form-wrapper \\\">\\r\\n  <div *ngIf=\\\"!wasSent; else resetRequestSended\\\">\\r\\n    <form [formGroup]=\\\"passwordResetForm\\\" class=\\\"material-form authentication-form\\\">\\r\\n      <div>\\r\\n        <mat-form-field>\\r\\n          <input matInput email formControlName=\\\"email\\\" placeholder=\\\"Email\\\">\\r\\n          <mat-error *ngIf=\\\"passwordResetForm.get('email').hasError('required')\\\">\\r\\n            Email jest wymagany\\r\\n          </mat-error>\\r\\n          <mat-error *ngIf=\\\"passwordResetForm.get('email').hasError('email')\\\">\\r\\n            Podaj prawidłowy adres email\\r\\n          </mat-error>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div class=\\\"authentication-form-button\\\">\\r\\n        <button mat-button\\r\\n                [disabled]=\\\"passwordResetForm.invalid || getProcessingReset()\\\"\\r\\n                type=\\\"submit\\\" (click)=\\\"resetPassword()\\\">Resetuj hasło</button>\\r\\n      </div>\\r\\n\\r\\n    </form>\\r\\n  </div>\\r\\n  <div>\\r\\n    <ng-template #resetRequestSended>\\r\\n      <span >\\r\\n        Jeśli email jest poprawny hasło zostało wysłane.\\r\\n      </span>\\r\\n    </ng-template>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {PasswordService} from '../../services/password.service';\r\nimport {LoadingSpinnerComponent} from '../../../core/loading-spinner/loading-spinner.component';\r\n\r\n@Component({\r\n  selector: 'app-reset-password',\r\n  templateUrl: './reset-password.component.html',\r\n  styleUrls: [\r\n    '../../authentication.css',\r\n    './reset-password.component.css'\r\n  ]\r\n})\r\nexport class ResetPasswordComponent implements OnInit {\r\n  wasSent = false;\r\n  passwordResetForm: FormGroup;\r\n\r\n  constructor(private formBuilder: FormBuilder,\r\n              private passwordService: PasswordService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.buildForm();\r\n  }\r\n  buildForm(): void {\r\n    this.passwordResetForm = this.formBuilder.group({\r\n      email: ['', [Validators.required]]\r\n    });\r\n  }\r\n\r\n  resetPassword(): void {\r\n    this.passwordService.resetPassword(\r\n      this.passwordResetForm.value\r\n    ).subscribe(() => {\r\n      this.wasSent = true;\r\n    });\r\n  }\r\n\r\n  getProcessingReset(): boolean {\r\n    return LoadingSpinnerComponent.showLoadingIndicator;\r\n  }\r\n}\r\n","import {SharedConfirmPassword} from '../../shared/utils/shared-confirm-password';\r\nimport {AbstractControl} from '@angular/forms';\r\n\r\nexport class RegistrationConfirmPassword extends SharedConfirmPassword {\r\n  matchPassword(abstractControl: AbstractControl): {matchPassword: boolean} {\r\n    return super.matchPasswordHelper(abstractControl, 'password',\r\n      'confirmPassword');\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2F1dGhlbnRpY2F0aW9uL3JlZ2lzdHJhdGlvbi1wYWdlL3JlZ2lzdHJhdGlvbi1wYWdlLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"authentication-form-wrapper \\\">\\r\\n    <form [formGroup]=\\\"registerForm\\\" class=\\\"material-form authentication-form\\\">\\r\\n      <div>\\r\\n        <mat-form-field>\\r\\n          <input matInput formControlName=\\\"username\\\" placeholder=\\\"Nazwa użytkownika\\\">\\r\\n          <mat-error *ngIf=\\\"registerForm.get('username').hasError('required')\\\">\\r\\n            Nazwa użytkownika jest wymagana\\r\\n          </mat-error>\\r\\n          <mat-error *ngIf=\\\"registerForm.get('username').hasError('minlength')\\\">\\r\\n            Nazwa użytkownika musi zawierać co najmniej {{minUsernameLength}} znaków.\\r\\n          </mat-error>\\r\\n          <mat-error *ngIf=\\\"registerForm.get('username').hasError('maxlength')\\\">\\r\\n            Nazwa użytkownika może zawierać maksymalnie {{maxUsernameLength}} znaków.\\r\\n          </mat-error>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div>\\r\\n        <mat-form-field>\\r\\n          <input matInput formControlName=\\\"nameSurname\\\" placeholder=\\\"Imię i nazwisko\\\">\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div>\\r\\n        <mat-form-field>\\r\\n          <mat-select formControlName=\\\"language\\\" placeholder=\\\"Język\\\">\\r\\n            <mat-option [value]=\\\"'pl'\\\">Polski</mat-option>\\r\\n            <mat-option [value]=\\\"'en'\\\">Angielski</mat-option>\\r\\n          </mat-select>\\r\\n          <mat-error *ngIf=\\\"registerForm.get('language').hasError('required')\\\">\\r\\n            Język jest wymagany.\\r\\n          </mat-error>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div>\\r\\n        <mat-form-field>\\r\\n          <input matInput email formControlName=\\\"email\\\" placeholder=\\\"Email\\\">\\r\\n          <mat-error *ngIf=\\\"registerForm.get('email').hasError('required')\\\">\\r\\n            Email jest wymagany.\\r\\n          </mat-error>\\r\\n          <mat-error *ngIf=\\\"registerForm.get('email').hasError('email')\\\">\\r\\n            Podaj prawidłowy adres email.\\r\\n          </mat-error>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div>\\r\\n        <mat-form-field>\\r\\n          <input matInput formControlName=\\\"password\\\" type=\\\"password\\\" placeholder=\\\"Hasło\\\" >\\r\\n\\r\\n          <mat-error *ngIf=\\\"registerForm.get('password').hasError('required')\\\">\\r\\n            Hasło jest wymagane\\r\\n          </mat-error>\\r\\n          <mat-error *ngIf=\\\"registerForm.get('password').hasError('minlength')\\\">\\r\\n            Hasło musi zawierać co najmniej {{minPasswordLength}} znaków.\\r\\n          </mat-error>\\r\\n          <mat-error *ngIf=\\\"registerForm.get('password').hasError('maxlength')\\\">\\r\\n            Hasło może zawierać maksymalnie {{maxPasswordLength}} znaków.\\r\\n          </mat-error>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div>\\r\\n        <mat-form-field>\\r\\n          <input matInput formControlName=\\\"confirmPassword\\\" type=\\\"password\\\"\\r\\n                 placeholder=\\\"Potwierdź hasło\\\" [errorStateMatcher]=\\\"errorMatcher\\\">\\r\\n\\r\\n          <mat-error *ngIf=\\\"registerForm.get('confirmPassword').hasError('required')\\\">\\r\\n            Musisz potwierdzić hasło\\r\\n          </mat-error>\\r\\n          <mat-error\\r\\n                     *ngIf=\\\"registerForm.hasError('matchPassword')\\\">\\r\\n            Hasła są różne\\r\\n          </mat-error>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div class=\\\"authentication-form-button\\\">\\r\\n        <button mat-button\\r\\n                [disabled]=\\\"registerForm.invalid || registerForm.errors || getProcessingRegistration()\\\"\\r\\n                type=\\\"submit\\\" (click)=\\\"register()\\\"\\r\\n                >Zarejestruj</button>\\r\\n      </div>\\r\\n\\r\\n    </form>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {AuthenticationService} from '../services/authentication.service';\r\nimport {ConfirmPasswordErrorMatcher} from '../../shared/utils/confirm-password-error-state-matcher';\r\nimport {LoadingSpinnerComponent} from '../../core/loading-spinner/loading-spinner.component';\r\nimport {RegistrationConfirmPassword} from './registration-confirm-password';\r\nimport {MAX_PASSWORD_LENGTH, MAX_USERNAME_LENGTH, MIN_PASSWORD_LENGTH, MIN_USERNAME_LENGTH} from '../../shared/utils/global-variables';\r\n\r\n@Component({\r\n  selector: 'app-registration-page',\r\n  templateUrl: './registration-page.component.html',\r\n  styleUrls: [\r\n    './registration-page.component.css',\r\n    '../authentication.css'\r\n  ]\r\n})\r\nexport class RegistrationPageComponent implements OnInit {\r\n\r\n  registerForm: FormGroup;\r\n  confirmPassword = new RegistrationConfirmPassword();\r\n  errorMatcher = new ConfirmPasswordErrorMatcher();\r\n\r\n  minUsernameLength = MIN_USERNAME_LENGTH;\r\n  maxUsernameLength = MAX_USERNAME_LENGTH;\r\n  minPasswordLength = MIN_PASSWORD_LENGTH;\r\n  maxPasswordLength = MAX_PASSWORD_LENGTH;\r\n\r\n  constructor(private formBuilder: FormBuilder,\r\n              private authenticationService: AuthenticationService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.buildForm();\r\n  }\r\n  buildForm(): void {\r\n    this.registerForm = this.formBuilder.group({\r\n      username: ['', [\r\n        Validators.required,\r\n        Validators.minLength(this.minUsernameLength),\r\n        Validators.maxLength(this.maxUsernameLength)\r\n      ]],\r\n      password: ['', [\r\n        Validators.required,\r\n        Validators.minLength(this.minPasswordLength),\r\n        Validators.maxLength(this.maxPasswordLength)\r\n      ]],\r\n      confirmPassword: ['', [Validators.required]],\r\n      email: ['', [Validators.required]],\r\n      nameSurname: [''],\r\n      language: ['', Validators.required]\r\n    }, {\r\n      validator: this.confirmPassword.matchPassword\r\n    } );\r\n  }\r\n  register(): void {\r\n    this.authenticationService.register(this.registerForm.value);\r\n  }\r\n  getProcessingRegistration(): boolean {\r\n    return LoadingSpinnerComponent.showLoadingIndicator;\r\n  }\r\n\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient, HttpResponse} from '@angular/common/http';\r\nimport {SessionStorageService} from '../../shared/services/session-storage.service';\r\nimport {ErrorHandlingService} from '../../shared/services/error-handling.service';\r\nimport {Router} from '@angular/router';\r\nimport {LoginDetails} from '../../models/user/login-details';\r\nimport {LoggedUser} from '../../models/user/logged-user';\r\nimport {RegisterUserDetails} from '../../models/user/register-user-details';\r\nimport {LOGIN_URL, REGISTER_URL} from '../../shared/utils/backend-urls';\r\n\r\nimport {MODERATOR_PAGE_URL, REDACTOR_PAGE_URL, USER_PAGE_URL} from '../../shared/utils/frontend-urls';\r\nimport {ROLE_MODERATOR, ROLE_REDACTOR, ROLE_USER} from '../../shared/utils/global-variables';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthenticationService {\r\n\r\n  constructor(private httpClient: HttpClient,\r\n              private sessionStorage: SessionStorageService,\r\n              private errorHandlingService: ErrorHandlingService,\r\n              private router: Router) {\r\n  }\r\n\r\n  handleValidUser(response: HttpResponse<LoggedUser>): void {\r\n    this.sessionStorage.storeSession(response.body,\r\n      response.headers.get('Authorization'));\r\n    switch (this.sessionStorage.getUser().roles[0].name) {\r\n      case ROLE_USER:\r\n        this.router.navigate([USER_PAGE_URL]);\r\n        break;\r\n      case ROLE_MODERATOR:\r\n        this.router.navigate([MODERATOR_PAGE_URL]);\r\n        break;\r\n      case ROLE_REDACTOR:\r\n        this.router.navigate([REDACTOR_PAGE_URL]);\r\n        break;\r\n    }\r\n  }\r\n\r\n  login(loginDetails: LoginDetails): void {\r\n    this.httpClient.post(LOGIN_URL, loginDetails, {observe: 'response'})\r\n      .subscribe((response: HttpResponse<LoggedUser>) => {\r\n        this.handleValidUser(response);\r\n      });\r\n  }\r\n\r\n  register(registerDetails: RegisterUserDetails): void {\r\n    this.httpClient.post(REGISTER_URL, registerDetails, {observe: 'response'})\r\n      .subscribe((response: HttpResponse<LoggedUser>) => {\r\n        this.handleValidUser(response);\r\n      });\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {ResetPasswordData} from '../../models/user/reset-password-data';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {PASSWORD_RESET_URL} from '../../shared/utils/backend-urls';\r\nimport {Observable} from 'rxjs/Observable';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PasswordService {\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  resetPassword(data: ResetPasswordData): Observable<any> {\r\n    return this.httpClient.post(\r\n      PASSWORD_RESET_URL,\r\n      data\r\n    );\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HeaderComponent } from './header/header.component';\r\nimport { LoadingSpinnerComponent } from './loading-spinner/loading-spinner.component';\r\nimport {RouterModule} from '@angular/router';\r\nimport { ErrorPanelComponent } from './error-panel/error-panel.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule\r\n  ],\r\n  exports: [\r\n    HeaderComponent,\r\n    LoadingSpinnerComponent,\r\n    ErrorPanelComponent\r\n  ],\r\n  declarations: [\r\n    HeaderComponent,\r\n    LoadingSpinnerComponent,\r\n    ErrorPanelComponent\r\n  ]\r\n})\r\nexport class CoreModule { }\r\n","module.exports = \".error-wrapper {\\r\\n  width: 50%;\\r\\n  margin: 50px auto;\\r\\n  background-color: var(--error);\\r\\n  color: var(--primary-text-color);\\r\\n  font-size: 20px;\\r\\n  padding: 20px;\\r\\n  text-align: center;\\r\\n  min-height: 150px;\\r\\n  border: 1px var(--primary-text-color) solid;\\r\\n}\\r\\na, a:hover, a:visited {\\r\\n  color: var(--primary-text-color);\\r\\n  cursor: default;\\r\\n  text-decoration: none;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29yZS9lcnJvci1wYW5lbC9lcnJvci1wYW5lbC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsVUFBVTtFQUNWLGlCQUFpQjtFQUNqQiw4QkFBOEI7RUFDOUIsZ0NBQWdDO0VBQ2hDLGVBQWU7RUFDZixhQUFhO0VBQ2Isa0JBQWtCO0VBQ2xCLGlCQUFpQjtFQUNqQiwyQ0FBMkM7QUFDN0M7QUFDQTtFQUNFLGdDQUFnQztFQUNoQyxlQUFlO0VBQ2YscUJBQXFCO0FBQ3ZCIiwiZmlsZSI6InNyYy9hcHAvY29yZS9lcnJvci1wYW5lbC9lcnJvci1wYW5lbC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmVycm9yLXdyYXBwZXIge1xyXG4gIHdpZHRoOiA1MCU7XHJcbiAgbWFyZ2luOiA1MHB4IGF1dG87XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tZXJyb3IpO1xyXG4gIGNvbG9yOiB2YXIoLS1wcmltYXJ5LXRleHQtY29sb3IpO1xyXG4gIGZvbnQtc2l6ZTogMjBweDtcclxuICBwYWRkaW5nOiAyMHB4O1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICBtaW4taGVpZ2h0OiAxNTBweDtcclxuICBib3JkZXI6IDFweCB2YXIoLS1wcmltYXJ5LXRleHQtY29sb3IpIHNvbGlkO1xyXG59XHJcbmEsIGE6aG92ZXIsIGE6dmlzaXRlZCB7XHJcbiAgY29sb3I6IHZhcigtLXByaW1hcnktdGV4dC1jb2xvcik7XHJcbiAgY3Vyc29yOiBkZWZhdWx0O1xyXG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxufVxyXG4iXX0= */\"","module.exports = \"<div *ngIf=\\\"hasError() === true\\\" class=\\\"error-wrapper\\\">\\r\\n  <a *ngIf=\\\"errorCode() != 0\\\" href=\\\"https://http.cat/{{errorCode()}}\\\">\\r\\n    <h1>Błąd</h1>\\r\\n  </a>\\r\\n  <ng-container *ngIf=\\\"errorCode() && errorMessage(); then standardError; else fatalError\\\">\\r\\n\\r\\n  </ng-container>\\r\\n  <ng-template #standardError>\\r\\n    <h3>\\r\\n      {{errorMessage()}}\\r\\n    </h3>\\r\\n  </ng-template>\\r\\n  <ng-template #fatalError>\\r\\n    <ng-container *ngIf=\\\"!errorMessage() && !errorCode(); then serviceUnavilable; else unknownError\\\"></ng-container>\\r\\n  </ng-template>\\r\\n  <ng-template #unknownError>\\r\\n    <h3>\\r\\n      Nieznany błąd\\r\\n    </h3>\\r\\n  </ng-template>\\r\\n  <ng-template #serviceUnavilable>\\r\\n    <h3>\\r\\n      Usługa niedostępna\\r\\n    </h3>\\r\\n  </ng-template>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport {ErrorHandlingService} from '../../shared/services/error-handling.service';\r\n\r\n@Component({\r\n  selector: 'app-error-panel',\r\n  templateUrl: './error-panel.component.html',\r\n  styleUrls: ['./error-panel.component.css']\r\n})\r\nexport class ErrorPanelComponent implements OnInit {\r\n\r\n  constructor(private errorHandlingService: ErrorHandlingService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n  hasError(): boolean {\r\n    return this.errorHandlingService.hasError();\r\n  }\r\n  errorCode(): number {\r\n    return this.errorHandlingService.getErrorCode();\r\n  }\r\n  errorMessage(): string {\r\n    return this.errorHandlingService.getErrorMessage();\r\n  }\r\n}\r\n","module.exports = \".header {\\r\\n  background-color: var(--header-background-color);\\r\\n  color: var(--secondary-text-color);\\r\\n  margin-bottom: 50px;\\r\\n  position: -webkit-sticky; /* Safari */\\r\\n  position: sticky;\\r\\n  top: 0;\\r\\n  z-index: 101;\\r\\n}\\r\\n.logo {\\r\\n  font-size: 30px;\\r\\n  font-weight: bold;\\r\\n  margin-right: 20px;\\r\\n  color: var(--logo-color);\\r\\n}\\r\\n.item {\\r\\n  margin: 0px 5px 0px 5px;\\r\\n}\\r\\nli, span {\\r\\n  cursor: pointer;\\r\\n  padding: 5px 15px;\\r\\n}\\r\\nli:hover, span:hover {\\r\\n  background-color: var(--header-background-color-hover);\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29yZS9oZWFkZXIvaGVhZGVyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxnREFBZ0Q7RUFDaEQsa0NBQWtDO0VBQ2xDLG1CQUFtQjtFQUNuQix3QkFBd0IsRUFBRSxXQUFXO0VBQ3JDLGdCQUFnQjtFQUNoQixNQUFNO0VBQ04sWUFBWTtBQUNkO0FBQ0E7RUFDRSxlQUFlO0VBQ2YsaUJBQWlCO0VBQ2pCLGtCQUFrQjtFQUNsQix3QkFBd0I7QUFDMUI7QUFDQTtFQUNFLHVCQUF1QjtBQUN6QjtBQUNBO0VBQ0UsZUFBZTtFQUNmLGlCQUFpQjtBQUNuQjtBQUNBO0VBQ0Usc0RBQXNEO0FBQ3hEIiwiZmlsZSI6InNyYy9hcHAvY29yZS9oZWFkZXIvaGVhZGVyLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuaGVhZGVyIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1oZWFkZXItYmFja2dyb3VuZC1jb2xvcik7XHJcbiAgY29sb3I6IHZhcigtLXNlY29uZGFyeS10ZXh0LWNvbG9yKTtcclxuICBtYXJnaW4tYm90dG9tOiA1MHB4O1xyXG4gIHBvc2l0aW9uOiAtd2Via2l0LXN0aWNreTsgLyogU2FmYXJpICovXHJcbiAgcG9zaXRpb246IHN0aWNreTtcclxuICB0b3A6IDA7XHJcbiAgei1pbmRleDogMTAxO1xyXG59XHJcbi5sb2dvIHtcclxuICBmb250LXNpemU6IDMwcHg7XHJcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgbWFyZ2luLXJpZ2h0OiAyMHB4O1xyXG4gIGNvbG9yOiB2YXIoLS1sb2dvLWNvbG9yKTtcclxufVxyXG4uaXRlbSB7XHJcbiAgbWFyZ2luOiAwcHggNXB4IDBweCA1cHg7XHJcbn1cclxubGksIHNwYW4ge1xyXG4gIGN1cnNvcjogcG9pbnRlcjtcclxuICBwYWRkaW5nOiA1cHggMTVweDtcclxufVxyXG5saTpob3Zlciwgc3Bhbjpob3ZlciB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0taGVhZGVyLWJhY2tncm91bmQtY29sb3ItaG92ZXIpO1xyXG59XHJcbiJdfQ== */\"","module.exports = \"<nav class=\\\"navbar navbar-expand-md navbar-dark header\\\">\\r\\n  <div class=\\\"logo\\\">\\r\\n    <div>\\r\\n      <span (click)=\\\"navigateToMainPage()\\\">\\r\\n      Magenta\\r\\n      </span>\\r\\n      <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\".dual-collapse2\\\">\\r\\n        <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n      </button>\\r\\n    </div>\\r\\n  </div >\\r\\n  <div class=\\\"navbar-collapse collapse dual-collapse2\\\">\\r\\n    <ul class=\\\"navbar-nav ml-auto\\\">\\r\\n      <li *ngIf=\\\"!isUserLoggedIn()\\\" class=\\\"nav-item item\\\"\\r\\n          (click)=\\\"navigate([registerPage])\\\">Zarejestruj się</li>\\r\\n      <li *ngIf=\\\"!isUserLoggedIn()\\\" class=\\\"nav-item item\\\"\\r\\n          (click)=\\\"navigate([loginPage])\\\" >Zaloguj się</li>\\r\\n\\r\\n\\r\\n      <li *ngIf=\\\"isUserLoggedIn()\\\" class=\\\"nav-item item\\\" (click)=\\\"navigate([loggedUserPage])\\\">Moje konto</li>\\r\\n      <li *ngIf=\\\"isUserLoggedIn()\\\" class=\\\"nav-item item\\\"\\r\\n          (click)=\\\"logout()\\\">Wyloguj się</li>\\r\\n    </ul>\\r\\n  </div>\\r\\n\\r\\n</nav>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport {SessionStorageService} from '../../shared/services/session-storage.service';\r\nimport {Router} from '@angular/router';\r\nimport {ErrorHandlingService} from '../../shared/services/error-handling.service';\r\nimport {\r\n  LOGIN_PAGE_URL,\r\n  MAIN_PAGE_URL, MODERATOR_PAGE_URL, REDACTOR_PAGE_URL,\r\n  REGISTER_PAGE_URL,\r\n  USER_EDIT_PAGE_URL, USER_PAGE_URL\r\n} from '../../shared/utils/frontend-urls';\r\nimport {ROLE_MODERATOR, ROLE_REDACTOR, ROLE_USER} from '../../shared/utils/global-variables';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n\r\n  mainPage = MAIN_PAGE_URL;\r\n  loginPage = LOGIN_PAGE_URL;\r\n  registerPage = REGISTER_PAGE_URL;\r\n  loggedUserPage = USER_EDIT_PAGE_URL;\r\n\r\n  constructor(private sessionStorage: SessionStorageService,\r\n              private errorHandlingService: ErrorHandlingService,\r\n              private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n  isUserLoggedIn(): boolean {\r\n    return this.sessionStorage.isUserLoggedIn();\r\n  }\r\n  logout(): void {\r\n    this.sessionStorage.logout();\r\n    this.router.navigate([this.mainPage]);\r\n  }\r\n  navigate(commands: any[]): void {\r\n    this.errorHandlingService.clear();\r\n    this.router.navigated = false;\r\n    this.router.navigate(commands);\r\n  }\r\n  navigateToMainPage(): void {\r\n    const role = this.sessionStorage.getUser().roles[0].name;\r\n    switch (role) {\r\n      case ROLE_REDACTOR:\r\n        this.router.navigate([REDACTOR_PAGE_URL]);\r\n        break;\r\n      case ROLE_MODERATOR:\r\n        this.router.navigate([MODERATOR_PAGE_URL]);\r\n        break;\r\n      case ROLE_USER:\r\n        this.router.navigate([USER_PAGE_URL]);\r\n        break;\r\n\r\n    }\r\n  }\r\n}\r\n","module.exports = \".spinner {\\r\\n  border: 16px solid var(--background-secondary-color);\\r\\n  border-top: 16px solid var(--main-color);\\r\\n  border-radius: 50%;\\r\\n  width: 80px;\\r\\n  height: 80px;\\r\\n  margin-top: -40px;\\r\\n  margin-left: -40px;\\r\\n\\r\\n  -webkit-animation: spin 700ms linear infinite;\\r\\n\\r\\n          animation: spin 700ms linear infinite;\\r\\n  position: fixed;\\r\\n  top: 50%;\\r\\n  left: 50%;\\r\\n  z-index: 1;\\r\\n}\\r\\n@-webkit-keyframes spin {\\r\\n  0% { -webkit-transform: rotate(0deg); transform: rotate(0deg) }\\r\\n  100% { -webkit-transform: rotate(360deg); transform: rotate(360deg) }\\r\\n}\\r\\n@keyframes spin {\\r\\n  0% { -webkit-transform: rotate(0deg); transform: rotate(0deg) }\\r\\n  100% { -webkit-transform: rotate(360deg); transform: rotate(360deg) }\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29yZS9sb2FkaW5nLXNwaW5uZXIvbG9hZGluZy1zcGlubmVyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxvREFBb0Q7RUFDcEQsd0NBQXdDO0VBQ3hDLGtCQUFrQjtFQUNsQixXQUFXO0VBQ1gsWUFBWTtFQUNaLGlCQUFpQjtFQUNqQixrQkFBa0I7O0VBRWxCLDZDQUFxQzs7VUFBckMscUNBQXFDO0VBQ3JDLGVBQWU7RUFDZixRQUFRO0VBQ1IsU0FBUztFQUNULFVBQVU7QUFDWjtBQUNBO0VBQ0UsS0FBSywrQkFBc0IsRUFBdEIsd0JBQXdCO0VBQzdCLE9BQU8saUNBQXdCLEVBQXhCLDBCQUEwQjtBQUNuQztBQUhBO0VBQ0UsS0FBSywrQkFBc0IsRUFBdEIsd0JBQXdCO0VBQzdCLE9BQU8saUNBQXdCLEVBQXhCLDBCQUEwQjtBQUNuQyIsImZpbGUiOiJzcmMvYXBwL2NvcmUvbG9hZGluZy1zcGlubmVyL2xvYWRpbmctc3Bpbm5lci5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnNwaW5uZXIge1xyXG4gIGJvcmRlcjogMTZweCBzb2xpZCB2YXIoLS1iYWNrZ3JvdW5kLXNlY29uZGFyeS1jb2xvcik7XHJcbiAgYm9yZGVyLXRvcDogMTZweCBzb2xpZCB2YXIoLS1tYWluLWNvbG9yKTtcclxuICBib3JkZXItcmFkaXVzOiA1MCU7XHJcbiAgd2lkdGg6IDgwcHg7XHJcbiAgaGVpZ2h0OiA4MHB4O1xyXG4gIG1hcmdpbi10b3A6IC00MHB4O1xyXG4gIG1hcmdpbi1sZWZ0OiAtNDBweDtcclxuXHJcbiAgYW5pbWF0aW9uOiBzcGluIDcwMG1zIGxpbmVhciBpbmZpbml0ZTtcclxuICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgdG9wOiA1MCU7XHJcbiAgbGVmdDogNTAlO1xyXG4gIHotaW5kZXg6IDE7XHJcbn1cclxuQGtleWZyYW1lcyBzcGluIHtcclxuICAwJSB7IHRyYW5zZm9ybTogcm90YXRlKDBkZWcpIH1cclxuICAxMDAlIHsgdHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKSB9XHJcbn1cclxuIl19 */\"","module.exports = \"<div *ngIf=\\\"getShowLoadingIndicator()\\\" class=\\\"spinner\\\"></div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport {\r\n  Router, NavigationStart, NavigationEnd,\r\n  NavigationCancel, NavigationError, Event\r\n} from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-loading-spinner',\r\n  templateUrl: './loading-spinner.component.html',\r\n  styleUrls: ['./loading-spinner.component.css']\r\n})\r\nexport class LoadingSpinnerComponent implements OnInit {\r\n\r\n  static showLoadingIndicator = true;\r\n  static setShowLoadingIndicator(showLoadingIndicator: boolean): void {\r\n    LoadingSpinnerComponent.showLoadingIndicator = showLoadingIndicator;\r\n  }\r\n  constructor(private router: Router) {\r\n    this.router.events.subscribe((routerEvent: Event) => {\r\n      if (routerEvent instanceof NavigationStart) {\r\n        LoadingSpinnerComponent.showLoadingIndicator = true;\r\n      }\r\n      if (routerEvent instanceof NavigationEnd ||\r\n        routerEvent instanceof NavigationError ||\r\n        routerEvent instanceof NavigationCancel) {\r\n        LoadingSpinnerComponent.showLoadingIndicator = false;\r\n      }\r\n\r\n    });\r\n  }\r\n  getShowLoadingIndicator(): boolean {\r\n    return LoadingSpinnerComponent.showLoadingIndicator;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","module.exports = \".dialog-wrapper {\\r\\n  text-align: center;\\r\\n}\\r\\n.dialog-title {\\r\\n  font-weight: bold;\\r\\n}\\r\\n.dialog-button {\\r\\n  margin-left: 10px;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZGlhbG9ncy9kaWFsb2dzLXN0eWxlLmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGtCQUFrQjtBQUNwQjtBQUNBO0VBQ0UsaUJBQWlCO0FBQ25CO0FBQ0E7RUFDRSxpQkFBaUI7QUFDbkIiLCJmaWxlIjoic3JjL2FwcC9kaWFsb2dzL2RpYWxvZ3Mtc3R5bGUuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmRpYWxvZy13cmFwcGVyIHtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbn1cclxuLmRpYWxvZy10aXRsZSB7XHJcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbn1cclxuLmRpYWxvZy1idXR0b24ge1xyXG4gIG1hcmdpbi1sZWZ0OiAxMHB4O1xyXG59XHJcbiJdfQ== */\"","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport {MatButtonModule, MatDialogModule, MatInputModule} from '@angular/material';\r\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\nimport { WarningDialogComponent } from './warning-dialog/warning-dialog.component';\r\nimport { YesNoDialogComponent } from './yes-no-dialog/yes-no-dialog.component';\r\nimport { DeleteUserAccountDialogComponent } from './yes-no-dialog/delete-user-account-dialog/delete-user-account-dialog.component';\r\nimport { AssignRedactorToTestComponent } from './warning-dialog/assign-redactor-to-test/assign-redactor-to-test.component';\r\nimport { ImportDialogComponent } from './warning-dialog/import-dialog/import-dialog.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    MatDialogModule,\r\n    MatButtonModule,\r\n    MatInputModule,\r\n    BrowserAnimationsModule\r\n  ],\r\n  declarations: [\r\n    WarningDialogComponent,\r\n    YesNoDialogComponent,\r\n    DeleteUserAccountDialogComponent,\r\n    ImportDialogComponent,\r\n    AssignRedactorToTestComponent\r\n  ]\r\n})\r\nexport class DialogsModule { }\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2RpYWxvZ3Mvd2FybmluZy1kaWFsb2cvYXNzaWduLXJlZGFjdG9yLXRvLXRlc3QvYXNzaWduLXJlZGFjdG9yLXRvLXRlc3QuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<app-warning-dialog>\\r\\n  <div title>\\r\\n    Sukces\\r\\n  </div>\\r\\n  <div content>\\r\\n       Poprawnie przekazano uprawnienia.\\r\\n  </div>\\r\\n</app-warning-dialog>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-assign-redactor-to-test',\r\n  templateUrl: './assign-redactor-to-test.component.html',\r\n  styleUrls: ['./assign-redactor-to-test.component.css']\r\n})\r\nexport class AssignRedactorToTestComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2RpYWxvZ3Mvd2FybmluZy1kaWFsb2cvaW1wb3J0LWRpYWxvZy9pbXBvcnQtZGlhbG9nLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<app-warning-dialog>\\r\\n  <div title>\\r\\n    Import testu\\r\\n    <pre></pre>\\r\\n  </div>\\r\\n  <div content>\\r\\n    <div *ngIf=\\\"importReportWrapper.importReport.status === 'OK'\\\">\\r\\n      Import zakończony sukcesem\\r\\n    </div>\\r\\n    <div *ngIf=\\\"importReportWrapper.importReport.status === 'ERROR'\\\">\\r\\n      Import zakończony z błędami: <br>\\r\\n      <span *ngFor=\\\"let error of importReportWrapper.importReport.errors\\\">\\r\\n        {{error}}\\r\\n      </span>\\r\\n    </div>\\r\\n  </div>\\r\\n</app-warning-dialog>\\r\\n\\r\\n\"","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {MAT_DIALOG_DATA} from '@angular/material';\r\nimport {ImportTestReportWrapper} from '../../../models/test';\r\n\r\n@Component({\r\n  selector: 'app-import-dialog',\r\n  templateUrl: './import-dialog.component.html',\r\n  styleUrls: ['./import-dialog.component.css']\r\n})\r\nexport class ImportDialogComponent implements OnInit {\r\n\r\n  constructor(@Inject(MAT_DIALOG_DATA) public importReportWrapper: ImportTestReportWrapper) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2RpYWxvZ3Mvd2FybmluZy1kaWFsb2cvd2FybmluZy1kaWFsb2cuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"material-form dialog-wrapper\\\">\\r\\n  <h3 class=\\\"dialog-title\\\" mat-dialog-title>\\r\\n    <ng-content select=\\\"[title]\\\"></ng-content>\\r\\n  </h3>\\r\\n  <mat-dialog-content>\\r\\n   <ng-content select=\\\"[content]\\\"></ng-content>\\r\\n  </mat-dialog-content>\\r\\n  <mat-dialog-actions>\\r\\n      <div>\\r\\n        <button class=\\\"dialog-button\\\"  mat-button [mat-dialog-close]=\\\"true\\\">Ok</button>\\r\\n      </div>\\r\\n  </mat-dialog-actions>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-warning-dialog',\r\n  templateUrl: './warning-dialog.component.html',\r\n  styleUrls: [\r\n    '../dialogs-style.css',\r\n    './warning-dialog.component.css'\r\n  ]\r\n})\r\nexport class WarningDialogComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2RpYWxvZ3MveWVzLW5vLWRpYWxvZy9kZWxldGUtdXNlci1hY2NvdW50LWRpYWxvZy9kZWxldGUtdXNlci1hY2NvdW50LWRpYWxvZy5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-yes-no-dialog>\\r\\n  <div title>\\r\\n    Skasuj konto\\r\\n  </div>\\r\\n  <div content>\\r\\n    <span >\\r\\n      Jesteś pewien?\\r\\n    </span>\\r\\n    <br/>\\r\\n    <span>\\r\\n      Tej operacji nie da się cofnąć\\r\\n    </span>\\r\\n    <br/>\\r\\n  </div>\\r\\n</app-yes-no-dialog>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-delete-user-account-dialog',\r\n  templateUrl: './delete-user-account-dialog.component.html',\r\n  styleUrls: ['./delete-user-account-dialog.component.css']\r\n})\r\nexport class DeleteUserAccountDialogComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2RpYWxvZ3MveWVzLW5vLWRpYWxvZy95ZXMtbm8tZGlhbG9nLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"material-form dialog-wrapper\\\">\\r\\n  <h2 class=\\\"dialog-title\\\" mat-dialog-title>\\r\\n    <ng-content select=\\\"[title]\\\"></ng-content>\\r\\n  </h2>\\r\\n  <mat-dialog-content>\\r\\n    <ng-content select=\\\"[content]\\\"></ng-content>\\r\\n  </mat-dialog-content>\\r\\n  <mat-dialog-actions>\\r\\n    <div class=\\\"danger-button\\\">\\r\\n      <button class=\\\"dialog-button\\\" mat-button [mat-dialog-close]=\\\"true\\\">Tak</button>\\r\\n    </div>\\r\\n    <div>\\r\\n      <button class=\\\"dialog-button\\\" mat-button mat-dialog-close>Nie</button>\\r\\n    </div>\\r\\n  </mat-dialog-actions>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-yes-no-dialog',\r\n  templateUrl: './yes-no-dialog.component.html',\r\n  styleUrls: [\r\n    '../dialogs-style.css',\r\n    './yes-no-dialog.component.css'\r\n  ]\r\n})\r\nexport class YesNoDialogComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NotFoundComponent } from './not-found/not-found.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  declarations: [NotFoundComponent]\r\n})\r\nexport class ErrorModule { }\r\n","module.exports = \".not-found-wrapper {\\r\\n  width: 100%;\\r\\n}\\r\\n.image {\\r\\n  display: block;\\r\\n  margin-left: auto;\\r\\n  margin-right: auto;\\r\\n}\\r\\n.text {\\r\\n  text-align: center;\\r\\n  font-size: 30px;\\r\\n  margin-top: 20px;\\r\\n  color: rgb(255, 100, 20);\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZXJyb3Ivbm90LWZvdW5kL25vdC1mb3VuZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsV0FBVztBQUNiO0FBQ0E7RUFDRSxjQUFjO0VBQ2QsaUJBQWlCO0VBQ2pCLGtCQUFrQjtBQUNwQjtBQUNBO0VBQ0Usa0JBQWtCO0VBQ2xCLGVBQWU7RUFDZixnQkFBZ0I7RUFDaEIsd0JBQXdCO0FBQzFCIiwiZmlsZSI6InNyYy9hcHAvZXJyb3Ivbm90LWZvdW5kL25vdC1mb3VuZC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm5vdC1mb3VuZC13cmFwcGVyIHtcclxuICB3aWR0aDogMTAwJTtcclxufVxyXG4uaW1hZ2Uge1xyXG4gIGRpc3BsYXk6IGJsb2NrO1xyXG4gIG1hcmdpbi1sZWZ0OiBhdXRvO1xyXG4gIG1hcmdpbi1yaWdodDogYXV0bztcclxufVxyXG4udGV4dCB7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIGZvbnQtc2l6ZTogMzBweDtcclxuICBtYXJnaW4tdG9wOiAyMHB4O1xyXG4gIGNvbG9yOiByZ2IoMjU1LCAxMDAsIDIwKTtcclxufVxyXG4iXX0= */\"","module.exports = \"<div class=\\\"not-found-wrapper\\\">\\r\\n  <img class=\\\"image\\\" src=\\\"assets/not-found.png\\\">\\r\\n  <p class=\\\"text\\\" >Ta strona nie istnieje</p>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport {ErrorHandlingService} from '../../shared/services/error-handling.service';\r\n\r\n@Component({\r\n  selector: 'app-not-found',\r\n  templateUrl: './not-found.component.html',\r\n  styleUrls: ['./not-found.component.css']\r\n})\r\nexport class NotFoundComponent implements OnInit {\r\n\r\n  constructor(private errorHandlingService: ErrorHandlingService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.errorHandlingService.clear();\r\n  }\r\n\r\n}\r\n","import {CanActivate, Router} from '@angular/router';\r\nimport {Injectable} from '@angular/core';\r\nimport {SessionStorageService} from '../shared/services/session-storage.service';\r\nimport {MAIN_PAGE_URL} from '../shared/utils/frontend-urls';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoggedUserGuard implements CanActivate {\r\n  constructor(private sessionStorageService: SessionStorageService,\r\n              private router: Router) {}\r\n\r\n  canActivate(): boolean {\r\n    if (this.sessionStorageService.isUserLoggedIn()) {\r\n      return true;\r\n    } else {\r\n      this.router.navigate([MAIN_PAGE_URL]);\r\n      return false;\r\n    }\r\n  }\r\n}\r\n","import {CanActivate, Router} from '@angular/router';\r\nimport {Injectable} from '@angular/core';\r\nimport {SessionStorageService} from '../shared/services/session-storage.service';\r\nimport {MAIN_PAGE_URL} from '../shared/utils/frontend-urls';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NotLoggedUserGuard implements CanActivate {\r\n  constructor(private sessionStorageService: SessionStorageService,\r\n              private router: Router) {}\r\n\r\n  canActivate(): boolean {\r\n    if (!this.sessionStorageService.isUserLoggedIn()) {\r\n      return true;\r\n    } else {\r\n      this.router.navigate([MAIN_PAGE_URL]);\r\n      return false;\r\n    }\r\n  }\r\n}\r\n","import {CanActivate, Router} from '@angular/router';\r\nimport {Injectable} from '@angular/core';\r\nimport {SessionStorageService} from '../shared/services/session-storage.service';\r\nimport {MAIN_PAGE_URL} from '../shared/utils/frontend-urls';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RedactorOrModeratorGuard implements CanActivate {\r\n  constructor(private sessionStorageService: SessionStorageService,\r\n              private router: Router) {}\r\n\r\n  canActivate(): boolean {\r\n    if (this.sessionStorageService.isRedactor() || this.sessionStorageService.isModerator()) {\r\n      return true;\r\n    } else {\r\n      this.router.navigate([MAIN_PAGE_URL]);\r\n      return false;\r\n    }\r\n  }\r\n}\r\n","import {CanActivate, Router} from '@angular/router';\r\nimport {Injectable} from '@angular/core';\r\nimport {SessionStorageService} from '../shared/services/session-storage.service';\r\nimport {MAIN_PAGE_URL} from '../shared/utils/frontend-urls';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RedactorGuard implements CanActivate {\r\n  constructor(private sessionStorageService: SessionStorageService,\r\n              private router: Router) {}\r\n\r\n  canActivate(): boolean {\r\n    if (this.sessionStorageService.isRedactor()) {\r\n      return true;\r\n    } else {\r\n      this.router.navigate([MAIN_PAGE_URL]);\r\n      return false;\r\n    }\r\n  }\r\n}\r\n","import {CanActivate, Router} from '@angular/router';\r\nimport {Injectable} from '@angular/core';\r\nimport {SessionStorageService} from '../shared/services/session-storage.service';\r\nimport {MAIN_PAGE_URL} from '../shared/utils/frontend-urls';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserGuard implements CanActivate {\r\n  constructor(private sessionStorageService: SessionStorageService,\r\n              private router: Router) {}\r\n\r\n  canActivate(): boolean {\r\n    if (this.sessionStorageService.isUser()) {\r\n      return true;\r\n    } else {\r\n      this.router.navigate([MAIN_PAGE_URL]);\r\n      return false;\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, HttpResponse} from '@angular/common/http';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport {SessionStorageService} from './shared/services/session-storage.service';\r\nimport {ErrorHandlingService} from './shared/services/error-handling.service';\r\nimport {LoadingSpinnerComponent} from './core/loading-spinner/loading-spinner.component';\r\nimport {catchError, map} from 'rxjs/operators';\r\nimport {of} from 'rxjs/internal/observable/of';\r\nimport {MetricsProcessorDirective} from \"./metrics-processor/metrics-processor.directive\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class Interceptor  implements HttpInterceptor {\r\n\r\n  constructor(private sessionStorageService: SessionStorageService,\r\n              private errorHandlingService: ErrorHandlingService) { }\r\n\r\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    this.errorHandlingService.clear();\r\n    LoadingSpinnerComponent.setShowLoadingIndicator(true);\r\n    if (this.sessionStorageService.isUserLoggedIn()) {\r\n      request = request.clone({\r\n        setHeaders: {\r\n          Authorization: this.sessionStorageService.getToken()\r\n        }\r\n      });\r\n    }\r\n    return next.handle(request).pipe(\r\n      map(result => {\r\n        this.handleValidResponse(result);\r\n        return result;\r\n      }),\r\n      catchError((error) => {\r\n        return of(this.handleErrorResponse(error));\r\n      }) as any);\r\n  }\r\n  handleValidResponse(result: HttpEvent<any>): void {\r\n    if (result instanceof HttpResponse) {\r\n      LoadingSpinnerComponent.setShowLoadingIndicator(false);\r\n      const response = result as HttpResponse<any>;\r\n      if (response.headers.get('Authorization') !== null) {\r\n        this.sessionStorageService.updateSession(response.headers.get('Authorization'));\r\n      }\r\n    }\r\n  }\r\n  handleErrorResponse(error: any): Observable<any> {\r\n    LoadingSpinnerComponent.setShowLoadingIndicator(false);\r\n    MetricsProcessorDirective.assignErrorTypeNumber(error.status);\r\n    this.errorHandlingService.handle(error);\r\n    return of(error);\r\n  }\r\n}\r\n","import {Route, RouterModule} from '@angular/router';\r\n\r\nimport {NgModule} from '@angular/core';\r\nimport {MainPageComponent} from './main-page/main-page.component';\r\nimport {MAIN_PAGE_URL} from '../shared/utils/frontend-urls';\r\n\r\nconst MAIN_PAGE_ROUTES: Route[] = [\r\n  {\r\n    path: `${MAIN_PAGE_URL}`,\r\n    component: <any>MainPageComponent,\r\n    runGuardsAndResolvers: 'always'\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forChild(MAIN_PAGE_ROUTES),\r\n  ],\r\n  exports: [\r\n    RouterModule\r\n  ]\r\n})\r\n\r\nexport class MainPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MainPageComponent } from './main-page/main-page.component';\r\nimport {MainPageRoutingModule} from './main-page-routing.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    MainPageRoutingModule\r\n  ],\r\n  declarations: [MainPageComponent]\r\n})\r\nexport class MainPageModule { }\r\n","module.exports = \"h1 {\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWFpbi1wYWdlL21haW4tcGFnZS9tYWluLXBhZ2UuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGtCQUFrQjtBQUNwQiIsImZpbGUiOiJzcmMvYXBwL21haW4tcGFnZS9tYWluLXBhZ2UvbWFpbi1wYWdlLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJoMSB7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG59XHJcbiJdfQ== */\"","module.exports = \"<div>\\r\\n  <h1>Magenta - Strona główna</h1>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport {MAIN_PAGE_URL, MODERATOR_PAGE_URL, REDACTOR_PAGE_URL, USER_PAGE_URL} from '../../shared/utils/frontend-urls';\r\nimport {Router} from '@angular/router';\r\nimport {ROLE_MODERATOR, ROLE_REDACTOR, ROLE_USER} from '../../shared/utils/global-variables';\r\nimport {SessionStorageService} from '../../shared/services/session-storage.service';\r\n\r\n@Component({\r\n  selector: 'app-main-page',\r\n  templateUrl: './main-page.component.html',\r\n  styleUrls: ['./main-page.component.css']\r\n})\r\nexport class MainPageComponent implements OnInit {\r\n\r\n  url = MAIN_PAGE_URL;\r\n\r\n  constructor(private router: Router,\r\n              private sessionStorage: SessionStorageService) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (this.sessionStorage.getUser() !== undefined && this.sessionStorage.getUser() !== null) {\r\n      switch (this.sessionStorage.getUser().roles[0].name) {\r\n        case ROLE_USER:\r\n          this.router.navigate([USER_PAGE_URL]);\r\n          break;\r\n        case ROLE_MODERATOR:\r\n          this.router.navigate([MODERATOR_PAGE_URL]);\r\n          break;\r\n        case ROLE_REDACTOR:\r\n          this.router.navigate([REDACTOR_PAGE_URL]);\r\n          break;\r\n      }\r\n    }\r\n  }\r\n}\r\n","import {Directive, HostListener} from '@angular/core';\r\nimport {MetricsModel} from \"../models/metrics\";\r\nimport {MetricsProcessorService} from \"./services/metrics-processor.service\";\r\nimport {DeviceDetectorService} from \"ngx-device-detector\";\r\nimport * as html2canvas from \"html2canvas\";\r\nimport {DistanceCalculatorService} from \"./services/distance-calculator.service\";\r\n\r\n\r\n@Directive({\r\n  selector: '[appMetricsProcessor]'\r\n})\r\nexport class MetricsProcessorDirective {\r\n\r\n  private readonly width: number;\r\n  private readonly height: number;\r\n\r\n  private metricsModel: MetricsModel;\r\n\r\n  private isProcessing: boolean;\r\n  private startTime: number;\r\n  private endTime: number;\r\n  private blurTime: number;\r\n  private blurTimeStamp: number;\r\n  private static errorCode: number;\r\n\r\n  constructor(private deviceDetector: DeviceDetectorService,\r\n              private metricsProcessorService: MetricsProcessorService,\r\n              private distanceCalculator: DistanceCalculatorService) {\r\n\r\n    this.metricsModel = new MetricsModel();\r\n    this.width = window.innerWidth;\r\n    this.height = window.innerHeight;\r\n  }\r\n\r\n  @HostListener('window:keyup.shift.d', ['$event'])\r\n  dKeyEvent(event: KeyboardEvent) {\r\n    this.storeScreenShot();\r\n\r\n    this.distanceCalculator.switchProcessing();\r\n\r\n    if (this.isProcessing) {\r\n      this.endTime = event.timeStamp;\r\n      this.stopProcessing();\r\n    } else {\r\n      this.startTime = event.timeStamp;\r\n      this.startProcessing();\r\n    }\r\n    this.isProcessing = !this.isProcessing;\r\n  }\r\n\r\n  @HostListener('window:keyup.shift.w', ['$event'])\r\n  wKeyEvent(event: KeyboardEvent) {\r\n    this.distanceCalculator.switchProcessing();\r\n    this.isProcessing = !this.isProcessing;\r\n    console.log(\"Metrics unsaved\");\r\n  }\r\n\r\n  @HostListener('window:keyup.shift.r', ['$event'])\r\n  rKeyEvent(event: KeyboardEvent) {\r\n    this.distanceCalculator.switchProcessing();\r\n    if (this.isProcessing) {\r\n      this.endTime = event.timeStamp;\r\n      this.stopProcessing(true);\r\n      this.isProcessing = false;\r\n    }\r\n  }\r\n\r\n  @HostListener('window:click', ['$event'])\r\n  clickEvent(event) {\r\n    this.handleClick();\r\n  }\r\n\r\n  @HostListener('window:contextmenu', ['$event'])\r\n  rightClickEvent(event) {\r\n    this.handleClick();\r\n  }\r\n\r\n  @HostListener('window:auxclick', ['$event'])\r\n  mouseWheelClickEvent(event) {\r\n    this.handleClick();\r\n  }\r\n\r\n  @HostListener('window:scroll', ['$event'])\r\n  mouseWheelMoveEvent(event) {\r\n    if (this.isProcessing) {\r\n      this.distanceCalculator.addScrollDistance(50);\r\n    }\r\n  }\r\n\r\n  @HostListener('window:blur', ['$event'])\r\n  onBlur(event: Event): void {\r\n    if (this.isProcessing) {\r\n      this.blurTimeStamp = event.timeStamp;\r\n    }\r\n  }\r\n\r\n  @HostListener('window:focus', ['$event'])\r\n  onFocus(event: Event): void {\r\n    if (this.isProcessing) {\r\n      this.blurTime += event.timeStamp - this.blurTimeStamp;\r\n    }\r\n  }\r\n\r\n  static assignErrorTypeNumber(errorCode: number): void {\r\n    if (!MetricsProcessorDirective.errorCode) {\r\n      MetricsProcessorDirective.errorCode = errorCode;\r\n    }\r\n}\r\n\r\n\r\n  private handleClick() {\r\n    if (this.isProcessing) {\r\n      this.metricsModel.incrementClickCount();\r\n    }\r\n  }\r\n\r\n  private startProcessing() {\r\n    this.metricsModel = new MetricsModel();\r\n    this.blurTime = 0;\r\n    MetricsProcessorDirective.errorCode = null;\r\n  }\r\n\r\n  private stopProcessing(failed = false) {\r\n    this.prepareModelToPersist(failed);\r\n    this.metricsProcessorService.persist(this.metricsModel).subscribe(() => {\r\n      console.log(\"Metrics saved successfully\");\r\n    }, () => {\r\n      console.log(\"Metrics save failed\");\r\n    });\r\n  }\r\n\r\n  private prepareModelToPersist(failed = false) {\r\n    this.metricsModel.browser = this.deviceDetector.browser;\r\n    this.metricsModel.width = this.width;\r\n    this.metricsModel.height = this.height;\r\n    this.metricsModel.time = this.endTime - this.startTime - this.blurTime;\r\n    this.metricsModel.failed = failed;\r\n    this.metricsModel.distance = this.distanceCalculator.getDistance();\r\n    if (MetricsProcessorDirective.errorCode) {\r\n      this.metricsModel.errorTypeNumber = MetricsProcessorDirective.errorCode;\r\n    }\r\n  }\r\n\r\n  private storeScreenShot() {\r\n    html2canvas(document.body).then(canvas => {\r\n      const imgData = canvas.toDataURL(\"image/png\");\r\n      this.metricsProcessorService.saveScreen(imgData).subscribe();\r\n    });\r\n  }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {MetricsProcessorDirective} from './metrics-processor.directive';\r\nimport {DeviceDetectorModule} from \"ngx-device-detector\";\r\n\r\n@NgModule({\r\n  declarations: [\r\n    MetricsProcessorDirective\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    DeviceDetectorModule.forRoot(),\r\n  ],\r\n  exports: [\r\n    MetricsProcessorDirective\r\n  ]\r\n})\r\nexport class MetricsProcessorModule {\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {MousePosition} from \"../../models/mouse-position\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DistanceCalculatorService {\r\n\r\n  private positions: MousePosition[];\r\n  private isProcessing: boolean = false;\r\n  private scrollDistance: number = 0;\r\n\r\n  constructor() {\r\n  }\r\n\r\n  switchProcessing(interrupted?: boolean): void {\r\n    if (interrupted) {\r\n      this.isProcessing = false;\r\n    } else {\r\n      this.isProcessing = !this.isProcessing;\r\n    }\r\n    if (this.isProcessing) {\r\n      this.resetValues();\r\n    }\r\n  }\r\n\r\n  addPosition(event: MouseEvent): void {\r\n    if (this.isProcessing) {\r\n      this.positions.push(new MousePosition(event.clientX, event.clientY));\r\n    }\r\n  }\r\n\r\n  getDistance(): number {\r\n    return this.calculateDistance();\r\n  }\r\n\r\n  addScrollDistance(dst: number): void {\r\n    this.scrollDistance += dst;\r\n  }\r\n\r\n  private calculateDistance(): number {\r\n    if (this.positions.length) {\r\n      let distance = this.calcPointsDistance(new MousePosition(0, 0), this.positions.shift());\r\n\r\n      for (let i = 1; i < this.positions.length - 1; i++) {\r\n        distance += this.calcPointsDistance(this.positions[i], this.positions[i + 1]);\r\n      }\r\n\r\n      return distance;\r\n    }\r\n  }\r\n\r\n  private resetValues(): void {\r\n    this.positions = [];\r\n    this.scrollDistance = 0;\r\n  }\r\n\r\n  private calcPointsDistance(p1: MousePosition, p2: MousePosition): number {\r\n    return Math.sqrt(Math.pow(p2.getX - p1.getX, 2) + Math.pow(p2.getY - p1.getY, 2)) + this.scrollDistance;\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {METRICS_URL, SCREEN_URL} from \"../../shared/utils/backend-urls\";\r\nimport {MetricsModel} from \"../../models/metrics\";\r\nimport {Observable} from \"rxjs\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MetricsProcessorService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  persist(model: MetricsModel): Observable<any> {\r\n    return this.http.post(METRICS_URL, model);\r\n  }\r\n\r\n  saveScreen(body: Object): Observable<any> {\r\n    return this.http.post(SCREEN_URL, body);\r\n  }\r\n}\r\n","export class MetricsModel {\r\n  clickCount = 0;\r\n  browser: string;\r\n  width: number;\r\n  height: number;\r\n  time: number;\r\n  distance: number;\r\n  failed: boolean;\r\n  errorTypeNumber: number;\r\n\r\n  incrementClickCount() {\r\n    this.clickCount++;\r\n  }\r\n}\r\n","export class MousePosition {\r\n  private readonly x: number;\r\n  private readonly y: number;\r\n\r\n  constructor(x: number, y: number) {\r\n    this.x = x;\r\n    this.y = y;\r\n  }\r\n\r\n  get getX() {\r\n    return this.x;\r\n  }\r\n\r\n  get getY() {\r\n    return this.y;\r\n  }\r\n}\r\n","import {Test} from './test';\r\n\r\nexport class Positions {\r\n  positions: Position[];\r\n}\r\nexport class Position {\r\n  id: number;\r\n  name: string;\r\n  active: boolean;\r\n  test: Test;\r\n}\r\n","export class Questions {\r\n  questions: Question[];\r\n}\r\nexport class Question {\r\n  question: string;\r\n  type: string;\r\n  min: number;\r\n  max: number;\r\n  variants: Variant[];\r\n}\r\n\r\nexport class Variant {\r\n  text: string;\r\n}\r\nexport class Solutions {\r\n  solutions: TestSolutionWithId[];\r\n}\r\nexport class TestSolution {\r\n  testId: number;\r\n  answers: TestAnswer[];\r\n}\r\n\r\nexport class TestSolutionWithId {\r\n  id: number;\r\n  checked: boolean;\r\n  score: number;\r\n  test: TestSolutionTest;\r\n  user: TestSolutionUser;\r\n  answers: TestAnswer[];\r\n}\r\nexport class TestSolutionTest {\r\n  id: number;\r\n  language: string;\r\n  name: string;\r\n}\r\nexport class TestSolutionUser {\r\n  id: number;\r\n  username: string;\r\n}\r\nexport class TestAnswer {\r\n  answer: string;\r\n  question: string;\r\n}\r\nexport class Score {\r\n  score: number;\r\n}\r\n","export class ImportTestReportWrapper {\r\n  importReport: ImportTestReport;\r\n}\r\nexport class ImportTestReport {\r\n  status: string;\r\n  errors: string[];\r\n}\r\n\r\nexport interface Tests {\r\n  tests: Test[];\r\n}\r\n\r\nexport class Test {\r\n  id: number;\r\n  name: string;\r\n  language: string;\r\n}\r\n\r\n\r\n","module.exports = \".add-redactor-form-wrapper {\\r\\n  width: 300px;\\r\\n  margin-left: auto;\\r\\n  margin-right: auto;\\r\\n}\\r\\n\\r\\n.add-redactor-form-button {\\r\\n  margin-top: 30px;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kZXJhdG9yL2FkZC1yZWRhY3Rvci9hZGQtcmVkYWN0b3IuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFlBQVk7RUFDWixpQkFBaUI7RUFDakIsa0JBQWtCO0FBQ3BCOztBQUVBO0VBQ0UsZ0JBQWdCO0FBQ2xCIiwiZmlsZSI6InNyYy9hcHAvbW9kZXJhdG9yL2FkZC1yZWRhY3Rvci9hZGQtcmVkYWN0b3IuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5hZGQtcmVkYWN0b3ItZm9ybS13cmFwcGVyIHtcclxuICB3aWR0aDogMzAwcHg7XHJcbiAgbWFyZ2luLWxlZnQ6IGF1dG87XHJcbiAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xyXG59XHJcblxyXG4uYWRkLXJlZGFjdG9yLWZvcm0tYnV0dG9uIHtcclxuICBtYXJnaW4tdG9wOiAzMHB4O1xyXG59XHJcbiJdfQ== */\"","module.exports = \"<div class=\\\"add-redactor-form-wrapper\\\">\\r\\n  <form [formGroup]=\\\"registerForm\\\" class=\\\"material-form authentication-form\\\">\\r\\n    <div>\\r\\n      <mat-form-field>\\r\\n        <input matInput formControlName=\\\"username\\\" placeholder=\\\"Nazwa użytkownika\\\">\\r\\n        <mat-error *ngIf=\\\"registerForm.get('username').hasError('required')\\\">\\r\\n          Nazwa użytkownika jest wymagana\\r\\n        </mat-error>\\r\\n        <mat-error *ngIf=\\\"registerForm.get('username').hasError('minlength')\\\">\\r\\n          Nazwa użytkownika musi zawierać co najmniej {{minUsernameLength}} znaków.\\r\\n        </mat-error>\\r\\n        <mat-error *ngIf=\\\"registerForm.get('username').hasError('maxlength')\\\">\\r\\n          Nazwa użytkownika może zawierać maksymalnie {{maxUsernameLength}} znaków.\\r\\n        </mat-error>\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n    <div>\\r\\n      <mat-form-field>\\r\\n        <input matInput formControlName=\\\"nameSurname\\\" placeholder=\\\"Imię i nazwisko\\\">\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n    <div>\\r\\n      <mat-form-field>\\r\\n        <input matInput email formControlName=\\\"email\\\" placeholder=\\\"Email\\\">\\r\\n        <mat-error *ngIf=\\\"registerForm.get('email').hasError('required')\\\">\\r\\n          Email jest wymagany.\\r\\n        </mat-error>\\r\\n        <mat-error *ngIf=\\\"registerForm.get('email').hasError('email')\\\">\\r\\n          Podaj prawidłowy adres email.\\r\\n        </mat-error>\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n    <div>\\r\\n      <mat-form-field>\\r\\n        <input matInput formControlName=\\\"password\\\" type=\\\"password\\\" placeholder=\\\"Hasło\\\" >\\r\\n\\r\\n        <mat-error *ngIf=\\\"registerForm.get('password').hasError('required')\\\">\\r\\n          Hasło jest wymagane\\r\\n        </mat-error>\\r\\n        <mat-error *ngIf=\\\"registerForm.get('password').hasError('minlength')\\\">\\r\\n          Hasło musi zawierać co najmniej {{minPasswordLength}} znaków.\\r\\n        </mat-error>\\r\\n        <mat-error *ngIf=\\\"registerForm.get('password').hasError('maxlength')\\\">\\r\\n          Hasło może zawierać maksymalnie {{maxPasswordLength}} znaków.\\r\\n        </mat-error>\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n    <div>\\r\\n      <mat-form-field>\\r\\n        <input matInput formControlName=\\\"confirmPassword\\\" type=\\\"password\\\"\\r\\n               placeholder=\\\"Potwierdź hasło\\\" [errorStateMatcher]=\\\"errorMatcher\\\">\\r\\n\\r\\n        <mat-error *ngIf=\\\"registerForm.get('confirmPassword').hasError('required')\\\">\\r\\n          Musisz potwierdzić hasło\\r\\n        </mat-error>\\r\\n        <mat-error\\r\\n          *ngIf=\\\"registerForm.hasError('matchPassword')\\\">\\r\\n          Hasła są różne\\r\\n        </mat-error>\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n    <div class=\\\"add-redactor-form-button\\\">\\r\\n      <button mat-button\\r\\n              [disabled]=\\\"registerForm.invalid || registerForm.errors || getProcessingRegistration()\\\"\\r\\n              type=\\\"submit\\\" (click)=\\\"add()\\\"\\r\\n      >Zarejestruj redaktora</button>\\r\\n    </div>\\r\\n\\r\\n  </form>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport {RedactorService} from '../services/redactor.service';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {RegistrationConfirmPassword} from '../../authentication/registration-page/registration-confirm-password';\r\nimport {ConfirmPasswordErrorMatcher} from '../../shared/utils/confirm-password-error-state-matcher';\r\nimport {MAX_PASSWORD_LENGTH, MAX_USERNAME_LENGTH, MIN_PASSWORD_LENGTH, MIN_USERNAME_LENGTH} from '../../shared/utils/global-variables';\r\nimport {LoadingSpinnerComponent} from '../../core/loading-spinner/loading-spinner.component';\r\nimport {Router} from '@angular/router';\r\nimport {MODERATOR_REDACTORS_PAGE_URL} from '../../shared/utils/frontend-urls';\r\n\r\n@Component({\r\n  selector: 'app-add-redactor',\r\n  templateUrl: './add-redactor.component.html',\r\n  styleUrls: ['./add-redactor.component.css']\r\n})\r\nexport class AddRedactorComponent implements OnInit {\r\n\r\n  constructor(private redactorService: RedactorService,\r\n              private formBuilder: FormBuilder,\r\n              private router: Router) { }\r\n\r\n  registerForm: FormGroup;\r\n  confirmPassword = new RegistrationConfirmPassword();\r\n  errorMatcher = new ConfirmPasswordErrorMatcher();\r\n\r\n  minPasswordLength = MIN_PASSWORD_LENGTH;\r\n  maxPasswordLength = MAX_PASSWORD_LENGTH;\r\n  minUsernameLength = MIN_USERNAME_LENGTH;\r\n  maxUsernameLength = MAX_USERNAME_LENGTH;\r\n\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.buildForm();\r\n  }\r\n  buildForm(): void {\r\n    this.registerForm = this.formBuilder.group({\r\n      password: ['', [\r\n        Validators.required,\r\n        Validators.minLength(this.minPasswordLength),\r\n        Validators.maxLength(this.maxPasswordLength)\r\n      ]],\r\n      username: ['', [\r\n        Validators.required,\r\n        Validators.minLength(this.minUsernameLength),\r\n        Validators.maxLength(this.maxUsernameLength)\r\n      ]],\r\n      email: ['', [Validators.required]],\r\n      nameSurname: [''],\r\n      confirmPassword: ['', [Validators.required]],\r\n    }, {\r\n      validator: this.confirmPassword.matchPassword\r\n    } );\r\n  }\r\n  add(): void {\r\n    this.redactorService.add(this.registerForm.value).subscribe(() => {\r\n      this.router.navigate([MODERATOR_REDACTORS_PAGE_URL]);\r\n    });\r\n  }\r\n  getProcessingRegistration(): boolean {\r\n    return LoadingSpinnerComponent.showLoadingIndicator;\r\n  }\r\n\r\n}\r\n","module.exports = \"table {\\r\\n  width: 100%;\\r\\n  border: 1px solid var(--secondary-text-color);\\r\\n}\\r\\n\\r\\ntd {\\r\\n  text-align: center;\\r\\n  padding: 5px 20px;\\r\\n  border: 1px solid var(--secondary-text-color);\\r\\n}\\r\\n\\r\\nthead td {\\r\\n  background-color: var(--background-secondary-color);\\r\\n  font-weight: bold;\\r\\n}\\r\\n\\r\\n.moderator-page-container {\\r\\n  margin-bottom: 20px;\\r\\n}\\r\\n\\r\\n.positions-container {\\r\\n  margin-top: 50px;\\r\\n}\\r\\n\\r\\nh1 {\\r\\n  margin-bottom: 20px;\\r\\n  text-align: left;\\r\\n}\\r\\n\\r\\n.buttons {\\r\\n  margin-bottom: 30px;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kZXJhdG9yL21vZGVyYXRvci1wYWdlL21vZGVyYXRvci1wYWdlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFXO0VBQ1gsNkNBQTZDO0FBQy9DOztBQUVBO0VBQ0Usa0JBQWtCO0VBQ2xCLGlCQUFpQjtFQUNqQiw2Q0FBNkM7QUFDL0M7O0FBRUE7RUFDRSxtREFBbUQ7RUFDbkQsaUJBQWlCO0FBQ25COztBQUNBO0VBQ0UsbUJBQW1CO0FBQ3JCOztBQUNBO0VBQ0UsZ0JBQWdCO0FBQ2xCOztBQUNBO0VBQ0UsbUJBQW1CO0VBQ25CLGdCQUFnQjtBQUNsQjs7QUFDQTtFQUNFLG1CQUFtQjtBQUNyQiIsImZpbGUiOiJzcmMvYXBwL21vZGVyYXRvci9tb2RlcmF0b3ItcGFnZS9tb2RlcmF0b3ItcGFnZS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsidGFibGUge1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIGJvcmRlcjogMXB4IHNvbGlkIHZhcigtLXNlY29uZGFyeS10ZXh0LWNvbG9yKTtcclxufVxyXG5cclxudGQge1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICBwYWRkaW5nOiA1cHggMjBweDtcclxuICBib3JkZXI6IDFweCBzb2xpZCB2YXIoLS1zZWNvbmRhcnktdGV4dC1jb2xvcik7XHJcbn1cclxuXHJcbnRoZWFkIHRkIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1iYWNrZ3JvdW5kLXNlY29uZGFyeS1jb2xvcik7XHJcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbn1cclxuLm1vZGVyYXRvci1wYWdlLWNvbnRhaW5lciB7XHJcbiAgbWFyZ2luLWJvdHRvbTogMjBweDtcclxufVxyXG4ucG9zaXRpb25zLWNvbnRhaW5lciB7XHJcbiAgbWFyZ2luLXRvcDogNTBweDtcclxufVxyXG5oMSB7XHJcbiAgbWFyZ2luLWJvdHRvbTogMjBweDtcclxuICB0ZXh0LWFsaWduOiBsZWZ0O1xyXG59XHJcbi5idXR0b25zIHtcclxuICBtYXJnaW4tYm90dG9tOiAzMHB4O1xyXG59XHJcbiJdfQ== */\"","module.exports = \"<div class=\\\"center moderator-page-container\\\">\\r\\n  <div class=\\\"row material-form full-width-button buttons\\\">\\r\\n    <div class=\\\"col-md-6 full-width-button\\\">\\r\\n      <button mat-button [routerLink]=\\\"['/', moderatorTest]\\\">Testy</button>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-6 full-width-button\\\">\\r\\n      <button mat-button [routerLink]=\\\"['/', moderatorRedactors]\\\">Redaktorzy</button>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"positions-container\\\">\\r\\n    <app-positions-edit></app-positions-edit>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport {Router} from '@angular/router';\r\nimport {\r\n  ADD_QUESTIONS,\r\n  MODERATOR_REDACTORS_PAGE_URL,\r\n  MODERATOR_TESTS_PAGE_URL,\r\n  TEST_PAGE_URL\r\n} from '../../shared/utils/frontend-urls';\r\nimport {DistanceCalculatorService} from '../../metrics-processor/services/distance-calculator.service';\r\n\r\n@Component({\r\n  selector: 'app-moderator-page',\r\n  templateUrl: './moderator-page.component.html',\r\n  styleUrls: ['./moderator-page.component.css']\r\n})\r\nexport class ModeratorPageComponent implements OnInit {\r\n\r\n  moderatorTest = MODERATOR_TESTS_PAGE_URL;\r\n  moderatorRedactors = MODERATOR_REDACTORS_PAGE_URL;\r\n  constructor(public distanceCalculator: DistanceCalculatorService) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n\r\n}\r\n","import {Route, RouterModule} from '@angular/router';\r\nimport {\r\n  ADD_REDACTOR_PAGE_URL,\r\n  MODERATOR_PAGE_URL,\r\n  MODERATOR_REDACTORS_PAGE_URL,\r\n  MODERATOR_TESTS_PAGE_URL, MODIFY_REDACTOR_PAGE_URL\r\n} from '../shared/utils/frontend-urls';\r\nimport {TestsResolveService} from '../tests/services/tests-resolve.service';\r\nimport {ModeratorPageComponent} from './moderator-page/moderator-page.component';\r\nimport {NgModule} from '@angular/core';\r\nimport {PositionsResolveService} from './services/positions-resolve.service';\r\nimport {ModeratorTestsComponent} from './moderator-tests/moderator-tests.component';\r\nimport {RedactorsListComponent} from './redactors-list/redactors-list.component';\r\nimport {RedactorsResolveService} from './services/redactors-resolve.service';\r\nimport {AddRedactorComponent} from './add-redactor/add-redactor.component';\r\nimport {ModifyRedactorComponent} from './modify-redactor/modify-redactor.component';\r\nimport {RedactorResolveService} from './services/redactor-resolve.service';\r\n\r\nconst MODERATOR_PAGE_ROUTES: Route[] = [\r\n  {\r\n    path: MODERATOR_PAGE_URL,\r\n    component: <any>ModeratorPageComponent,\r\n    runGuardsAndResolvers: 'always',\r\n    resolve: {\r\n      positions: PositionsResolveService,\r\n      tests: TestsResolveService\r\n    }\r\n  },\r\n  {\r\n    path: MODERATOR_TESTS_PAGE_URL,\r\n    component: <any>ModeratorTestsComponent,\r\n    runGuardsAndResolvers: 'always',\r\n    resolve: {\r\n      tests: TestsResolveService\r\n    }\r\n  },\r\n  {\r\n    path: MODERATOR_REDACTORS_PAGE_URL,\r\n    component: <any>RedactorsListComponent,\r\n    runGuardsAndResolvers: 'always',\r\n    resolve: {\r\n      redactors: RedactorsResolveService\r\n    }\r\n  },\r\n  {\r\n    path: ADD_REDACTOR_PAGE_URL,\r\n    component: <any>AddRedactorComponent,\r\n    runGuardsAndResolvers: 'always'\r\n  },\r\n  {\r\n    path: `${MODIFY_REDACTOR_PAGE_URL}/:username`,\r\n    component: <any>ModifyRedactorComponent,\r\n    runGuardsAndResolvers: 'always',\r\n    resolve: {\r\n      redactor: RedactorResolveService\r\n    }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forChild(MODERATOR_PAGE_ROUTES),\r\n  ],\r\n  exports: [\r\n    RouterModule\r\n  ]\r\n})\r\n\r\nexport class ModeratorRoutingModule {\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZGVyYXRvci9tb2RlcmF0b3ItdGVzdHMvbW9kZXJhdG9yLXRlc3RzLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div>\\r\\n  <app-all-tests></app-all-tests>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-moderator-tests',\r\n  templateUrl: './moderator-tests.component.html',\r\n  styleUrls: ['./moderator-tests.component.css']\r\n})\r\nexport class ModeratorTestsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ModeratorPageComponent } from './moderator-page/moderator-page.component';\r\nimport {ModeratorRoutingModule} from './moderator-routing.module';\r\nimport {TestsModule} from '../tests/tests.module';\r\nimport {SharedModule} from '../shared/shared.module';\r\nimport {MatButtonModule, MatCheckboxModule, MatInputModule, MatSelectModule} from '@angular/material';\r\nimport { PositionsEditComponent } from './positions-edit/positions-edit.component';\r\nimport { ModeratorTestsComponent } from './moderator-tests/moderator-tests.component';\r\nimport { RedactorsListComponent } from './redactors-list/redactors-list.component';\r\nimport { AddRedactorComponent } from './add-redactor/add-redactor.component';\r\nimport {ReactiveFormsModule} from '@angular/forms';\r\nimport { ModifyRedactorComponent } from './modify-redactor/modify-redactor.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    MatButtonModule,\r\n    MatCheckboxModule,\r\n    MatSelectModule,\r\n    MatButtonModule,\r\n    MatInputModule,\r\n    ModeratorRoutingModule,\r\n    TestsModule,\r\n    SharedModule\r\n  ],\r\n  declarations: [ModeratorPageComponent, PositionsEditComponent, ModeratorTestsComponent, RedactorsListComponent, AddRedactorComponent, ModifyRedactorComponent]\r\n})\r\nexport class ModeratorModule { }\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZGVyYXRvci9tb2RpZnktcmVkYWN0b3IvbW9kaWZ5LXJlZGFjdG9yLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"user-details-edit-wrapper full-width-form\\\">\\r\\n  <form [formGroup]=\\\"redactorDetailsForm\\\" class=\\\"material-form\\\">\\r\\n    <div>\\r\\n      <mat-form-field>\\r\\n        <input matInput formControlName=\\\"username\\\" placeholder=\\\"Nazwa użytkownika\\\">\\r\\n        <mat-error *ngIf=\\\"redactorDetailsForm.get('username').hasError('required')\\\">\\r\\n          Nazwa użytkownika jest wymagana.\\r\\n        </mat-error>\\r\\n        <mat-error *ngIf=\\\"redactorDetailsForm.get('username').hasError('minlength')\\\">\\r\\n          Nazwa użytkownika musi zawierać co najmniej{{minUsernameLength}} znaków.\\r\\n        </mat-error>\\r\\n        <mat-error *ngIf=\\\"redactorDetailsForm.get('username').hasError('maxlength')\\\">\\r\\n          Nazwa użytkownika może zawierać maksymalnie {{maxUsernameLength}} znaków.\\r\\n        </mat-error>\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n    <div>\\r\\n      <mat-form-field>\\r\\n        <input matInput formControlName=\\\"nameSurname\\\" placeholder=\\\"Imię i nazwisko\\\">\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n    <div>\\r\\n      <mat-form-field>\\r\\n        <input matInput email formControlName=\\\"email\\\" placeholder=\\\"Email\\\">\\r\\n        <mat-error *ngIf=\\\"redactorDetailsForm.get('email').hasError('required')\\\">\\r\\n          Email jest wymagany.\\r\\n        </mat-error>\\r\\n        <mat-error *ngIf=\\\"redactorDetailsForm.get('email').hasError('email')\\\">\\r\\n          Podaj prawidłowy adres email.\\r\\n        </mat-error>\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n    <div class=\\\"full-width-button\\\">\\r\\n      <button mat-button\\r\\n              [disabled]=\\\"redactorDetailsForm.invalid || redactorDetailsForm.errors\\\"\\r\\n              type=\\\"submit\\\" (click)=\\\"update()\\\">Zaktualizuj dane konta</button>\\r\\n    </div>\\r\\n  </form>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport {UserUpdateData} from '../../models/user/user-update-data';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {MAX_USERNAME_LENGTH, MIN_USERNAME_LENGTH} from '../../shared/utils/global-variables';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {HttpResponse} from '@angular/common/http';\r\nimport {LoggedUser} from '../../models/user/logged-user';\r\nimport {MODERATOR_REDACTORS_PAGE_URL} from '../../shared/utils/frontend-urls';\r\nimport {RedactorService} from '../services/redactor.service';\r\n\r\n@Component({\r\n  selector: 'app-modify-redactor',\r\n  templateUrl: './modify-redactor.component.html',\r\n  styleUrls: ['./modify-redactor.component.css']\r\n})\r\nexport class ModifyRedactorComponent implements OnInit {\r\n\r\n  redactor: UserUpdateData;\r\n  redactorDetailsForm: FormGroup;\r\n\r\n  minUsernameLength = MIN_USERNAME_LENGTH;\r\n  maxUsernameLength = MAX_USERNAME_LENGTH;\r\n\r\n  constructor(private redactorService: RedactorService,\r\n              private formBuilder: FormBuilder,\r\n              private router: Router,\r\n              private route: ActivatedRoute) { }\r\n\r\n  ngOnInit(): void {\r\n    this.redactor = this.route.snapshot.data['redactor'];\r\n    this.buildForm();\r\n  }\r\n  buildForm(): void {\r\n    this.redactorDetailsForm = this.formBuilder.group({\r\n      username: [this.redactor.username, [\r\n        Validators.required,\r\n        Validators.minLength(this.minUsernameLength),\r\n        Validators.maxLength(this.maxUsernameLength)\r\n      ]],\r\n      email: [this.redactor.email, Validators.required],\r\n      nameSurname: [this.redactor.nameSurname],\r\n    });\r\n  }\r\n  update(): void {\r\n    this.redactorService.modify(\r\n      this.redactor.username,\r\n      this.redactorDetailsForm.value\r\n    ).subscribe((result: HttpResponse <LoggedUser>) => {\r\n      this.router.navigate([MODERATOR_REDACTORS_PAGE_URL]);\r\n    });\r\n  }\r\n\r\n}\r\n","module.exports = \".test-column {\\r\\n  width: 35%;\\r\\n}\\r\\n.new-position {\\r\\n  margin-bottom: 30px;\\r\\n}\\r\\n.name-input {\\r\\n  width: 100%;\\r\\n}\\r\\n.name-input-wrapper {\\r\\n  margin-top: 3px;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kZXJhdG9yL3Bvc2l0aW9ucy1lZGl0L3Bvc2l0aW9ucy1lZGl0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxVQUFVO0FBQ1o7QUFDQTtFQUNFLG1CQUFtQjtBQUNyQjtBQUNBO0VBQ0UsV0FBVztBQUNiO0FBQ0E7RUFDRSxlQUFlO0FBQ2pCIiwiZmlsZSI6InNyYy9hcHAvbW9kZXJhdG9yL3Bvc2l0aW9ucy1lZGl0L3Bvc2l0aW9ucy1lZGl0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIudGVzdC1jb2x1bW4ge1xyXG4gIHdpZHRoOiAzNSU7XHJcbn1cclxuLm5ldy1wb3NpdGlvbiB7XHJcbiAgbWFyZ2luLWJvdHRvbTogMzBweDtcclxufVxyXG4ubmFtZS1pbnB1dCB7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbn1cclxuLm5hbWUtaW5wdXQtd3JhcHBlciB7XHJcbiAgbWFyZ2luLXRvcDogM3B4O1xyXG59XHJcbiJdfQ== */\"","module.exports = \"<div>\\r\\n  <div class=\\\"new-position row material-form\\\">\\r\\n    <div class=\\\"col-md-8 name-input-wrapper\\\">\\r\\n      <input mat-input placeholder=\\\"Nazwa\\\" class=\\\"name-input\\\"\\r\\n             [value]=\\\"name\\\" (input)=\\\"name = $event.target.value\\\">\\r\\n    </div>\\r\\n    <div class=\\\"col-md-4 full-width-button\\\">\\r\\n      <button mat-button (click)=\\\"add()\\\" [disabled]=\\\"name.length === 0\\\">\\r\\n        Dodaj\\r\\n      </button>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"positions-table\\\">\\r\\n    <table>\\r\\n      <thead>\\r\\n        <tr>\\r\\n          <td>Id</td>\\r\\n          <td>Nazwa</td>\\r\\n          <td>Aktywny</td>\\r\\n          <td>Test</td>\\r\\n        </tr>\\r\\n      </thead>\\r\\n      <tbody>\\r\\n        <tr *ngFor=\\\"let position of positions.positions\\\">\\r\\n          <td>{{position.id}}</td>\\r\\n          <td>{{position.name}}</td>\\r\\n          <td class=\\\"material-form\\\">\\r\\n            <mat-checkbox [checked]=\\\"position.active\\\" (change)=\\\"setActive(position.id, $event.checked)\\\"></mat-checkbox>\\r\\n          </td>\\r\\n          <td class=\\\"test-column\\\">\\r\\n            <mat-select placeholder=\\\"Test\\\" [value]=\\\"getSelectValue(position)\\\" (selectionChange)=\\\"assign(position.id, $event.value)\\\">\\r\\n              <mat-option *ngFor=\\\"let test of tests.tests\\\" [value]=\\\"test.id\\\">\\r\\n                {{test.name}}\\r\\n              </mat-option>\\r\\n            </mat-select>\\r\\n          </td>\\r\\n        </tr>\\r\\n      </tbody>\\r\\n    </table>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport {Position, Positions} from '../../models/positions';\r\nimport {ActivatedRoute} from '@angular/router';\r\nimport {PositionsService} from '../services/positions.service';\r\nimport {Tests} from '../../models/test';\r\n\r\n@Component({\r\n  selector: 'app-positions-edit',\r\n  templateUrl: './positions-edit.component.html',\r\n  styleUrls: ['./positions-edit.component.css']\r\n})\r\nexport class PositionsEditComponent implements OnInit {\r\n\r\n  positions: Positions;\r\n  tests: Tests;\r\n  name = '';\r\n\r\n  constructor(private route: ActivatedRoute,\r\n              private positionService: PositionsService) { }\r\n\r\n  ngOnInit() {\r\n    this.positions = this.route.snapshot.data['positions'];\r\n    this.tests = this.route.snapshot.data['tests'];\r\n  }\r\n  add(): void {\r\n    const position = new Position();\r\n    position.name = this.name;\r\n    position.active = false;\r\n    this.positionService.add(position).subscribe(\r\n      result => {\r\n        this.positions.positions.push(result);\r\n      }\r\n    );\r\n  }\r\n  assign(positionId: number, testId: number): void {\r\n    this.positionService.assign(testId, positionId).subscribe();\r\n  }\r\n  setActive(positionId: number, active: boolean): void {\r\n    this.positionService.setActive(positionId, active).subscribe();\r\n  }\r\n  getSelectValue(position: Position): number {\r\n    if (position.test === null) {\r\n      return null;\r\n    }\r\n    return position.test.id;\r\n  }\r\n}\r\n","module.exports = \".add-button {\\r\\n  margin-top: 30px;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kZXJhdG9yL3JlZGFjdG9ycy1saXN0L3JlZGFjdG9ycy1saXN0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxnQkFBZ0I7QUFDbEIiLCJmaWxlIjoic3JjL2FwcC9tb2RlcmF0b3IvcmVkYWN0b3JzLWxpc3QvcmVkYWN0b3JzLWxpc3QuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5hZGQtYnV0dG9uIHtcclxuICBtYXJnaW4tdG9wOiAzMHB4O1xyXG59XHJcbiJdfQ== */\"","module.exports = \"<div>\\r\\n  <div>\\r\\n    <table>\\r\\n      <thead>\\r\\n        <tr>\\r\\n          <td>Nazwa użytkownika</td>\\r\\n          <td>Imię i nazwisko</td>\\r\\n          <td>Modyfikuj</td>\\r\\n          <td>Usuń</td>\\r\\n        </tr>\\r\\n      </thead>\\r\\n      <tbody>\\r\\n        <tr *ngFor=\\\"let redactor of redactors.users; let i = index\\\">\\r\\n            <td>{{redactor.username}}</td>\\r\\n            <td>{{redactor.nameSurname}}</td>\\r\\n            <td class=\\\"material-form\\\">\\r\\n              <button mat-button [routerLink]=\\\"['/', modifyRedactor, redactor.username]\\\">Modyfikuj</button>\\r\\n            </td>\\r\\n            <td class=\\\"danger-button\\\">\\r\\n              <button mat-button (click)=\\\"delete(redactor.username, i)\\\">Usuń</button>\\r\\n            </td>\\r\\n        </tr>\\r\\n      </tbody>\\r\\n    </table>\\r\\n  </div>\\r\\n  <div class=\\\"row add-button material-form full-width-button\\\">\\r\\n    <div class=\\\"col-md-6\\\"></div>\\r\\n    <div class=\\\"col-md-6\\\">\\r\\n      <button mat-button [routerLink]=\\\"['/', addRedactor]\\\">Dodaj</button>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport {Users} from '../../models/user/user';\r\nimport {RedactorService} from '../services/redactor.service';\r\nimport {ActivatedRoute, Route} from '@angular/router';\r\nimport {ADD_REDACTOR_PAGE_URL, MODIFY_REDACTOR_PAGE_URL} from '../../shared/utils/frontend-urls';\r\n\r\n@Component({\r\n  selector: 'app-redactors-list',\r\n  templateUrl: './redactors-list.component.html',\r\n  styleUrls: ['./redactors-list.component.css']\r\n})\r\nexport class RedactorsListComponent implements OnInit {\r\n\r\n  addRedactor = ADD_REDACTOR_PAGE_URL;\r\n  modifyRedactor = MODIFY_REDACTOR_PAGE_URL;\r\n  redactors: Users;\r\n\r\n\r\n  constructor(private redactorService: RedactorService,\r\n              private route: ActivatedRoute) { }\r\n\r\n  ngOnInit() {\r\n    this.redactors =  this.route.snapshot.data['redactors'];\r\n  }\r\n  delete(username: string, index: number): void {\r\n    this.redactorService.delete(username)\r\n      .subscribe(() => {\r\n        this.redactors.users.splice(index, 1);\r\n      });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {ErrorHandlingService} from '../../shared/services/error-handling.service';\r\nimport {ActivatedRouteSnapshot, Resolve, Router} from '@angular/router';\r\nimport {Observable} from 'rxjs';\r\nimport {PositionsService} from './positions.service';\r\nimport {Positions} from '../../models/positions';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PositionsResolveService implements Resolve<Positions> {\r\n\r\n  constructor(private errorHandlingService: ErrorHandlingService,\r\n              private positionsService: PositionsService,\r\n              private router: Router) { }\r\n\r\n  resolve(route: ActivatedRouteSnapshot)\r\n    : Observable<Positions> | Promise<Positions> | Positions  {\r\n    this.errorHandlingService.clear();\r\n    return this.positionsService\r\n      .getPositions()\r\n      .toPromise()\r\n      .then( result => {\r\n        return result;\r\n      }).catch(() => {\r\n        return null;\r\n      });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {Observable} from 'rxjs';\r\nimport {Position, Positions} from '../../models/positions';\r\nimport {ASSIGN_POSTFIX, POSITIONS_URL} from '../../shared/utils/backend-urls';\r\nimport {HttpClient} from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PositionsService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getPositions(): Observable<Positions> {\r\n    return this.http.get<Positions>(POSITIONS_URL);\r\n  }\r\n  assign(testId: number, positionId: number): Observable<Position> {\r\n    return this.http.put<Position>(`${POSITIONS_URL}/${ASSIGN_POSTFIX}/${positionId}?testId=${testId}`, null);\r\n  }\r\n  add(position: Position): Observable<Position> {\r\n    return this.http.post<Position>(`${POSITIONS_URL}`, position);\r\n  }\r\n  setActive(positionId: number, active: boolean): Observable<Position> {\r\n    return this.http.put<Position>(`${POSITIONS_URL}/${positionId}?active=${active}`, null);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {UserService} from '../../user-edit/services/user.service';\r\nimport {ActivatedRouteSnapshot, Router} from '@angular/router';\r\nimport {Observable} from 'rxjs';\r\nimport {User} from '../../models/user/user';\r\nimport {NOT_FOUND_PAGE_URL} from '../../shared/utils/frontend-urls';\r\nimport {RedactorService} from './redactor.service';\r\nimport {UserUpdateData} from '../../models/user/user-update-data';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RedactorResolveService {\r\n\r\n  constructor(private redactorService: RedactorService,\r\n              private router: Router) { }\r\n\r\n  resolve(route: ActivatedRouteSnapshot):\r\n    Observable<UserUpdateData> | Promise<UserUpdateData> | UserUpdateData {\r\n    const username = route.params['username'];\r\n    if (username === undefined || username === null) {\r\n      this.router.navigate([NOT_FOUND_PAGE_URL]);\r\n      return null;\r\n    }\r\n    return this.redactorService.get(username)\r\n      .toPromise()\r\n      .then(result => {\r\n        return result;\r\n      });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient, HttpResponse} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {Users} from '../../models/user/user';\r\nimport {REDACTOR_URL, REGISTER_URL, USERS_URL} from '../../shared/utils/backend-urls';\r\nimport {RegisterUserDetails} from '../../models/user/register-user-details';\r\nimport {LoggedUser} from '../../models/user/logged-user';\r\nimport {UserUpdateData} from '../../models/user/user-update-data';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RedactorService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getAll(): Observable<Users> {\r\n    return this.http.get<Users>(REDACTOR_URL);\r\n  }\r\n  get(username: string): Observable<UserUpdateData> {\r\n    return this.http.get<UserUpdateData>(`${REDACTOR_URL}/${username}`);\r\n  }\r\n  delete(username: string): Observable<any> {\r\n    return this.http.delete(\r\n      `${REDACTOR_URL}/${username}`\r\n    );\r\n  }\r\n  add(registerDetails: RegisterUserDetails): Observable<any> {\r\n    return this.http.post(REDACTOR_URL, registerDetails);\r\n  }\r\n  modify(username: string, updateData: UserUpdateData): Observable<any> {\r\n    return this.http.put<LoggedUser>(\r\n      `${REDACTOR_URL}/${username}`,\r\n      updateData,\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {ErrorHandlingService} from '../../shared/services/error-handling.service';\r\n\r\nimport {ActivatedRouteSnapshot, Router} from '@angular/router';\r\nimport {Observable} from 'rxjs';\r\nimport {Users} from '../../models/user/user';\r\nimport {RedactorService} from './redactor.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RedactorsResolveService {\r\n\r\n  constructor(private errorHandlingService: ErrorHandlingService,\r\n              private redactorService: RedactorService,\r\n              private router: Router) { }\r\n\r\n  resolve(route: ActivatedRouteSnapshot)\r\n    : Observable<Users> | Promise<Users> | Users  {\r\n    this.errorHandlingService.clear();\r\n    return this.redactorService\r\n      .getAll()\r\n      .toPromise()\r\n      .then( result => {\r\n        return result;\r\n      }).catch(() => {\r\n        return null;\r\n      });\r\n  }\r\n}\r\n","module.exports = \"table {\\r\\n  width: 100%;\\r\\n  border: 1px solid var(--secondary-text-color);\\r\\n}\\r\\n\\r\\ntd {\\r\\n  text-align: center;\\r\\n  padding: 5px 20px;\\r\\n  border: 1px solid var(--secondary-text-color);\\r\\n}\\r\\n\\r\\nthead td {\\r\\n  background-color: var(--background-secondary-color);\\r\\n  font-weight: bold;\\r\\n}\\r\\n\\r\\n.redactor-main-page-container {\\r\\n  margin-bottom: 20px;\\r\\n}\\r\\n\\r\\n.file-input {\\r\\n  display: none;\\r\\n}\\r\\n\\r\\n.buttons {\\r\\n  margin-bottom: 50px;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcmVkYWN0b3IvcmVkYWN0b3ItbWFpbi1wYWdlL3JlZGFjdG9yLW1haW4tcGFnZS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsV0FBVztFQUNYLDZDQUE2QztBQUMvQzs7QUFFQTtFQUNFLGtCQUFrQjtFQUNsQixpQkFBaUI7RUFDakIsNkNBQTZDO0FBQy9DOztBQUVBO0VBQ0UsbURBQW1EO0VBQ25ELGlCQUFpQjtBQUNuQjs7QUFDQTtFQUNFLG1CQUFtQjtBQUNyQjs7QUFDQTtFQUNFLGFBQWE7QUFDZjs7QUFDQTtFQUNFLG1CQUFtQjtBQUNyQiIsImZpbGUiOiJzcmMvYXBwL3JlZGFjdG9yL3JlZGFjdG9yLW1haW4tcGFnZS9yZWRhY3Rvci1tYWluLXBhZ2UuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbInRhYmxlIHtcclxuICB3aWR0aDogMTAwJTtcclxuICBib3JkZXI6IDFweCBzb2xpZCB2YXIoLS1zZWNvbmRhcnktdGV4dC1jb2xvcik7XHJcbn1cclxuXHJcbnRkIHtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgcGFkZGluZzogNXB4IDIwcHg7XHJcbiAgYm9yZGVyOiAxcHggc29saWQgdmFyKC0tc2Vjb25kYXJ5LXRleHQtY29sb3IpO1xyXG59XHJcblxyXG50aGVhZCB0ZCB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tYmFja2dyb3VuZC1zZWNvbmRhcnktY29sb3IpO1xyXG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG59XHJcbi5yZWRhY3Rvci1tYWluLXBhZ2UtY29udGFpbmVyIHtcclxuICBtYXJnaW4tYm90dG9tOiAyMHB4O1xyXG59XHJcbi5maWxlLWlucHV0IHtcclxuICBkaXNwbGF5OiBub25lO1xyXG59XHJcbi5idXR0b25zIHtcclxuICBtYXJnaW4tYm90dG9tOiA1MHB4O1xyXG59XHJcbiJdfQ== */\"","module.exports = \"<div class=\\\"redactor-main-page-container\\\">\\r\\n\\r\\n  <div class=\\\"row material-form full-width-button buttons\\\">\\r\\n    <div class=\\\"col-md-4\\\">\\r\\n      <button mat-button (click)=onCheckTestButtonClick()\\r\\n              type=\\\"button\\\">\\r\\n        Sprawdź testy\\r\\n      </button>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-4\\\">\\r\\n      <input #fileInput\\r\\n             data-max-size=\\\"2048\\\"\\r\\n             class=\\\"file-input\\\"\\r\\n             type=\\\"file\\\" accept=\\\".csv\\\"\\r\\n             (change)=\\\"onImportTestButtonClick($event)\\\">\\r\\n      <button mat-button type=\\\"button\\\" (click)=\\\"showFileDialog()\\\" (mouseenter)=\\\"distanceCalculator.addPosition($event)\\\">\\r\\n        Importuj test\\r\\n      </button>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-4\\\">\\r\\n      <button mat-button (click)=onCreateTestButtonClick() (mouseenter)=\\\"distanceCalculator.addPosition($event)\\\"\\r\\n              type=\\\"button\\\">\\r\\n        Stwórz test\\r\\n      </button>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"margin-top\\\">\\r\\n    <app-all-tests></app-all-tests>\\r\\n  </div>\\r\\n\\r\\n\\r\\n</div>\\r\\n\"","import {Component, OnInit, ViewChild} from '@angular/core';\r\nimport {User} from '../../models/user/user';\r\nimport {UserService} from '../services/user.service';\r\nimport {Router} from '@angular/router';\r\nimport {ADD_QUESTIONS, MAIN_PAGE_URL, REDACTOR_PAGE_URL, SOLUTIONS_PAGE_URL, TEST_PAGE_URL} from '../../shared/utils/frontend-urls';\r\nimport {MatDialog} from '@angular/material';\r\nimport {TestService} from '../services/test.service';\r\nimport {ImportDialogComponent} from '../../dialogs/warning-dialog/import-dialog/import-dialog.component';\r\nimport {DistanceCalculatorService} from '../../metrics-processor/services/distance-calculator.service';\r\n\r\n@Component({\r\n  selector: 'app-editor-main-page',\r\n  templateUrl: './redactor-main-page.component.html',\r\n  styleUrls: ['./redactor-main-page.component.css']\r\n})\r\nexport class RedactorMainPageComponent implements OnInit {\r\n  @ViewChild('fileInput') fileInput: any;\r\n  constructor(private userService: UserService,\r\n              private router: Router,\r\n              private dialog: MatDialog,\r\n              private testService: TestService,\r\n              public distanceCalculator: DistanceCalculatorService) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onCheckTestButtonClick(): void {\r\n    this.router.navigate([SOLUTIONS_PAGE_URL]);\r\n  }\r\n\r\n  onCreateTestButtonClick(): void {\r\n    this.router.navigate([TEST_PAGE_URL, ADD_QUESTIONS]);\r\n  }\r\n  onImportTestButtonClick(event): void {\r\n    if (event.target.files.length === 1) {\r\n      this.testService.import(event.target.files[0]).subscribe(importReport => {\r\n        this.dialog.open(ImportDialogComponent, {\r\n          height: '400px',\r\n          width: '600px',\r\n          data: {\r\n            importReport: importReport\r\n          }\r\n        }).afterClosed().subscribe(() => {\r\n          this.router.navigated = false;\r\n          this.router.navigate([REDACTOR_PAGE_URL]);\r\n        });\r\n      });\r\n      event.target.value = '';\r\n    }\r\n  }\r\n\r\n  showFileDialog(): void {\r\n    this.fileInput.nativeElement.click();\r\n  }\r\n}\r\n","import {Route, RouterModule} from '@angular/router';\r\n\r\nimport {NgModule} from '@angular/core';\r\nimport {RedactorMainPageComponent} from './redactor-main-page/redactor-main-page.component';\r\nimport {REDACTOR_PAGE_URL} from '../shared/utils/frontend-urls';\r\nimport {TestsResolveService} from '../tests/services/tests-resolve.service';\r\n\r\nconst REDACTOR_PAGE_ROUTES: Route[] = [\r\n  {\r\n    path: REDACTOR_PAGE_URL,\r\n    component: <any>RedactorMainPageComponent,\r\n    runGuardsAndResolvers: 'always',\r\n    resolve: {\r\n      tests: TestsResolveService,\r\n    }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forChild(REDACTOR_PAGE_ROUTES),\r\n  ],\r\n  exports: [\r\n    RouterModule\r\n  ]\r\n})\r\n\r\nexport class RedactorRoutingModule {\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {RedactorMainPageComponent} from './redactor-main-page/redactor-main-page.component';\r\nimport {RedactorRoutingModule} from './redactor-routing.module';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport {MatButtonModule} from '@angular/material';\r\nimport {TestsModule} from '../tests/tests.module';\r\nimport {DialogsModule} from '../dialogs/dialogs.module';\r\nimport {AssignRedactorToTestComponent} from '../dialogs/warning-dialog/assign-redactor-to-test/assign-redactor-to-test.component';\r\nimport {ImportDialogComponent} from '../dialogs/warning-dialog/import-dialog/import-dialog.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RedactorRoutingModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    MatButtonModule,\r\n    TestsModule,\r\n    DialogsModule\r\n  ],\r\n  declarations: [RedactorMainPageComponent],\r\n  exports : [RedactorMainPageComponent],\r\n  entryComponents: [\r\n    ImportDialogComponent,\r\n    AssignRedactorToTestComponent\r\n  ]\r\n})\r\nexport class RedactorModule {\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {IMPORT_POSTFIX, TESTS_URL} from '../../shared/utils/backend-urls';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport {ImportTestReport, Test, Tests} from '../../models/test';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TestService {\r\n\r\n  constructor(private httpClient: HttpClient) {\r\n  }\r\n  import(file: File): Observable<ImportTestReport> {\r\n    const formData: FormData = new FormData();\r\n    formData.append('file', file, file.name);\r\n    return this.httpClient.post<ImportTestReport>(`${TESTS_URL}/${IMPORT_POSTFIX}`, formData);\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport {Users} from '../../models/user/user';\r\nimport {USERS_URL} from '../../shared/utils/backend-urls';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n\r\n  constructor(private httpClient: HttpClient) {\r\n  }\r\n\r\n  getUsers(): Observable<Users> {\r\n    return this.httpClient.get<Users>(\r\n      USERS_URL\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpErrorResponse} from '@angular/common/http';\r\nimport {Router} from '@angular/router';\r\nimport {LOGIN_PAGE_URL, NOT_FOUND_PAGE_URL} from '../utils/frontend-urls';\r\nimport {SessionStorageService} from './session-storage.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ErrorHandlingService {\r\n\r\n  errorMessage: string;\r\n  errorCode: number;\r\n  error: boolean;\r\n  constructor(private router: Router,\r\n              private sessionStorageService: SessionStorageService) { }\r\n\r\n  clear(): void {\r\n    this.errorCode = 0;\r\n    this.errorMessage = null;\r\n    this.error = false;\r\n  }\r\n  handle(error: HttpErrorResponse): void {\r\n    if (error.error !== undefined && error.error !== null) {\r\n      this.errorCode = error.error.code;\r\n      this.errorMessage = error.error.message;\r\n    }\r\n    this.error = true;\r\n    if (this.errorCode === 404 || this.errorCode === 504) {\r\n      this.handle404and504();\r\n    } else if (this.errorCode === 401) {\r\n      this.handle401();\r\n    } else {\r\n      window.scrollTo(0, 0);\r\n    }\r\n  }\r\n  handle401(): void {\r\n    this.sessionStorageService.clearSession();\r\n    this.router.navigate([LOGIN_PAGE_URL]);\r\n  }\r\n  handle404and504(): void {\r\n    this.router.navigate([NOT_FOUND_PAGE_URL]);\r\n  }\r\n  hasError(): boolean {\r\n    return this.error;\r\n  }\r\n  getErrorMessage(): string {\r\n    return this.errorMessage;\r\n  }\r\n  getErrorCode(): number {\r\n    return this.errorCode;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {LoggedUser} from '../../models/user/logged-user';\r\nimport {ROLE_ADMIN, ROLE_MODERATOR, ROLE_REDACTOR, ROLE_USER} from '../utils/global-variables';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SessionStorageService {\r\n\r\n  constructor() { }\r\n\r\n  storeSession(user: LoggedUser, token: string): void {\r\n    localStorage.setItem('token', token);\r\n    localStorage.setItem('userData', JSON.stringify(user));\r\n  }\r\n  updateSession(token: string): void {\r\n    localStorage.setItem('token', token);\r\n  }\r\n  clearSession(): void {\r\n    localStorage.clear();\r\n  }\r\n  logout(): void {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('userData');\r\n  }\r\n  getUser(): LoggedUser {\r\n    return JSON.parse(localStorage.getItem('userData'));\r\n  }\r\n  getToken(): string {\r\n    return localStorage.getItem('token');\r\n  }\r\n  isUserLoggedIn(): boolean {\r\n    return this.getUser() !== null;\r\n  }\r\n  hasRole(role: string): boolean {\r\n    if (!this.isUserLoggedIn()) {\r\n      return false;\r\n    }\r\n    for (let i = 0; i < this.getUser().roles.length; i++) {\r\n      if (this.getUser().roles[i].name === role) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n  isAdmin(): boolean {\r\n    return this.hasRole(ROLE_ADMIN);\r\n  }\r\n  isRedactor(): boolean {\r\n    return this.hasRole(ROLE_REDACTOR);\r\n  }\r\n  isModerator(): boolean {\r\n    return this.hasRole(ROLE_MODERATOR);\r\n  }\r\n  isUser(): boolean {\r\n    return this.hasRole(ROLE_USER);\r\n  }\r\n  checkUsername(username: string): boolean {\r\n    return this.getUser().username === username;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport {SlideshowModule} from 'ng-simple-slideshow';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    SlideshowModule\r\n  ],\r\n  exports: [\r\n  ],\r\n  declarations: [\r\n  ]\r\n})\r\nexport class SharedModule { }\r\n","export const LOGIN_URL = '/api/users/login';\r\nexport const REGISTER_URL = '/api/users';\r\nexport const ROLES_POSTFIX = 'roles';\r\nexport const USERS_URL = '/api/users';\r\nexport const PASSWORD_RESET_URL = '/api/password/reset';\r\nexport const PASSWORD_POSTFIX = 'password';\r\nexport const TESTS_URL = '/api/tests';\r\nexport const QUESTIONS_POSTFIX = 'questions';\r\nexport const SOLUTIONS_POSTFIX = 'solutions';\r\nexport const SOLUTIONS_URL = '/api/solutions';\r\nexport const POSITIONS_URL = '/api/positions';\r\nexport const TESTS_POSTFIX = 'tests';\r\nexport const ASSIGN_POSTFIX = 'assign';\r\nexport const WIKIPEDIA_UTILS_URL = '/api/utils/wikipedia';\r\nexport const SYNONYMS_UTILS_URL = '/api/utils/synonyms';\r\nexport const TRANSLATE_UTILS_URL = '/api/utils/translate';\r\nexport const REDACTOR_URL = '/api/redactors';\r\nexport const REDACTOR_POSTFIX = 'redactors';\r\nexport const IMPORT_POSTFIX = 'import';\r\nexport const EXPORT_POSTFIX = 'export';\r\nexport const METRICS_URL = '/api/metrics';\r\nexport const EMAIL_POSTFIX = 'email';\r\nexport const PDF_POSTFIX = 'pdf';\r\nexport const CSV_POSTFIX = 'csv';\r\nexport const SCREEN_URL = `${METRICS_URL}/screen`;\r\n\r\n\r\n","import {ErrorStateMatcher} from '@angular/material';\r\nimport {FormControl, FormGroupDirective, NgForm} from '@angular/forms';\r\n\r\nexport class ConfirmPasswordErrorMatcher implements  ErrorStateMatcher {\r\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\r\n    return  control.touched && (control.parent.hasError('matchPassword') || control.invalid);\r\n  }\r\n}\r\n","export const MAIN_PAGE_URL = 'main';\r\nexport const LOGIN_PAGE_URL = 'login';\r\nexport const REGISTER_PAGE_URL = 'register';\r\nexport const NOT_FOUND_PAGE_URL = 'not-found';\r\nexport const RESET_PASSWORD_PAGE_URL = 'reset-password';\r\nexport const USER_EDIT_PAGE_URL = 'account';\r\nexport const TEST_PAGE_URL = 'test';\r\nexport const TRANSLATE_TEST_PAGE_URL = 'translate';\r\nexport const ADD_QUESTIONS = 'questions';\r\nexport const REDACTOR_PAGE_URL = 'redactor';\r\nexport const USER_PAGE_URL = 'user';\r\nexport const MODERATOR_PAGE_URL = 'moderator';\r\nexport const RESOLVE_TEST_PAGE = 'resolve';\r\nexport const SOLUTIONS_PAGE_URL = 'redactor-tests';\r\nexport const CHECK_TEST = 'check-test';\r\nexport const MY_SOLUTIONS = 'my-tests';\r\nexport const MODERATOR_TESTS_PAGE_URL = 'moderator-tests';\r\nexport const MODERATOR_REDACTORS_PAGE_URL = 'moderator-redactors';\r\nexport const ADD_REDACTOR_PAGE_URL = 'add-redactor';\r\nexport const MODIFY_REDACTOR_PAGE_URL = 'modify-redactor';\r\n","export const MAX_USERNAME_LENGTH = 20;\r\nexport const MAX_PASSWORD_LENGTH = 20;\r\nexport const MIN_USERNAME_LENGTH = 3;\r\nexport const MIN_PASSWORD_LENGTH = 3;\r\n\r\nexport const ROLE_ADMIN = 'ADMIN';\r\nexport const ROLE_REDACTOR = 'REDACTOR';\r\nexport const ROLE_MODERATOR = 'MODERATOR';\r\nexport const ROLE_USER = 'USER';\r\n\r\nexport const LANGUAGE_PL = 'pl';\r\nexport const LANGUAGE_EN = 'en';\r\n\r\nexport const VARIANT_QUESTION = 'variant';\r\nexport const SCALA_QUESTION = 'scala';\r\nexport const NUMERIC_QUESTION = 'numeric';\r\nexport const OPEN_QUESTION = 'open';\r\n\r\n","import {AbstractControl} from '@angular/forms';\r\n\r\nexport class SharedConfirmPassword {\r\n   matchPasswordHelper(abstractControl: AbstractControl, firstPassword: string,\r\n                secondPassword: string): {matchPassword: boolean} {\r\n    const password = abstractControl.get(firstPassword).value;\r\n    const confirmPassword = abstractControl.get(secondPassword).value;\r\n    if (password !== confirmPassword) {\r\n      return {matchPassword: true};\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n","module.exports = \"table {\\r\\n  width: 100%;\\r\\n  border: 1px solid var(--secondary-text-color);\\r\\n}\\r\\n\\r\\ntd {\\r\\n  text-align: center;\\r\\n  padding: 5px 20px;\\r\\n  border: 1px solid var(--secondary-text-color);\\r\\n}\\r\\n\\r\\nthead td {\\r\\n  background-color: var(--background-secondary-color);\\r\\n  font-weight: bold;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdGVzdHMvYWxsLXRlc3RzL2FsbC10ZXN0cy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsV0FBVztFQUNYLDZDQUE2QztBQUMvQzs7QUFFQTtFQUNFLGtCQUFrQjtFQUNsQixpQkFBaUI7RUFDakIsNkNBQTZDO0FBQy9DOztBQUVBO0VBQ0UsbURBQW1EO0VBQ25ELGlCQUFpQjtBQUNuQiIsImZpbGUiOiJzcmMvYXBwL3Rlc3RzL2FsbC10ZXN0cy9hbGwtdGVzdHMuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbInRhYmxlIHtcclxuICB3aWR0aDogMTAwJTtcclxuICBib3JkZXI6IDFweCBzb2xpZCB2YXIoLS1zZWNvbmRhcnktdGV4dC1jb2xvcik7XHJcbn1cclxuXHJcbnRkIHtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgcGFkZGluZzogNXB4IDIwcHg7XHJcbiAgYm9yZGVyOiAxcHggc29saWQgdmFyKC0tc2Vjb25kYXJ5LXRleHQtY29sb3IpO1xyXG59XHJcblxyXG50aGVhZCB0ZCB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tYmFja2dyb3VuZC1zZWNvbmRhcnktY29sb3IpO1xyXG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG59XHJcbiJdfQ== */\"","module.exports = \"<div class=\\\"all-test-container material-form\\\">\\r\\n  <table>\\r\\n    <thead>\\r\\n    <tr>\\r\\n      <td>Id</td>\\r\\n      <td>Nazwa</td>\\r\\n      <td>Język</td>\\r\\n      <td>Edytuj</td>\\r\\n      <td>Skasuj</td>\\r\\n      <td *ngIf=\\\"isRedactor()\\\">Przetłumacz ręcznie</td>\\r\\n      <td *ngIf=\\\"isRedactor()\\\">Przetłumacz</td>\\r\\n      <td *ngIf=\\\"isRedactor() && redactors\\\">Przekaż prawo do testu</td>\\r\\n      <td *ngIf=\\\"isRedactor()\\\">Eksportuj (CSV)</td>\\r\\n      <td *ngIf=\\\"isRedactor()\\\">Eksportuj (PDF)</td>\\r\\n    </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n    <tr *ngFor=\\\"let test of tests.tests; let i = index\\\">\\r\\n      <td>{{test.id}}</td>\\r\\n      <td>{{test.name}}</td>\\r\\n      <td>{{test.language}}</td>\\r\\n      <td>\\r\\n        <button mat-button (click)=\\\"edit(test.id)\\\" (mouseenter)=\\\"distanceCalculator.addPosition($event)\\\">Edytuj</button>\\r\\n      </td>\\r\\n      <td class=\\\"danger-button\\\">\\r\\n        <button mat-button (click)=\\\"delete(test.id, i)\\\">Skasuj</button>\\r\\n      </td>\\r\\n      <td *ngIf=\\\"isRedactor()\\\">\\r\\n        <button mat-button (click)=\\\"translate(test.id)\\\" (mouseenter)=\\\"distanceCalculator.addPosition($event)\\\">Tłumacz</button>\\r\\n      </td>\\r\\n      <td *ngIf=\\\"isRedactor()\\\">\\r\\n        <button mat-button (click)=\\\"translateWholeTest(test.id)\\\">Tłumacz</button>\\r\\n      </td>\\r\\n      <td *ngIf=\\\"isRedactor() && redactors\\\">\\r\\n        <mat-select placeholder=\\\"Użytkownik\\\" (selectionChange)=\\\"assign(test.id, $event.value)\\\">\\r\\n          <div *ngFor=\\\"let redactor of redactors.users\\\">\\r\\n            <mat-option *ngIf=\\\"redactor.username !== getUsername()\\\" [value]=\\\"redactor.username\\\">\\r\\n              {{redactor.username}}\\r\\n            </mat-option>\\r\\n          </div>\\r\\n\\r\\n        </mat-select>\\r\\n      </td>\\r\\n      <td *ngIf=\\\"isRedactor()\\\">\\r\\n        <button mat-button (click)=\\\"exportCSV(test.id, test.name)\\\">Eksportuj CSV</button>\\r\\n      </td>\\r\\n      <td *ngIf=\\\"isRedactor()\\\">\\r\\n        <button mat-button (click)=\\\"exportPDF(test.id, test.name)\\\">Eksportuj PDF</button>\\r\\n      </td>\\r\\n    </tr>\\r\\n    </tbody>\\r\\n  </table>\\r\\n</div>\\r\\n\"","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\r\nimport {Tests} from '../../models/test';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {TestService} from '../services/test.service';\r\nimport {ADD_QUESTIONS, TEST_PAGE_URL, TRANSLATE_TEST_PAGE_URL} from '../../shared/utils/frontend-urls';\r\nimport {SessionStorageService} from '../../shared/services/session-storage.service';\r\nimport * as FileSaver from 'file-saver';\r\nimport {Users} from '../../models/user/user';\r\nimport {AssignRedactorToTestComponent} from '../../dialogs/warning-dialog/assign-redactor-to-test/assign-redactor-to-test.component';\r\nimport {MatDialog} from '@angular/material';\r\nimport {DistanceCalculatorService} from \"../../metrics-processor/services/distance-calculator.service\";\r\n\r\n@Component({\r\n  selector: 'app-all-tests',\r\n  templateUrl: './all-tests.component.html',\r\n  styleUrls: ['./all-tests.component.css']\r\n})\r\nexport class AllTestsComponent implements OnInit {\r\n  tests: Tests;\r\n  redactors: Users;\r\n\r\n  constructor(private route: ActivatedRoute,\r\n              private router: Router,\r\n              private testService: TestService,\r\n              private sessionStorageService: SessionStorageService,\r\n              private dialog: MatDialog,\r\n              public distanceCalculator: DistanceCalculatorService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.route.data.subscribe(data => {\r\n      this.tests = data['tests'];\r\n    });\r\n    this.redactors = this.route.snapshot.data['redactors'];\r\n  }\r\n  edit(id: number): void {\r\n    this.router.navigate([TEST_PAGE_URL, id, ADD_QUESTIONS]);\r\n  }\r\n  exportCSV(id: number, name: string): void {\r\n    this.testService.exportCSV(id).subscribe((file) => {\r\n      FileSaver.saveAs(file, `${name}.csv`);\r\n    });\r\n  }\r\n  exportPDF(id: number, name: string): void {\r\n    this.testService.exportPDF(id).subscribe((file) => {\r\n      FileSaver.saveAs(file, `${name}.pdf`);\r\n    });\r\n  }\r\n  delete(id: number, index: number): void {\r\n    this.testService.delete(id).subscribe(() => {\r\n      this.tests.tests.splice(index, 1);\r\n    });\r\n  }\r\n  translate(id: number): void {\r\n    this.router.navigate([TRANSLATE_TEST_PAGE_URL, id, ADD_QUESTIONS]);\r\n  }\r\n  translateWholeTest(id: number): void {\r\n    const test = this.tests.tests.find(it => it.id === id);\r\n    const translateToPolish = test.language === 'en';\r\n    this.testService.translateTest(id, translateToPolish).subscribe(result =>\r\n      this.tests.tests.push(result)\r\n    );\r\n  }\r\n  isRedactor(): boolean {\r\n    return this.sessionStorageService.isRedactor();\r\n  }\r\n  assign(testId: number, username: string): void {\r\n    this.testService.assign(testId, username).subscribe(() => {\r\n      this.dialog.open(AssignRedactorToTestComponent, {\r\n        height: '200px',\r\n        width: '300px',\r\n      });\r\n    });\r\n  }\r\n  getUsername(): string {\r\n    return this.sessionStorageService.getUser().username;\r\n  }\r\n}\r\n","module.exports = \".score {\\r\\n  margin-top: 25px;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdGVzdHMvY2hlY2stc29sdmVkLXRlc3QvY2hlY2stc29sdmVkLXRlc3QuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGdCQUFnQjtBQUNsQiIsImZpbGUiOiJzcmMvYXBwL3Rlc3RzL2NoZWNrLXNvbHZlZC10ZXN0L2NoZWNrLXNvbHZlZC10ZXN0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuc2NvcmUge1xyXG4gIG1hcmdpbi10b3A6IDI1cHg7XHJcbn1cclxuIl19 */\"","module.exports = \"<div class=\\\"check-solved-test-container\\\">\\r\\n  <div>\\r\\n    <app-solved-test [solution]=\\\"solution\\\"></app-solved-test>\\r\\n  </div>\\r\\n  <div class=\\\"score row material-form\\\">\\r\\n    <div class=\\\"col-md-4\\\">\\r\\n    </div>\\r\\n    <div class=\\\"col-md-4\\\">\\r\\n      <input matInput placeholder=\\\"Wynik\\\"\\r\\n             (input)=\\\"score = +$event.target.value\\\"\\r\\n             type=\\\"number\\\">\\r\\n    </div>\\r\\n    <div class=\\\"col-md-4 full-width-button\\\">\\r\\n      <button mat-button (click)=\\\"send()\\\">Oceń</button>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import {Component, Input, OnInit} from '@angular/core';\r\nimport {Score, TestSolutionWithId} from '../../models/question';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {QuestionService} from '../services/question.service';\r\nimport {SOLUTIONS_PAGE_URL} from '../../shared/utils/frontend-urls';\r\nimport {SolutionsService} from '../services/solutions.service';\r\n\r\n@Component({\r\n  selector: 'app-check-solved-test',\r\n  templateUrl: './check-solved-test.component.html',\r\n  styleUrls: ['./check-solved-test.component.css']\r\n})\r\nexport class CheckSolvedTestComponent implements OnInit {\r\n\r\n  constructor(private route: ActivatedRoute,\r\n              private solutionsService: SolutionsService,\r\n              private router: Router) {\r\n  }\r\n\r\n  solution: TestSolutionWithId;\r\n  score = 0;\r\n\r\n  ngOnInit(): void {\r\n    this.solution = this.route.snapshot.data['solution'];\r\n  }\r\n\r\n  send(): void {\r\n    const scoreModel = new Score();\r\n    scoreModel.score = this.score;\r\n    this.solutionsService.sendScore(\r\n      this.solution.id,\r\n      scoreModel\r\n    ).subscribe(result => {\r\n      this.router.navigate([SOLUTIONS_PAGE_URL]);\r\n    });\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Rlc3RzL3JlZGFjdG9yLXRlc3RzL3JlZGFjdG9yLXRlc3RzLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"solved-test-container material-form\\\">\\r\\n  <table>\\r\\n    <thead>\\r\\n    <tr>\\r\\n      <td>Id</td>\\r\\n      <td>Nazwa</td>\\r\\n      <td>Język</td>\\r\\n      <td>Użytkownik</td>\\r\\n      <td>Sprawdzony</td>\\r\\n      <td>Wynik</td>\\r\\n      <td>Sprawdź</td>\\r\\n      <td>Wyślij email</td>\\r\\n    </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n      <tr *ngFor=\\\"let solution of solutions.solutions\\\">\\r\\n        <td>{{solution.id}}</td>\\r\\n        <td>{{solution.test.name}}</td>\\r\\n        <td>{{solution.test.language}}</td>\\r\\n        <td>{{solution.user.username}}</td>\\r\\n        <td><span *ngIf=\\\"solution.checked\\\">Tak</span><span *ngIf=\\\"!solution.checked\\\">Nie</span></td>\\r\\n        <td>{{solution.score}}</td>\\r\\n        <td>\\r\\n          <button mat-button [routerLink]=\\\"['..', checkPage, solution.id]\\\">Sprawdź</button>\\r\\n        </td>\\r\\n        <td>\\r\\n          <button mat-button [disabled]=\\\"!solution.checked\\\" (click)=\\\"sendEmail(solution.id)\\\">Wyślij</button>\\r\\n        </td>\\r\\n      </tr>\\r\\n    </tbody>\\r\\n  </table>\\r\\n</div>\\r\\n\"","import {Component, OnInit} from '@angular/core';\r\nimport {Solutions} from '../../models/question';\r\nimport {ActivatedRoute} from '@angular/router';\r\nimport {CHECK_TEST} from '../../shared/utils/frontend-urls';\r\nimport {SolutionsService} from '../services/solutions.service';\r\n\r\n@Component({\r\n  selector: 'app-redactor-tests',\r\n  templateUrl: './redactor-tests.component.html',\r\n  styleUrls: ['./redactor-tests.component.css']\r\n})\r\nexport class RedactorTestsComponent implements OnInit {\r\n\r\n  constructor(private route: ActivatedRoute,\r\n              private solutionsService: SolutionsService) {\r\n  }\r\n\r\n  solutions: Solutions;\r\n  checkPage = CHECK_TEST;\r\n\r\n  ngOnInit(): void {\r\n    this.solutions = this.route.snapshot.data['solutions'];\r\n  }\r\n  sendEmail(id: number): void {\r\n    this.solutionsService.sendEmail(id).subscribe();\r\n  }\r\n}\r\n","module.exports = \".resolve-test-container {\\r\\n  margin-bottom: 20px;\\r\\n}\\r\\n.question {\\r\\n  margin-bottom: 10px;\\r\\n}\\r\\n.answer  {\\r\\n  padding: 10px;\\r\\n}\\r\\n.open-input {\\r\\n  width: 70%;\\r\\n}\\r\\n.send-button {\\r\\n  margin-top: 20px;\\r\\n}\\r\\n.question-answer-container {\\r\\n  background-color: var(--background-secondary-color);\\r\\n  margin-bottom: 15px;\\r\\n  padding: 10px;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdGVzdHMvcmVzb2x2ZS10ZXN0L3Jlc29sdmUtdGVzdC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsbUJBQW1CO0FBQ3JCO0FBQ0E7RUFDRSxtQkFBbUI7QUFDckI7QUFDQTtFQUNFLGFBQWE7QUFDZjtBQUNBO0VBQ0UsVUFBVTtBQUNaO0FBQ0E7RUFDRSxnQkFBZ0I7QUFDbEI7QUFDQTtFQUNFLG1EQUFtRDtFQUNuRCxtQkFBbUI7RUFDbkIsYUFBYTtBQUNmIiwiZmlsZSI6InNyYy9hcHAvdGVzdHMvcmVzb2x2ZS10ZXN0L3Jlc29sdmUtdGVzdC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnJlc29sdmUtdGVzdC1jb250YWluZXIge1xyXG4gIG1hcmdpbi1ib3R0b206IDIwcHg7XHJcbn1cclxuLnF1ZXN0aW9uIHtcclxuICBtYXJnaW4tYm90dG9tOiAxMHB4O1xyXG59XHJcbi5hbnN3ZXIgIHtcclxuICBwYWRkaW5nOiAxMHB4O1xyXG59XHJcbi5vcGVuLWlucHV0IHtcclxuICB3aWR0aDogNzAlO1xyXG59XHJcbi5zZW5kLWJ1dHRvbiB7XHJcbiAgbWFyZ2luLXRvcDogMjBweDtcclxufVxyXG4ucXVlc3Rpb24tYW5zd2VyLWNvbnRhaW5lciB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tYmFja2dyb3VuZC1zZWNvbmRhcnktY29sb3IpO1xyXG4gIG1hcmdpbi1ib3R0b206IDE1cHg7XHJcbiAgcGFkZGluZzogMTBweDtcclxufVxyXG4iXX0= */\"","module.exports = \"<div class=\\\"resolve-test-container material-form\\\">\\r\\n  <div class=\\\"question-answer-container\\\" *ngFor=\\\"let question of test.questions; let i = index;\\\">\\r\\n    <div class=\\\"question\\\">\\r\\n      {{question.question}}\\r\\n    </div>\\r\\n    <hr>\\r\\n    <div class=\\\"answer\\\">\\r\\n      <div *ngIf=\\\"question.type === variant\\\">\\r\\n          <mat-radio-group>\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-md-3\\\" *ngFor=\\\"let variant of question.variants; let j = index\\\">\\r\\n                <mat-radio-button value=\\\"{{j}}\\\" (click)=\\\"setAnswer(i, variant.text)\\\">\\r\\n                  {{variant.text}}\\r\\n                </mat-radio-button>\\r\\n              </div>\\r\\n            </div>\\r\\n          </mat-radio-group>\\r\\n      </div>\\r\\n      <div *ngIf=\\\"question.type === scala\\\">\\r\\n        <mat-radio-group>\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-2\\\" *ngFor=\\\"let variant of getScalaVariants(question.min, question.max);\\\">\\r\\n              <mat-radio-button value=\\\"{{variant}}\\\" (click)=\\\"setAnswer(i, variant.toString())\\\">\\r\\n                {{variant}}\\r\\n              </mat-radio-button>\\r\\n            </div>\\r\\n          </div>\\r\\n        </mat-radio-group>\\r\\n      </div>\\r\\n      <div *ngIf=\\\"question.type === numeric\\\">\\r\\n        <input matInput placeholder=\\\"Odpowiedź\\\"\\r\\n               (input)=\\\"setAnswer(i, $event.target.value)\\\"\\r\\n               type=\\\"number\\\">\\r\\n      </div>\\r\\n      <div *ngIf=\\\"question.type === open\\\">\\r\\n        <input class=\\\"open-input\\\"\\r\\n               matInput placeholder=\\\"Odpowiedź\\\"\\r\\n               (input)=\\\"setAnswer(i, $event.target.value)\\\">\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"full-width-button send-button\\\">\\r\\n    <button mat-button (click)=\\\"send()\\\">Zakończ test</button>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {Questions, TestAnswer, TestSolution} from '../../models/question';\r\nimport {NUMERIC_QUESTION, OPEN_QUESTION, SCALA_QUESTION, VARIANT_QUESTION} from '../../shared/utils/global-variables';\r\nimport {USER_PAGE_URL} from '../../shared/utils/frontend-urls';\r\nimport {SolutionsService} from '../services/solutions.service';\r\n\r\n@Component({\r\n  selector: 'app-resolve-test',\r\n  templateUrl: './resolve-test.component.html',\r\n  styleUrls: ['./resolve-test.component.css']\r\n})\r\nexport class ResolveTestComponent implements OnInit {\r\n\r\n  constructor(private route: ActivatedRoute,\r\n              private router: Router,\r\n              private solutionsService: SolutionsService) { }\r\n  solution: TestSolution;\r\n  test: Questions;\r\n  variant = VARIANT_QUESTION;\r\n  scala = SCALA_QUESTION;\r\n  numeric = NUMERIC_QUESTION;\r\n  open = OPEN_QUESTION;\r\n\r\n  ngOnInit() {\r\n    this.test = this.route.snapshot.data['test'];\r\n    this.createEmptySolution();\r\n  }\r\n\r\n  createEmptySolution(): void {\r\n    this.solution = new TestSolution();\r\n    this.solution.testId = +this.route.snapshot.paramMap.get('test');\r\n    this.solution.answers = [];\r\n    for (let i = 0; i < this.test.questions.length; i++) {\r\n      const answer = new TestAnswer();\r\n      answer.answer = '';\r\n      answer.question = this.test.questions[i].question;\r\n      this.solution.answers.push(answer);\r\n    }\r\n  }\r\n  setAnswer(id: number, answer: string): void {\r\n    this.solution.answers[id].answer = answer;\r\n  }\r\n  getScalaVariants(min: number, max: number): number[] {\r\n    const result = [];\r\n\r\n    for (let i = min; i <= max; i++) {\r\n      result.push(i);\r\n    }\r\n\r\n    return result;\r\n  }\r\n  send(): void {\r\n    this.solutionsService.sendSolution(this.solution).subscribe(\r\n      result => {\r\n        this.router.navigate([USER_PAGE_URL]);\r\n      }\r\n    );\r\n\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {ActivatedRouteSnapshot, Router} from '@angular/router';\r\nimport {QuestionService} from './question.service';\r\nimport {Questions} from '../../models/question';\r\nimport {ErrorHandlingService} from '../../shared/services/error-handling.service';\r\nimport {Observable} from 'rxjs';\r\nimport {NOT_FOUND_PAGE_URL} from '../../shared/utils/frontend-urls';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class QuestionResolveService {\r\n\r\n  constructor(private errorHandlingService: ErrorHandlingService,\r\n              private questionService: QuestionService,\r\n              private router: Router) { }\r\n\r\n  resolve(route: ActivatedRouteSnapshot)\r\n  : Observable<Questions> | Promise<Questions> | Questions  {\r\n    this.errorHandlingService.clear();\r\n    let strId: string;\r\n    strId = route.params['test'];\r\n    let testId: number;\r\n    if (strId === undefined) {\r\n      testId = 1;\r\n    } else {\r\n      testId = +strId;\r\n    }\r\n    if (isNaN(testId) || testId < 1) {\r\n      this.router.navigate([NOT_FOUND_PAGE_URL]);\r\n      return {} as Questions;\r\n    } else {\r\n      return this.questionService\r\n        .get(testId)\r\n        .toPromise()\r\n        .then( result => {\r\n          return result;\r\n        }).catch(() => {\r\n          return null;\r\n        });\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {Questions, Score, Solutions, TestSolution, TestSolutionWithId} from '../../models/question';\r\nimport {QUESTIONS_POSTFIX, SOLUTIONS_POSTFIX, SOLUTIONS_URL, TESTS_URL, USERS_URL} from '../../shared/utils/backend-urls';\r\nimport {SessionStorageService} from '../../shared/services/session-storage.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class QuestionService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  get(testId: number): Observable<Questions> {\r\n    return this.http.get<Questions>(`${TESTS_URL}/${testId}/${QUESTIONS_POSTFIX}`);\r\n  }\r\n  save(testId: number, questions: Questions): Observable<Questions>  {\r\n    return this.http.post<Questions>(`${TESTS_URL}/${testId}/${QUESTIONS_POSTFIX}`, questions);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {ErrorHandlingService} from '../../shared/services/error-handling.service';\r\nimport {QuestionService} from './question.service';\r\nimport {ActivatedRouteSnapshot, Resolve, Router} from '@angular/router';\r\nimport {Observable} from 'rxjs';\r\nimport {TestSolutionWithId} from '../../models/question';\r\nimport {NOT_FOUND_PAGE_URL} from '../../shared/utils/frontend-urls';\r\nimport {SolutionsService} from './solutions.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SolutionResolveService {\r\n\r\n  constructor(private errorHandlingService: ErrorHandlingService,\r\n              private solutionsService: SolutionsService,\r\n              private router: Router) { }\r\n\r\n  resolve(route: ActivatedRouteSnapshot)\r\n    : Observable<TestSolutionWithId> | Promise<TestSolutionWithId> | TestSolutionWithId  {\r\n    this.errorHandlingService.clear();\r\n    let strId: string;\r\n    strId = route.params['test'];\r\n    let testId: number;\r\n    if (strId === undefined) {\r\n      testId = 1;\r\n    } else {\r\n      testId = +strId;\r\n    }\r\n    if (isNaN(testId) || testId < 1) {\r\n      this.router.navigate([NOT_FOUND_PAGE_URL]);\r\n      return {} as TestSolutionWithId;\r\n    } else {\r\n      return this.solutionsService\r\n        .getSolution(testId)\r\n        .toPromise()\r\n        .then( result => {\r\n          return result;\r\n        }).catch(() => {\r\n          return null;\r\n        });\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {ErrorHandlingService} from '../../shared/services/error-handling.service';\r\nimport {QuestionService} from './question.service';\r\nimport {ActivatedRouteSnapshot, Router} from '@angular/router';\r\nimport {Observable} from 'rxjs';\r\nimport {Solutions} from '../../models/question';\r\nimport {SolutionsService} from './solutions.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SolutionsForRedactorResolveService {\r\n\r\n  constructor(private errorHandlingService: ErrorHandlingService,\r\n              private solutionService: SolutionsService,\r\n              private router: Router) { }\r\n\r\n  resolve(route: ActivatedRouteSnapshot)\r\n    : Observable<Solutions> | Promise<Solutions> | Solutions  {\r\n    this.errorHandlingService.clear();\r\n    return this.solutionService\r\n      .getAllForRedactor()\r\n      .toPromise()\r\n      .then( result => {\r\n        return result;\r\n      }).catch(() => {\r\n        return null;\r\n      });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {Score, Solutions, TestSolution, TestSolutionWithId} from '../../models/question';\r\nimport {Observable} from 'rxjs';\r\nimport {EMAIL_POSTFIX, SOLUTIONS_POSTFIX, SOLUTIONS_URL, USERS_URL} from '../../shared/utils/backend-urls';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {SessionStorageService} from '../../shared/services/session-storage.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SolutionsService {\r\n\r\n  constructor(private http: HttpClient,\r\n              private sessionStorageService: SessionStorageService) { }\r\n\r\n  sendSolution(solution: TestSolution): Observable<TestSolutionWithId> {\r\n    return this.http.post<TestSolutionWithId>(\r\n      `${USERS_URL}/${this.sessionStorageService.getUser().username}/${SOLUTIONS_POSTFIX}`,\r\n      solution);\r\n  }\r\n  getAllForRedactor(): Observable<Solutions> {\r\n    return this.http.get<Solutions>(`${SOLUTIONS_URL}`);\r\n  }\r\n  getAllForUser(): Observable<Solutions> {\r\n    return this.http.get<Solutions>(`${USERS_URL}/${this.sessionStorageService.getUser().username}/${SOLUTIONS_POSTFIX}`);\r\n  }\r\n  getSolution(id: number): Observable<TestSolutionWithId> {\r\n    return this.http.get<TestSolutionWithId>(`${SOLUTIONS_URL}/${id}`);\r\n  }\r\n  sendScore(id: number, score: Score): Observable<Score> {\r\n    return this.http.put<Score>(\r\n      `${SOLUTIONS_URL}/${id}`,\r\n      score);\r\n  }\r\n  sendEmail(id: number): Observable<any> {\r\n    return this.http.post<any>(\r\n      `${SOLUTIONS_URL}/${id}/${EMAIL_POSTFIX}`,\r\n      null);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {ErrorHandlingService} from '../../shared/services/error-handling.service';\r\nimport {ActivatedRouteSnapshot, Router} from '@angular/router';\r\nimport {Observable} from 'rxjs';\r\nimport {Questions} from '../../models/question';\r\nimport {NOT_FOUND_PAGE_URL} from '../../shared/utils/frontend-urls';\r\nimport {TestService} from './test.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TestResolveService {\r\n\r\n  constructor(private errorHandlingService: ErrorHandlingService,\r\n              private testService: TestService,\r\n              private router: Router) { }\r\n\r\n  resolve(route: ActivatedRouteSnapshot)\r\n    : Observable<Questions> | Promise<Questions> | Questions  {\r\n    this.errorHandlingService.clear();\r\n    let strId: string;\r\n    strId = route.params['test'];\r\n    let testId: number;\r\n    if (strId === undefined) {\r\n      testId = 1;\r\n    } else {\r\n      testId = +strId;\r\n    }\r\n    if (isNaN(testId) || testId < 1) {\r\n      this.router.navigate([NOT_FOUND_PAGE_URL]);\r\n      return {} as Questions;\r\n    } else {\r\n      return this.testService\r\n        .get(testId)\r\n        .toPromise()\r\n        .then( result => {\r\n          return result;\r\n        }).catch(() => {\r\n          return null;\r\n        });\r\n    }\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {Test, Tests} from '../../models/test';\r\nimport {\r\n  REDACTOR_POSTFIX,\r\n  EXPORT_POSTFIX,\r\n  SYNONYMS_UTILS_URL,\r\n  TESTS_URL,\r\n  TRANSLATE_UTILS_URL,\r\n  WIKIPEDIA_UTILS_URL,\r\n  PDF_POSTFIX,\r\n  CSV_POSTFIX\r\n} from '../../shared/utils/backend-urls';\r\nimport {SessionStorageService} from '../../shared/services/session-storage.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TestService {\r\n\r\n  constructor(private http: HttpClient,\r\n              private sessionStorageService: SessionStorageService) {\r\n  }\r\n\r\n  getAll(): Observable<Tests> {\r\n    return this.http.get<Tests>(TESTS_URL);\r\n  }\r\n\r\n  get(id: number): Observable<Test> {\r\n    return this.http.get<Test>(`${TESTS_URL}/${id}`);\r\n  }\r\n\r\n  create(test: Test): Observable<Test> {\r\n    return this.http.post<Test>(`${TESTS_URL}?username=${this.sessionStorageService.getUser().username}`, test);\r\n  }\r\n\r\n  update(id: number, test: Test): Observable<Test> {\r\n    return this.http.put<Test>(`${TESTS_URL}/${id}`, test);\r\n  }\r\n\r\n  delete(id: number): Observable<any> {\r\n    return this.http.delete(`${TESTS_URL}/${id}`);\r\n  }\r\n\r\n  getWikipediaDefinition(baseText: String, language: String): Observable<String> {\r\n    return this.http.get(`${WIKIPEDIA_UTILS_URL}?wantedText=${baseText}&language=${language}`, {responseType: 'text'});\r\n  }\r\n\r\n  getTranslation(textToTranslate: String, translateToPolish: Boolean): Observable<String> {\r\n    return this.http.get(`${TRANSLATE_UTILS_URL}?textToTranslate=${textToTranslate}&translateToPolish=${translateToPolish}`\r\n      , {responseType: 'text'});\r\n  }\r\n\r\n  getSynonyms(baseWord: String, language: String): Observable<[String]> {\r\n    return this.http.get<[String]>(`${SYNONYMS_UTILS_URL}?baseWord=${baseWord}&language=${language}`);\r\n  }\r\n  assign(testId: number, username: string): Observable<any> {\r\n    return this.http.put(`${TESTS_URL}/${testId}/${REDACTOR_POSTFIX}?username=${username}`, null);\r\n  }\r\n  exportCSV(id: number): Observable<any> {\r\n    return this.http.get(`${TESTS_URL}/${EXPORT_POSTFIX}/${id}/${CSV_POSTFIX}`,\r\n      {responseType: 'blob'});\r\n  }\r\n  exportPDF(id: number):\r\n    Observable<any> {\r\n    return this.http.get(`${TESTS_URL}/${EXPORT_POSTFIX}/${id}/${PDF_POSTFIX}`,\r\n      {responseType: 'blob'});\r\n  }\r\n  translateTest(id: number, translateToPolish: Boolean): Observable<Test> {\r\n    return this.http.get<Test>(`${TESTS_URL}/translate/${id}?username=${this.sessionStorageService.getUser().username}&translateToPolish=${translateToPolish}`);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {ErrorHandlingService} from '../../shared/services/error-handling.service';\r\nimport {SolutionsService} from './solutions.service';\r\nimport {ActivatedRouteSnapshot, Resolve, Router} from '@angular/router';\r\nimport {Observable} from 'rxjs';\r\nimport {Solutions} from '../../models/question';\r\nimport {TestService} from './test.service';\r\nimport {Tests} from '../../models/test';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TestsResolveService implements Resolve<Tests> {\r\n\r\n  constructor(private errorHandlingService: ErrorHandlingService,\r\n              private testService: TestService,\r\n              private router: Router) { }\r\n\r\n  resolve(route: ActivatedRouteSnapshot)\r\n    : Observable<Tests> | Promise<Tests> | Tests  {\r\n    this.errorHandlingService.clear();\r\n    return this.testService\r\n      .getAll()\r\n      .toPromise()\r\n      .then( result => {\r\n        return result;\r\n      }).catch(() => {\r\n        return null;\r\n      });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {ErrorHandlingService} from '../../shared/services/error-handling.service';\r\nimport {SolutionsService} from './solutions.service';\r\nimport {ActivatedRouteSnapshot, Router} from '@angular/router';\r\nimport {Observable} from 'rxjs';\r\nimport {Solutions} from '../../models/question';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserSolutionsResolveService {\r\n\r\n  constructor(private errorHandlingService: ErrorHandlingService,\r\n              private solutionService: SolutionsService,\r\n              private router: Router) { }\r\n\r\n  resolve(route: ActivatedRouteSnapshot)\r\n    : Observable<Solutions> | Promise<Solutions> | Solutions  {\r\n    this.errorHandlingService.clear();\r\n    return this.solutionService\r\n      .getAllForUser()\r\n      .toPromise()\r\n      .then( result => {\r\n        return result;\r\n      }).catch(() => {\r\n        return null;\r\n      });\r\n  }\r\n}\r\n","module.exports = \".test-question-answer-container {\\r\\n  background-color: var(--background-secondary-color);\\r\\n  margin-bottom: 15px;\\r\\n  padding: 10px;\\r\\n}\\r\\n\\r\\n.question {\\r\\n  margin-bottom: 10px;\\r\\n}\\r\\n\\r\\n.answer {\\r\\n  padding-bottom: 5px;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdGVzdHMvc29sdmVkLXRlc3Qvc29sdmVkLXRlc3QuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLG1EQUFtRDtFQUNuRCxtQkFBbUI7RUFDbkIsYUFBYTtBQUNmOztBQUVBO0VBQ0UsbUJBQW1CO0FBQ3JCOztBQUNBO0VBQ0UsbUJBQW1CO0FBQ3JCIiwiZmlsZSI6InNyYy9hcHAvdGVzdHMvc29sdmVkLXRlc3Qvc29sdmVkLXRlc3QuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi50ZXN0LXF1ZXN0aW9uLWFuc3dlci1jb250YWluZXIge1xyXG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWJhY2tncm91bmQtc2Vjb25kYXJ5LWNvbG9yKTtcclxuICBtYXJnaW4tYm90dG9tOiAxNXB4O1xyXG4gIHBhZGRpbmc6IDEwcHg7XHJcbn1cclxuXHJcbi5xdWVzdGlvbiB7XHJcbiAgbWFyZ2luLWJvdHRvbTogMTBweDtcclxufVxyXG4uYW5zd2VyIHtcclxuICBwYWRkaW5nLWJvdHRvbTogNXB4O1xyXG59XHJcbiJdfQ== */\"","module.exports = \"<div class=\\\"solved-test-container material-form\\\">\\r\\n  <div class=\\\"test-question-answer-container\\\" *ngFor=\\\"let question of solution.answers;\\\">\\r\\n    <div class=\\\"question\\\">\\r\\n      Pytanie: <b>{{question.question}}</b>\\r\\n    </div>\\r\\n    <div class=\\\"answer\\\">\\r\\n      Odpowiedź: {{question.answer}}\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import {Component, Input, OnInit} from '@angular/core';\r\nimport {TestSolutionWithId} from '../../models/question';\r\n\r\n@Component({\r\n  selector: 'app-solved-test',\r\n  templateUrl: './solved-test.component.html',\r\n  styleUrls: ['./solved-test.component.css']\r\n})\r\nexport class SolvedTestComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  @Input()\r\n  solution: TestSolutionWithId;\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \".number-input {\\r\\n  width: 100%;\\r\\n  margin-top: 5px;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdGVzdHMvdGVzdC1lZGl0b3Ivc2luZ2xlLXF1ZXN0aW9uL3NjYWxhLWFuc3dlci9zY2FsYS1hbnN3ZXIuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFdBQVc7RUFDWCxlQUFlO0FBQ2pCIiwiZmlsZSI6InNyYy9hcHAvdGVzdHMvdGVzdC1lZGl0b3Ivc2luZ2xlLXF1ZXN0aW9uL3NjYWxhLWFuc3dlci9zY2FsYS1hbnN3ZXIuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5udW1iZXItaW5wdXQge1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIG1hcmdpbi10b3A6IDVweDtcclxufVxyXG4iXX0= */\"","module.exports = \"<div class=\\\"scala-wrapper\\\">\\r\\n  <input class=\\\"number-input\\\"\\r\\n    matInput placeholder=\\\"Wartość minimalna\\\"\\r\\n    [value]=\\\"question.min\\\" (input)=\\\"handleInputMin($event)\\\"\\r\\n    type=\\\"number\\\" [max]=\\\"question.max - 1\\\" [min]=\\\"0\\\">\\r\\n  <input class=\\\"number-input\\\"\\r\\n    matInput placeholder=\\\"Wartość maksmalna\\\"\\r\\n    [value]=\\\"question.max\\\" (input)=\\\"handleInputMax($event)\\\"\\r\\n    type=\\\"number\\\" [min]=\\\"question.min + 1\\\" [max]=\\\"100\\\">\\r\\n</div>\\r\\n\"","import {Component, Input, OnInit} from '@angular/core';\r\nimport {Question} from '../../../../models/question';\r\n\r\n@Component({\r\n  selector: 'app-scala-answer',\r\n  templateUrl: './scala-answer.component.html',\r\n  styleUrls: ['./scala-answer.component.css']\r\n})\r\nexport class ScalaAnswerComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  @Input()\r\n  question: Question;\r\n\r\n  ngOnInit() {\r\n    if (this.question.min === this.question.max && this.question.min === 0) {\r\n      this.question.min = 1;\r\n      this.question.max = 5;\r\n    }\r\n  }\r\n\r\n  handleInputMin(event: any): void {\r\n    this.question.min = + event.target.value;\r\n    if (this.question.min > this.question.max) {\r\n      this.question.min = this.question.max - 1;\r\n      event.target.value = this.question.max - 1;\r\n    }\r\n  }\r\n  handleInputMax(event: any): void {\r\n    this.question.max = + event.target.value;\r\n    if (this.question.max < this.question.min) {\r\n      this.question.max = this.question.min + 1;\r\n      event.target.value = this.question.min + 1;\r\n    }\r\n  }\r\n}\r\n","module.exports = \".single-question-container {\\r\\n  padding: 20px 40px 20px 40px;\\r\\n}\\r\\n.question-input {\\r\\n  width: 100%;\\r\\n  margin-bottom: 10px\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdGVzdHMvdGVzdC1lZGl0b3Ivc2luZ2xlLXF1ZXN0aW9uL3NpbmdsZS1xdWVzdGlvbi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsNEJBQTRCO0FBQzlCO0FBQ0E7RUFDRSxXQUFXO0VBQ1g7QUFDRiIsImZpbGUiOiJzcmMvYXBwL3Rlc3RzL3Rlc3QtZWRpdG9yL3NpbmdsZS1xdWVzdGlvbi9zaW5nbGUtcXVlc3Rpb24uY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5zaW5nbGUtcXVlc3Rpb24tY29udGFpbmVyIHtcclxuICBwYWRkaW5nOiAyMHB4IDQwcHggMjBweCA0MHB4O1xyXG59XHJcbi5xdWVzdGlvbi1pbnB1dCB7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgbWFyZ2luLWJvdHRvbTogMTBweFxyXG59XHJcbiJdfQ== */\"","module.exports = \"<div class=\\\"single-question-container full-width-form\\\">\\r\\n  <mat-form-field>\\r\\n    <mat-label>Typ pytania</mat-label>\\r\\n    <mat-select [(value)]=\\\"question.type\\\">\\r\\n      <mat-option *ngFor=\\\"let type of types\\\" [value]=\\\"type.value\\\">\\r\\n        {{type.viewValue}}\\r\\n      </mat-option>\\r\\n    </mat-select>\\r\\n  </mat-form-field>\\r\\n  <input class=\\\"question-input\\\" matInput placeholder=\\\"Pytanie\\\"\\r\\n         [value]=\\\"question.question\\\" (input)=\\\"question.question = $event.target.value\\\">\\r\\n  <mat-error *ngIf=\\\"question.question.length === 0\\\">\\r\\n    Musisz podać treść pytania\\r\\n  </mat-error>\\r\\n\\r\\n  <div #scala *ngIf=\\\"isScala()\\\">\\r\\n    <app-scala-answer [question]=\\\"question\\\" ></app-scala-answer>\\r\\n  </div>\\r\\n  <div #variant *ngIf=\\\"isVariant()\\\">\\r\\n    <app-variant-answer [variants]=\\\"question.variants\\\"></app-variant-answer>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import {Component, Input, OnInit, ViewChild} from '@angular/core';\r\nimport {Question} from '../../../models/question';\r\nimport {NUMERIC_QUESTION, OPEN_QUESTION, SCALA_QUESTION, VARIANT_QUESTION} from '../../../shared/utils/global-variables';\r\nimport {ScalaAnswerComponent} from './scala-answer/scala-answer.component';\r\nimport {VariantAnswerComponent} from './variant-answer/variant-answer.component';\r\n\r\nexport interface Type {\r\n  value: string;\r\n  viewValue: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-single-question',\r\n  templateUrl: './single-question.component.html',\r\n  styleUrls: ['./single-question.component.css']\r\n})\r\nexport class SingleQuestionComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  @Input()\r\n  question: Question;\r\n\r\n  types: Type[] = [\r\n    {value: VARIANT_QUESTION, viewValue: 'Wyboru'},\r\n    {value: SCALA_QUESTION, viewValue: 'Skali'},\r\n    {value: NUMERIC_QUESTION, viewValue: 'Numeryczne'},\r\n    {value: OPEN_QUESTION, viewValue: 'Otwarte'},\r\n  ];\r\n  selected: string;\r\n\r\n  @ViewChild('scala')\r\n  scala: ScalaAnswerComponent;\r\n  @ViewChild('variant')\r\n  variant: VariantAnswerComponent;\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n  isScala(): boolean {\r\n    return this.question.type === SCALA_QUESTION;\r\n  }\r\n  isVariant(): boolean {\r\n    return this.question.type === VARIANT_QUESTION;\r\n  }\r\n}\r\n","module.exports = \".variant-input {\\r\\n  width: 100%;\\r\\n}\\r\\n.variant-button {\\r\\n  margin-left: 10px;\\r\\n  padding: 0px 30px;\\r\\n}\\r\\n.input-wrapper {\\r\\n  width: 80%;\\r\\n  float: left;\\r\\n}\\r\\n.button-wrapper {\\r\\n  float: left;\\r\\n}\\r\\n.variant-wrapper {\\r\\n  margin-top: 5px;\\r\\n}\\r\\n.add-button {\\r\\n  margin-top: 5px;\\r\\n}\\r\\n.add-answer-button {\\r\\n  margin-top: 10px;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdGVzdHMvdGVzdC1lZGl0b3Ivc2luZ2xlLXF1ZXN0aW9uL3ZhcmlhbnQtYW5zd2VyL3ZhcmlhbnQtYW5zd2VyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFXO0FBQ2I7QUFDQTtFQUNFLGlCQUFpQjtFQUNqQixpQkFBaUI7QUFDbkI7QUFDQTtFQUNFLFVBQVU7RUFDVixXQUFXO0FBQ2I7QUFDQTtFQUNFLFdBQVc7QUFDYjtBQUNBO0VBQ0UsZUFBZTtBQUNqQjtBQUNBO0VBQ0UsZUFBZTtBQUNqQjtBQUNBO0VBQ0UsZ0JBQWdCO0FBQ2xCIiwiZmlsZSI6InNyYy9hcHAvdGVzdHMvdGVzdC1lZGl0b3Ivc2luZ2xlLXF1ZXN0aW9uL3ZhcmlhbnQtYW5zd2VyL3ZhcmlhbnQtYW5zd2VyLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIudmFyaWFudC1pbnB1dCB7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbn1cclxuLnZhcmlhbnQtYnV0dG9uIHtcclxuICBtYXJnaW4tbGVmdDogMTBweDtcclxuICBwYWRkaW5nOiAwcHggMzBweDtcclxufVxyXG4uaW5wdXQtd3JhcHBlciB7XHJcbiAgd2lkdGg6IDgwJTtcclxuICBmbG9hdDogbGVmdDtcclxufVxyXG4uYnV0dG9uLXdyYXBwZXIge1xyXG4gIGZsb2F0OiBsZWZ0O1xyXG59XHJcbi52YXJpYW50LXdyYXBwZXIge1xyXG4gIG1hcmdpbi10b3A6IDVweDtcclxufVxyXG4uYWRkLWJ1dHRvbiB7XHJcbiAgbWFyZ2luLXRvcDogNXB4O1xyXG59XHJcbi5hZGQtYW5zd2VyLWJ1dHRvbiB7XHJcbiAgbWFyZ2luLXRvcDogMTBweDtcclxufVxyXG4iXX0= */\"","module.exports = \"<div class=\\\"variant-container\\\">\\r\\n  <mat-error *ngIf=\\\"variants.length < 2\\\">\\r\\n    Musisz podać co najmniej 2 warianty odpowiedzi.\\r\\n  </mat-error>\\r\\n  <div class=\\\"variant-wrapper danger-button\\\" *ngFor=\\\"let variant of variants; let i = index;\\\" >\\r\\n    <div class=\\\"input-wrapper\\\">\\r\\n      <input class=\\\"variant-input\\\" [value]=\\\"variant.text\\\" (input)=\\\"variant.text = $event.target.value\\\">\\r\\n      <mat-error *ngIf=\\\"variant.text.length === 0\\\">\\r\\n        Musisz podać odpowiedź\\r\\n      </mat-error>\\r\\n    </div>\\r\\n    <div class=\\\"button-wrapper\\\">\\r\\n      <button class=\\\"variant-button\\\" mat-button (click)=\\\"delete(i)\\\">Usuń</button>\\r\\n    </div>\\r\\n    <div style=\\\"clear:both\\\"></div>\\r\\n  </div>\\r\\n  <div class=\\\"full-width-button add-answer-button row\\\">\\r\\n    <div class=\\\"col-md-8\\\"></div>\\r\\n    <button mat-button class=\\\"col-md-4\\\"(click)=\\\"add()\\\">Dodaj odpowiedź</button>\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\"","import {Component, Input, OnInit} from '@angular/core';\r\nimport {Question, Variant} from '../../../../models/question';\r\nimport {text} from '@angular/core/src/render3/instructions';\r\n\r\n@Component({\r\n  selector: 'app-variant-answer',\r\n  templateUrl: './variant-answer.component.html',\r\n  styleUrls: ['./variant-answer.component.css']\r\n})\r\nexport class VariantAnswerComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  @Input()\r\n  variants: Variant[];\r\n\r\n  ngOnInit() {\r\n  }\r\n  add(): void {\r\n    const variant = new Variant();\r\n    variant.text = '';\r\n    this.variants.push(variant);\r\n  }\r\n  delete(id: number): void  {\r\n    this.variants.splice(id, 1);\r\n  }\r\n}\r\n","module.exports = \".test-editor-container {\\r\\n  width: 60%;\\r\\n  margin: 5px auto;\\r\\n}\\r\\n\\r\\n.add-button,\\r\\n.send-button {\\r\\n  margin-top: 10px;\\r\\n}\\r\\n\\r\\n.single-question-container {\\r\\n  padding-bottom: 20px;\\r\\n  margin: 0 auto 20px auto;\\r\\n  background-color: var(--background-secondary-color);\\r\\n}\\r\\n\\r\\n.delete-button {\\r\\n  padding: 20px 40px 20px 40px;\\r\\n}\\r\\n\\r\\n.name-input {\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.test-container {\\r\\n  margin: 0 auto 40px auto;\\r\\n  background-color: var(--background-secondary-color);\\r\\n  padding: 20px;\\r\\n}\\r\\n\\r\\n.wiki_right {\\r\\n  position: fixed;\\r\\n  top: 220px;\\r\\n  right: 0;\\r\\n  width: 125px;\\r\\n  height: 389px;\\r\\n}\\r\\n\\r\\n.synonyms_right {\\r\\n  position: fixed;\\r\\n  top: 270px;\\r\\n  right: 0;\\r\\n  width: 125px;\\r\\n  height: 389px;\\r\\n}\\r\\n\\r\\n.translate_right {\\r\\n  position: fixed;\\r\\n  top: 320px;\\r\\n  right: 0;\\r\\n  width: 125px;\\r\\n  height: 389px;\\r\\n}\\r\\n\\r\\n.textarea_right {\\r\\n  position: fixed;\\r\\n  top: 380px;\\r\\n  right: 0;\\r\\n  width: 275px;\\r\\n  height: 389px;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdGVzdHMvdGVzdC1lZGl0b3IvdGVzdC1lZGl0b3IuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFVBQVU7RUFDVixnQkFBZ0I7QUFDbEI7O0FBRUE7O0VBRUUsZ0JBQWdCO0FBQ2xCOztBQUVBO0VBQ0Usb0JBQW9CO0VBQ3BCLHdCQUF3QjtFQUN4QixtREFBbUQ7QUFDckQ7O0FBRUE7RUFDRSw0QkFBNEI7QUFDOUI7O0FBRUE7RUFDRSxXQUFXO0FBQ2I7O0FBRUE7RUFDRSx3QkFBd0I7RUFDeEIsbURBQW1EO0VBQ25ELGFBQWE7QUFDZjs7QUFFQTtFQUNFLGVBQWU7RUFDZixVQUFVO0VBQ1YsUUFBUTtFQUNSLFlBQVk7RUFDWixhQUFhO0FBQ2Y7O0FBRUE7RUFDRSxlQUFlO0VBQ2YsVUFBVTtFQUNWLFFBQVE7RUFDUixZQUFZO0VBQ1osYUFBYTtBQUNmOztBQUVBO0VBQ0UsZUFBZTtFQUNmLFVBQVU7RUFDVixRQUFRO0VBQ1IsWUFBWTtFQUNaLGFBQWE7QUFDZjs7QUFFQTtFQUNFLGVBQWU7RUFDZixVQUFVO0VBQ1YsUUFBUTtFQUNSLFlBQVk7RUFDWixhQUFhO0FBQ2YiLCJmaWxlIjoic3JjL2FwcC90ZXN0cy90ZXN0LWVkaXRvci90ZXN0LWVkaXRvci5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnRlc3QtZWRpdG9yLWNvbnRhaW5lciB7XHJcbiAgd2lkdGg6IDYwJTtcclxuICBtYXJnaW46IDVweCBhdXRvO1xyXG59XHJcblxyXG4uYWRkLWJ1dHRvbixcclxuLnNlbmQtYnV0dG9uIHtcclxuICBtYXJnaW4tdG9wOiAxMHB4O1xyXG59XHJcblxyXG4uc2luZ2xlLXF1ZXN0aW9uLWNvbnRhaW5lciB7XHJcbiAgcGFkZGluZy1ib3R0b206IDIwcHg7XHJcbiAgbWFyZ2luOiAwIGF1dG8gMjBweCBhdXRvO1xyXG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWJhY2tncm91bmQtc2Vjb25kYXJ5LWNvbG9yKTtcclxufVxyXG5cclxuLmRlbGV0ZS1idXR0b24ge1xyXG4gIHBhZGRpbmc6IDIwcHggNDBweCAyMHB4IDQwcHg7XHJcbn1cclxuXHJcbi5uYW1lLWlucHV0IHtcclxuICB3aWR0aDogMTAwJTtcclxufVxyXG5cclxuLnRlc3QtY29udGFpbmVyIHtcclxuICBtYXJnaW46IDAgYXV0byA0MHB4IGF1dG87XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tYmFja2dyb3VuZC1zZWNvbmRhcnktY29sb3IpO1xyXG4gIHBhZGRpbmc6IDIwcHg7XHJcbn1cclxuXHJcbi53aWtpX3JpZ2h0IHtcclxuICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgdG9wOiAyMjBweDtcclxuICByaWdodDogMDtcclxuICB3aWR0aDogMTI1cHg7XHJcbiAgaGVpZ2h0OiAzODlweDtcclxufVxyXG5cclxuLnN5bm9ueW1zX3JpZ2h0IHtcclxuICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgdG9wOiAyNzBweDtcclxuICByaWdodDogMDtcclxuICB3aWR0aDogMTI1cHg7XHJcbiAgaGVpZ2h0OiAzODlweDtcclxufVxyXG5cclxuLnRyYW5zbGF0ZV9yaWdodCB7XHJcbiAgcG9zaXRpb246IGZpeGVkO1xyXG4gIHRvcDogMzIwcHg7XHJcbiAgcmlnaHQ6IDA7XHJcbiAgd2lkdGg6IDEyNXB4O1xyXG4gIGhlaWdodDogMzg5cHg7XHJcbn1cclxuXHJcbi50ZXh0YXJlYV9yaWdodCB7XHJcbiAgcG9zaXRpb246IGZpeGVkO1xyXG4gIHRvcDogMzgwcHg7XHJcbiAgcmlnaHQ6IDA7XHJcbiAgd2lkdGg6IDI3NXB4O1xyXG4gIGhlaWdodDogMzg5cHg7XHJcbn1cclxuIl19 */\"","module.exports = \"<div class=\\\"test-editor-container material-form\\\" (mouseup)=\\\"getSelectedText()\\\">\\r\\n  <div class=\\\"row test-container\\\">\\r\\n    <div class=\\\"col-md-8\\\">\\r\\n      <input matInput class=\\\"name-input\\\" placeholder=\\\"Nazwa\\\" [value]=\\\"test.name\\\"\\r\\n             (input)=\\\"test.name = $event.target.value\\\">\\r\\n      <mat-error *ngIf=\\\"test.name.length === 0\\\">\\r\\n        Nazwa jest wymagana.\\r\\n      </mat-error>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-4\\\">\\r\\n      <mat-select placeholder=\\\"Język\\\" [(value)]=\\\"test.language\\\">\\r\\n        <mat-option [value]=\\\"'pl'\\\">Polski</mat-option>\\r\\n        <mat-option [value]=\\\"'en'\\\">Angielski</mat-option>\\r\\n      </mat-select>\\r\\n      <mat-error *ngIf=\\\"test.language.length === 0\\\">\\r\\n        Język jest wymagany.\\r\\n      </mat-error>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div *ngIf=\\\"isRedactor()\\\">\\r\\n    <div *ngFor=\\\"let question of questions.questions; let i = index;\\\">\\r\\n      <div class=\\\"single-question-container\\\">\\r\\n        <app-single-question [question]=\\\"question\\\"></app-single-question>\\r\\n        <div>\\r\\n          <div class=\\\"danger-button full-width-button delete-button row\\\">\\r\\n            <div class=\\\"col-md-8\\\"></div>\\r\\n            <button class=\\\"col-md-4\\\" mat-button (click)=\\\"delete(i)\\\">Skasuj pytnie</button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"full-width-button col-md-6 add-button\\\">\\r\\n      <button *ngIf=\\\"isRedactor()\\\" mat-button (click)=\\\"add()\\\">Dodaj pytnie</button>\\r\\n    </div>\\r\\n    <div class=\\\"full-width-button col-md-6 send-button\\\">\\r\\n      <button mat-button (click)=\\\"send()\\\" [disabled]=\\\"!isTestValid() || !areQuestionsValid()\\\">Zapisz</button>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"wiki_right\\\">\\r\\n    <button mat-button (click)=\\\"onWikipediaButtonClick()\\\" [disabled]=\\\"disableUtilsButton()\\\">Wikipedia</button>\\r\\n  </div>\\r\\n  <div class=\\\"synonyms_right\\\">\\r\\n    <button mat-button (click)=\\\"onSynonymsButtonClick()\\\" [disabled]=\\\"disableUtilsButton()\\\">Synonimy</button>\\r\\n  </div>\\r\\n  <div class=\\\"translate_right\\\">\\r\\n    <button mat-button (click)=\\\"onTranslateButtonClick()\\\" [disabled]=\\\"disableUtilsButton()\\\">Tłumacz</button>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"textarea_right\\\">\\r\\n    <textarea rows=\\\"6\\\" cols=\\\"30\\\" [(ngModel)]=\\\"textValue\\\">\\r\\n    </textarea>\\r\\n  </div>\\r\\n\\r\\n  <pre>\\r\\n</pre>\\r\\n</div>\\r\\n\"","import {Component, OnInit} from '@angular/core';\r\nimport {ActivatedRoute, Router, UrlSegment} from '@angular/router';\r\nimport {Question, Questions} from '../../models/question';\r\nimport {OPEN_QUESTION, VARIANT_QUESTION} from '../../shared/utils/global-variables';\r\nimport {QuestionService} from '../services/question.service';\r\nimport {MAIN_PAGE_URL, MODERATOR_PAGE_URL, REDACTOR_PAGE_URL, TRANSLATE_TEST_PAGE_URL} from '../../shared/utils/frontend-urls';\r\nimport {Observable} from 'rxjs';\r\nimport {Test} from '../../models/test';\r\nimport {TestService} from '../services/test.service';\r\nimport {SessionStorageService} from '../../shared/services/session-storage.service';\r\n\r\n@Component({\r\n  selector: 'app-test-editor',\r\n  templateUrl: './test-editor.component.html',\r\n  styleUrls: ['./test-editor.component.css']\r\n})\r\nexport class TestEditorComponent implements OnInit {\r\n\r\n  constructor(private route: ActivatedRoute,\r\n              private router: Router,\r\n              private questionService: QuestionService,\r\n              private testService: TestService,\r\n              private sessionStorageService: SessionStorageService) {\r\n  }\r\n\r\n  questions: Questions;\r\n  test: Test;\r\n  url: UrlSegment[];\r\n  selectedText: String = '';\r\n  textValue: String = '';\r\n\r\n  ngOnInit(): void {\r\n    this.questions = this.route.snapshot.data['questions'];\r\n    this.test = this.route.snapshot.data['test'];\r\n    if (this.questions === null || this.questions === undefined) {\r\n      this.questions = new Questions();\r\n      this.questions.questions = [];\r\n    }\r\n    if (this.test === null || this.test === undefined) {\r\n      this.test = new Test();\r\n      this.test.id = 0;\r\n      this.test.language = '';\r\n      this.test.name = '';\r\n    }\r\n    this.route.url.subscribe(url => {\r\n      this.url = url;\r\n    });\r\n\r\n  }\r\n\r\n  checkUrl(path: string): boolean {\r\n    for (let i = 0; i < this.url.length; i++) {\r\n      const item = this.url[i];\r\n      if (item.path === path) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  add(): void {\r\n    const question = new Question();\r\n    question.min = 1;\r\n    question.max = 5;\r\n    question.variants = [];\r\n    question.question = '';\r\n    question.type = OPEN_QUESTION;\r\n    this.questions.questions.push(question);\r\n  }\r\n\r\n  delete(id: number): void {\r\n    this.questions.questions.splice(id, 1);\r\n  }\r\n\r\n  sendTest(): Observable<Test> {\r\n    console.log(this.test.id);\r\n    if (this.test.id === 0 || this.checkUrl(TRANSLATE_TEST_PAGE_URL)) {\r\n      console.log('create');\r\n      return this.testService.create(this.test);\r\n    } else {\r\n      console.log('update');\r\n      return this.testService.update(this.test.id, this.test);\r\n    }\r\n  }\r\n\r\n  send(): void {\r\n    this.sendTest().subscribe(testResult => {\r\n      if (this.isRedactor()) {\r\n        this.questionService.save(\r\n          testResult.id,\r\n          this.questions\r\n        ).subscribe(\r\n          questionResult => {\r\n            this.navigate();\r\n          }\r\n        );\r\n      } else {\r\n        this.navigate();\r\n      }\r\n    });\r\n  }\r\n\r\n  navigate(): void {\r\n    if (this.sessionStorageService.isRedactor()) {\r\n      this.router.navigate([REDACTOR_PAGE_URL]);\r\n    } else if (this.sessionStorageService.isModerator()) {\r\n      this.router.navigate([MODERATOR_PAGE_URL]);\r\n    } else {\r\n      this.router.navigate([MAIN_PAGE_URL]);\r\n    }\r\n  }\r\n\r\n  isTestValid(): boolean {\r\n    if (this.test.name.length === 0) {\r\n      return false;\r\n    }\r\n    if (this.test.language.length === 0) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  areQuestionsValid(): boolean {\r\n    if (!this.isRedactor()) {\r\n      return true;\r\n    }\r\n    for (let i = 0; i < this.questions.questions.length; i++) {\r\n      const element = this.questions.questions[i];\r\n      if (element.question.length === 0) {\r\n        return false;\r\n      }\r\n      if (element.type === VARIANT_QUESTION && element.variants.length < 2) {\r\n        return false;\r\n      }\r\n      for (let j = 0; j < element.variants.length; j++) {\r\n        const variantElement = element.variants[j];\r\n        if (variantElement.text.length === 0) {\r\n          return false;\r\n        }\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  isRedactor(): boolean {\r\n    return this.sessionStorageService.isRedactor();\r\n  }\r\n\r\n  getSelectedText(): void {\r\n    this.selectedText = window.getSelection().toString();\r\n  }\r\n\r\n  disableUtilsButton(): Boolean {\r\n    return this.selectedText === '';\r\n  }\r\n\r\n  onWikipediaButtonClick(): void {\r\n    this.clearText();\r\n    this.testService.getWikipediaDefinition(this.selectedText, this.test.language).subscribe(result =>\r\n      this.textValue = result.valueOf()\r\n    );\r\n  }\r\n\r\n  onTranslateButtonClick(): void {\r\n    this.clearText();\r\n    const translateToPolish: Boolean = this.test.language === 'en';\r\n    this.testService.getTranslation(this.selectedText, translateToPolish).subscribe(result =>\r\n      this.textValue = result.valueOf()\r\n    );\r\n  }\r\n\r\n  onSynonymsButtonClick(): void {\r\n    this.clearText();\r\n    this.testService.getSynonyms(this.selectedText, this.test.language).subscribe(result =>\r\n      result.forEach(synonym => {\r\n        this.textValue = this.textValue.concat(`${synonym.valueOf()}, `);\r\n      })\r\n    );\r\n  }\r\n\r\n  clearText(): void {\r\n    this.textValue = '';\r\n  }\r\n}\r\n","import {Route, RouterModule} from '@angular/router';\r\n\r\nimport {NgModule} from '@angular/core';\r\nimport {\r\n  ADD_QUESTIONS,\r\n  CHECK_TEST,\r\n  MY_SOLUTIONS,\r\n  RESOLVE_TEST_PAGE, SOLUTIONS_PAGE_URL,\r\n  TEST_PAGE_URL,\r\n  TRANSLATE_TEST_PAGE_URL\r\n} from '../shared/utils/frontend-urls';\r\nimport {RedactorGuard} from '../guards/redactor-quard';\r\nimport {TestEditorComponent} from './test-editor/test-editor.component';\r\nimport {QuestionResolveService} from './services/question-resolve.service';\r\nimport {ResolveTestComponent} from './resolve-test/resolve-test.component';\r\nimport {UserGuard} from '../guards/user-guard';\r\nimport {SolutionsForRedactorResolveService} from './services/solutions-for-redactor-resolve.service';\r\nimport {RedactorTestsComponent} from './redactor-tests/redactor-tests.component';\r\nimport {CheckSolvedTestComponent} from './check-solved-test/check-solved-test.component';\r\nimport {SolutionResolveService} from './services/solution-resolve.service';\r\nimport {UserSolutionComponent} from './user-solution/user-solution.component';\r\nimport {RedactorOrModeratorGuard} from '../guards/redactor-or-moderator-guard';\r\nimport {TestResolveService} from './services/test-resolve.service';\r\n\r\nconst MAIN_PAGE_ROUTES: Route[] = [\r\n  {\r\n    path: `${TEST_PAGE_URL}/:test/${ADD_QUESTIONS}`,\r\n    component: <any>TestEditorComponent,\r\n    resolve: {\r\n      questions: QuestionResolveService,\r\n      test: TestResolveService\r\n    },\r\n    canActivate: [\r\n      RedactorOrModeratorGuard\r\n    ],\r\n    runGuardsAndResolvers: 'always'\r\n  },\r\n  {\r\n    path: `${TRANSLATE_TEST_PAGE_URL}/:test/${ADD_QUESTIONS}`,\r\n    component: <any>TestEditorComponent,\r\n    resolve: {\r\n      questions: QuestionResolveService,\r\n      test: TestResolveService\r\n    },\r\n    canActivate: [\r\n      RedactorOrModeratorGuard\r\n    ],\r\n    runGuardsAndResolvers: 'always'\r\n  },\r\n  {\r\n    path: `${TEST_PAGE_URL}/${ADD_QUESTIONS}`,\r\n    component: <any>TestEditorComponent,\r\n    canActivate: [\r\n      RedactorOrModeratorGuard\r\n    ],\r\n    runGuardsAndResolvers: 'always'\r\n  },\r\n  {\r\n    path: `${RESOLVE_TEST_PAGE}/:test`,\r\n    component: <any>ResolveTestComponent,\r\n    resolve: {\r\n      test: QuestionResolveService\r\n    },\r\n    canActivate: [\r\n      UserGuard\r\n    ],\r\n    runGuardsAndResolvers: 'always'\r\n  },\r\n  {\r\n    path: `${SOLUTIONS_PAGE_URL}`,\r\n    component: <any>RedactorTestsComponent,\r\n    resolve: {\r\n      solutions: SolutionsForRedactorResolveService\r\n    },\r\n    canActivate: [\r\n      RedactorGuard\r\n    ],\r\n    runGuardsAndResolvers: 'always'\r\n  },\r\n  {\r\n    path: `${CHECK_TEST}/:test`,\r\n    component: <any>CheckSolvedTestComponent,\r\n    resolve: {\r\n      solution: SolutionResolveService\r\n    },\r\n    canActivate: [\r\n      RedactorGuard\r\n    ],\r\n    runGuardsAndResolvers: 'always'\r\n  },\r\n  {\r\n    path: `${MY_SOLUTIONS}/:test`,\r\n    component: <any>UserSolutionComponent,\r\n    resolve: {\r\n      solution: SolutionResolveService\r\n    },\r\n    canActivate: [\r\n      UserGuard\r\n    ],\r\n    runGuardsAndResolvers: 'always'\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forChild(MAIN_PAGE_ROUTES),\r\n  ],\r\n  exports: [\r\n    RouterModule\r\n  ]\r\n})\r\n\r\nexport class TestsRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { TestEditorComponent } from './test-editor/test-editor.component';\r\nimport { SingleQuestionComponent } from './test-editor/single-question/single-question.component';\r\nimport { ScalaAnswerComponent } from './test-editor/single-question/scala-answer/scala-answer.component';\r\nimport { VariantAnswerComponent } from './test-editor/single-question/variant-answer/variant-answer.component';\r\nimport {TestsRoutingModule} from './tests-routing.module';\r\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\nimport {MatSelectModule, MatButtonModule, MatRadioModule} from '@angular/material';\r\nimport { ResolveTestComponent } from './resolve-test/resolve-test.component';\r\nimport { RedactorTestsComponent } from './redactor-tests/redactor-tests.component';\r\nimport { SolvedTestComponent } from './solved-test/solved-test.component';\r\nimport { CheckSolvedTestComponent } from './check-solved-test/check-solved-test.component';\r\nimport { UserTestsComponent } from './user-tests/user-tests.component';\r\nimport { UserSolutionComponent } from './user-solution/user-solution.component';\r\nimport { AllTestsComponent } from './all-tests/all-tests.component';\r\nimport {TestsResolveService} from './services/tests-resolve.service';\r\nimport {FormsModule} from '@angular/forms';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    TestsRoutingModule,\r\n    MatSelectModule,\r\n    MatButtonModule,\r\n    MatRadioModule,\r\n    BrowserAnimationsModule,\r\n    FormsModule,\r\n  ],\r\n  declarations: [TestEditorComponent,\r\n    SingleQuestionComponent,\r\n    ScalaAnswerComponent,\r\n    VariantAnswerComponent,\r\n    ResolveTestComponent,\r\n    RedactorTestsComponent,\r\n    SolvedTestComponent,\r\n    CheckSolvedTestComponent,\r\n    UserTestsComponent,\r\n    UserSolutionComponent,\r\n    AllTestsComponent],\r\n  exports: [\r\n    UserTestsComponent,\r\n    UserSolutionComponent,\r\n    AllTestsComponent],\r\n})\r\nexport class TestsModule { }\r\n","module.exports = \".score-container {\\r\\n  margin-top: 10px;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdGVzdHMvdXNlci1zb2x1dGlvbi91c2VyLXNvbHV0aW9uLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxnQkFBZ0I7QUFDbEIiLCJmaWxlIjoic3JjL2FwcC90ZXN0cy91c2VyLXNvbHV0aW9uL3VzZXItc29sdXRpb24uY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5zY29yZS1jb250YWluZXIge1xyXG4gIG1hcmdpbi10b3A6IDEwcHg7XHJcbn1cclxuIl19 */\"","module.exports = \"<div class=\\\"check-solved-test-container\\\">\\r\\n  <div>\\r\\n    <app-solved-test [solution]=\\\"solution\\\"></app-solved-test>\\r\\n  </div>\\r\\n  <div class=\\\"score row material-form\\\">\\r\\n    <div class=\\\"col-md-4\\\">\\r\\n    </div>\\r\\n    <div class=\\\"col-md-4\\\">\\r\\n    </div>\\r\\n    <div *ngIf=\\\"solution.checked\\\" class=\\\"col-md-4 full-width-button score-container\\\">\\r\\n      <b>Wynik: {{solution.score}}</b>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {SolutionsService} from '../services/solutions.service';\r\nimport {Score, TestSolutionWithId} from '../../models/question';\r\nimport {SOLUTIONS_PAGE_URL} from '../../shared/utils/frontend-urls';\r\n\r\n@Component({\r\n  selector: 'app-user-solution',\r\n  templateUrl: './user-solution.component.html',\r\n  styleUrls: ['./user-solution.component.css']\r\n})\r\nexport class UserSolutionComponent implements OnInit {\r\n\r\n  constructor(private route: ActivatedRoute) { }\r\n\r\n  solution: TestSolutionWithId;\r\n  ngOnInit() {\r\n    this.solution = this.route.snapshot.data['solution'];\r\n  }\r\n}\r\n","module.exports = \"table {\\r\\n  width: 100%;\\r\\n  border: 1px solid var(--secondary-text-color);\\r\\n}\\r\\ntd {\\r\\n  text-align: center;\\r\\n  padding: 5px 20px;\\r\\n  border: 1px solid var(--secondary-text-color);\\r\\n}\\r\\nthead td {\\r\\n  background-color: var(--background-secondary-color);\\r\\n  font-weight: bold;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdGVzdHMvdXNlci10ZXN0cy91c2VyLXRlc3RzLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFXO0VBQ1gsNkNBQTZDO0FBQy9DO0FBQ0E7RUFDRSxrQkFBa0I7RUFDbEIsaUJBQWlCO0VBQ2pCLDZDQUE2QztBQUMvQztBQUNBO0VBQ0UsbURBQW1EO0VBQ25ELGlCQUFpQjtBQUNuQiIsImZpbGUiOiJzcmMvYXBwL3Rlc3RzL3VzZXItdGVzdHMvdXNlci10ZXN0cy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsidGFibGUge1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIGJvcmRlcjogMXB4IHNvbGlkIHZhcigtLXNlY29uZGFyeS10ZXh0LWNvbG9yKTtcclxufVxyXG50ZCB7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIHBhZGRpbmc6IDVweCAyMHB4O1xyXG4gIGJvcmRlcjogMXB4IHNvbGlkIHZhcigtLXNlY29uZGFyeS10ZXh0LWNvbG9yKTtcclxufVxyXG50aGVhZCB0ZCB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tYmFja2dyb3VuZC1zZWNvbmRhcnktY29sb3IpO1xyXG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG59XHJcbiJdfQ== */\"","module.exports = \"<div class=\\\"solved-test-container material-form\\\">\\r\\n  <table>\\r\\n    <thead>\\r\\n    <tr>\\r\\n      <td>Id</td>\\r\\n      <td>Nazwa</td>\\r\\n      <td>Język</td>\\r\\n      <td>Sprawdzony</td>\\r\\n      <td>Wynik</td>\\r\\n      <td>Szczegóły</td>\\r\\n    </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n    <tr *ngFor=\\\"let solution of solutions.solutions\\\">\\r\\n      <td>{{solution.id}}</td>\\r\\n      <td>{{solution.test.name}}</td>\\r\\n      <td>{{solution.test.language}}</td>\\r\\n      <td><span *ngIf=\\\"solution.checked\\\">Tak</span><span *ngIf=\\\"!solution.checked\\\">Nie</span></td>\\r\\n      <td>{{solution.score}}</td>\\r\\n      <td>\\r\\n        <button mat-button [routerLink]=\\\"['..', mySolutions, solution.id]\\\">Szczegóły</button>\\r\\n      </td>\\r\\n    </tr>\\r\\n    </tbody>\\r\\n  </table>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport {Solutions} from '../../models/question';\r\nimport {MY_SOLUTIONS} from '../../shared/utils/frontend-urls';\r\nimport {ActivatedRoute} from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-user-tests',\r\n  templateUrl: './user-tests.component.html',\r\n  styleUrls: ['./user-tests.component.css']\r\n})\r\nexport class UserTestsComponent implements OnInit {\r\n\r\n  constructor(private route: ActivatedRoute) { }\r\n\r\n  solutions: Solutions;\r\n  mySolutions = MY_SOLUTIONS;\r\n  ngOnInit() {\r\n    this.solutions = this.route.snapshot.data['solutions'];\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {PasswordChange} from '../../models/user/password-change';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport {PASSWORD_POSTFIX, USERS_URL} from '../../shared/utils/backend-urls';\r\nimport {HttpClient} from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ChangePasswordService {\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  changePassword(username: string, passwordChange: PasswordChange): Observable<any> {\r\n    return this.httpClient.post(\r\n      `${USERS_URL}/${username}/${PASSWORD_POSTFIX}`,\r\n      passwordChange\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {UserResolveService} from './user-resolve.service';\r\nimport {ActivatedRouteSnapshot, Resolve, RouterStateSnapshot} from '@angular/router';\r\nimport {User} from '../../models/user/user';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport {SessionStorageService} from '../../shared/services/session-storage.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoggedUserResolveService implements Resolve<User> {\r\n\r\n  constructor(private usersResolveService: UserResolveService,\r\n              private sessionStorageService: SessionStorageService) { }\r\n\r\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot):\r\n    Observable<User> | Promise<User> | User {\r\n    const username = this.sessionStorageService.getUser().username;\r\n    return this.usersResolveService.resolve(route, username);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport {USERS_URL} from '../../shared/utils/backend-urls';\r\nimport {UserUpdateData} from '../../models/user/user-update-data';\r\nimport {LoggedUser} from '../../models/user/logged-user';\r\nimport {HttpClient, HttpResponse} from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserAccountService {\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  deleteAccount(username: string): Observable<any> {\r\n    return this.httpClient.delete(\r\n      `${USERS_URL}/${username}`\r\n    );\r\n  }\r\n  updateAccount(username: string, updateData: UserUpdateData): Observable<HttpResponse<LoggedUser>> {\r\n    return this.httpClient.put<LoggedUser>(\r\n      `${USERS_URL}/${username}`,\r\n      updateData,\r\n      {observe: 'response'}\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {User} from '../../models/user/user';\r\nimport {ActivatedRouteSnapshot, Router} from '@angular/router';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport {UserService} from './user.service';\r\nimport {NOT_FOUND_PAGE_URL} from '../../shared/utils/frontend-urls';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserResolveService {\r\n  constructor(private userService: UserService,\r\n              private router: Router) { }\r\n\r\n  resolve(route: ActivatedRouteSnapshot, username: string):\r\n    Observable<User> | Promise<User> | User {\r\n    if (username === undefined || username === null) {\r\n      this.router.navigate([NOT_FOUND_PAGE_URL]);\r\n      return null;\r\n    }\r\n    return this.userService.getUser(username)\r\n      .toPromise()\r\n      .then(result => {\r\n        return result;\r\n      });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport {User} from '../../models/user/user';\r\nimport {USERS_URL} from '../../shared/utils/backend-urls';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  getUser(username: string): Observable<User> {\r\n    return this.httpClient.get<User>(\r\n      USERS_URL + `/${username}`\r\n    );\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXItZWRpdC91c2VyLWVkaXQtcGFnZS9kZWxldGUtYWNjb3VudC9kZWxldGUtYWNjb3VudC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<form class=\\\"material-form\\\">\\r\\n  <div class=\\\"full-width-button danger-button\\\">\\r\\n    <button mat-button (click)=\\\"delete()\\\" type=\\\"button\\\">Skasuj konto</button>\\r\\n  </div>\\r\\n</form>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport {UserAccountService} from '../../services/user-account.service';\r\nimport {SessionStorageService} from '../../../shared/services/session-storage.service';\r\nimport {Router} from '@angular/router';\r\nimport {MatDialog} from '@angular/material';\r\nimport {MAIN_PAGE_URL} from '../../../shared/utils/frontend-urls';\r\nimport {\r\n  DeleteUserAccountDialogComponent\r\n} from '../../../dialogs/yes-no-dialog/delete-user-account-dialog/delete-user-account-dialog.component';\r\n\r\n@Component({\r\n  selector: 'app-delete-account',\r\n  templateUrl: './delete-account.component.html',\r\n  styleUrls: ['./delete-account.component.css']\r\n})\r\nexport class DeleteAccountComponent implements OnInit {\r\n\r\n  constructor(private userAccountService: UserAccountService,\r\n              private sessionStorageService: SessionStorageService,\r\n              private router: Router,\r\n              private dialog: MatDialog) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  delete(): void {\r\n    const dialogRef = this.dialog.open(DeleteUserAccountDialogComponent, {\r\n      height: '250px',\r\n      width: '350px',\r\n    });\r\n    dialogRef.afterClosed().subscribe( res => {\r\n      if (res === true) {\r\n        this.userAccountService.deleteAccount(\r\n          this.sessionStorageService.getUser().username\r\n        ).subscribe(result => {\r\n          this.sessionStorageService.logout();\r\n          this.router.navigate([MAIN_PAGE_URL]);\r\n        });\r\n      }\r\n    });\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXItZWRpdC91c2VyLWVkaXQtcGFnZS91c2VyLWRldGFpbHMtZWRpdC91c2VyLWRldGFpbHMtZWRpdC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"user-details-edit-wrapper full-width-form\\\">\\r\\n  <form [formGroup]=\\\"userDetailsForm\\\" class=\\\"material-form\\\">\\r\\n    <div>\\r\\n      <mat-form-field>\\r\\n        <input matInput formControlName=\\\"username\\\" placeholder=\\\"Nazwa użytkownika\\\">\\r\\n        <mat-error *ngIf=\\\"userDetailsForm.get('username').hasError('required')\\\">\\r\\n          Nazwa użytkownika jest wymagana.\\r\\n        </mat-error>\\r\\n        <mat-error *ngIf=\\\"userDetailsForm.get('username').hasError('minlength')\\\">\\r\\n          Nazwa użytkownika musi zawierać co najmniej{{minUsernameLength}} znaków.\\r\\n        </mat-error>\\r\\n        <mat-error *ngIf=\\\"userDetailsForm.get('username').hasError('maxlength')\\\">\\r\\n          Nazwa użytkownika może zawierać maksymalnie {{maxUsernameLength}} znaków.\\r\\n        </mat-error>\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n    <div>\\r\\n      <mat-form-field>\\r\\n        <input matInput formControlName=\\\"nameSurname\\\" placeholder=\\\"Imię i nazwisko\\\">\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n    <div>\\r\\n      <mat-form-field>\\r\\n        <mat-select formControlName=\\\"language\\\" placeholder=\\\"Język\\\">\\r\\n          <mat-option [value]=\\\"'pl'\\\">Polski</mat-option>\\r\\n          <mat-option [value]=\\\"'en'\\\">Angielski</mat-option>\\r\\n        </mat-select>\\r\\n        <mat-error *ngIf=\\\"userDetailsForm.get('language').hasError('required')\\\">\\r\\n          Język jest wymagany.\\r\\n        </mat-error>\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n    <div>\\r\\n      <mat-form-field>\\r\\n        <input matInput email formControlName=\\\"email\\\" placeholder=\\\"Email\\\">\\r\\n        <mat-error *ngIf=\\\"userDetailsForm.get('email').hasError('required')\\\">\\r\\n          Email jest wymagany.\\r\\n        </mat-error>\\r\\n        <mat-error *ngIf=\\\"userDetailsForm.get('email').hasError('email')\\\">\\r\\n          Podaj prawidłowy adres email.\\r\\n        </mat-error>\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n    <div class=\\\"full-width-button\\\">\\r\\n      <button mat-button\\r\\n              [disabled]=\\\"userDetailsForm.invalid || userDetailsForm.errors\\\"\\r\\n              type=\\\"submit\\\" (click)=\\\"update()\\\">Zaktualizuj dane konta</button>\\r\\n    </div>\\r\\n  </form>\\r\\n</div>\\r\\n\"","import {Component, OnInit} from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {UserAccountService} from '../../services/user-account.service';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {ErrorHandlingService} from '../../../shared/services/error-handling.service';\r\nimport {USER_EDIT_PAGE_URL} from '../../../shared/utils/frontend-urls';\r\nimport {HttpResponse} from '@angular/common/http';\r\nimport {SessionStorageService} from '../../../shared/services/session-storage.service';\r\nimport {LoggedUser} from '../../../models/user/logged-user';\r\nimport {MAX_USERNAME_LENGTH, MIN_USERNAME_LENGTH} from '../../../shared/utils/global-variables';\r\nimport {UserUpdateData} from '../../../models/user/user-update-data';\r\n\r\n@Component({\r\n  selector: 'app-user-details-edit',\r\n  templateUrl: './user-details-edit.component.html',\r\n  styleUrls: ['./user-details-edit.component.css']\r\n})\r\nexport class UserDetailsEditComponent implements OnInit {\r\n\r\n  user: UserUpdateData;\r\n  userDetailsForm: FormGroup;\r\n\r\n  minUsernameLength = MIN_USERNAME_LENGTH;\r\n  maxUsernameLength = MAX_USERNAME_LENGTH;\r\n\r\n  constructor(private formBuilder: FormBuilder,\r\n              private userAccountService: UserAccountService,\r\n              private router: Router,\r\n              private route: ActivatedRoute,\r\n              private errorHandlingService: ErrorHandlingService,\r\n              private sessionStorageService: SessionStorageService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.user = this.route.snapshot.data['user'];\r\n    this.buildForm();\r\n  }\r\n  buildForm(): void {\r\n    this.userDetailsForm = this.formBuilder.group({\r\n      username: [this.user.username, [\r\n        Validators.required,\r\n        Validators.minLength(this.minUsernameLength),\r\n        Validators.maxLength(this.maxUsernameLength)\r\n      ]],\r\n      email: [this.user.email, Validators.required],\r\n      nameSurname: [this.user.nameSurname],\r\n      language: [this.user.language, Validators.required]\r\n    });\r\n  }\r\n  update(): void {\r\n    this.userAccountService.updateAccount(\r\n      this.user.username,\r\n      this.userDetailsForm.value\r\n    ).subscribe((result: HttpResponse <LoggedUser>) => {\r\n      this.sessionStorageService.storeSession(\r\n        result.body,\r\n        result.headers.get('Authorization')\r\n      );\r\n      this.router.navigated = false;\r\n      this.router.navigate([USER_EDIT_PAGE_URL]);\r\n    });\r\n  }\r\n}\r\n","module.exports = \".user-page-wrapper {\\r\\n  width: 80%;\\r\\n  margin: 0px auto;\\r\\n  padding-bottom: 20px;\\r\\n}\\r\\n.user-page-separator {\\r\\n  margin: 50px 0px;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdXNlci1lZGl0L3VzZXItZWRpdC1wYWdlL3VzZXItZWRpdC1wYWdlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxVQUFVO0VBQ1YsZ0JBQWdCO0VBQ2hCLG9CQUFvQjtBQUN0QjtBQUNBO0VBQ0UsZ0JBQWdCO0FBQ2xCIiwiZmlsZSI6InNyYy9hcHAvdXNlci1lZGl0L3VzZXItZWRpdC1wYWdlL3VzZXItZWRpdC1wYWdlLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIudXNlci1wYWdlLXdyYXBwZXIge1xyXG4gIHdpZHRoOiA4MCU7XHJcbiAgbWFyZ2luOiAwcHggYXV0bztcclxuICBwYWRkaW5nLWJvdHRvbTogMjBweDtcclxufVxyXG4udXNlci1wYWdlLXNlcGFyYXRvciB7XHJcbiAgbWFyZ2luOiA1MHB4IDBweDtcclxufVxyXG4iXX0= */\"","module.exports = \"<div *ngIf=\\\"user\\\" class=\\\"user-page-wrapper\\\">\\r\\n  <div>\\r\\n    <app-user-details-edit></app-user-details-edit>\\r\\n  </div>\\r\\n  <hr class=\\\"user-page-separator\\\">\\r\\n  <div>\\r\\n    <app-user-password-change></app-user-password-change>\\r\\n  </div>\\r\\n  <hr class=\\\"user-page-separator\\\">\\r\\n  <div>\\r\\n    <app-delete-account></app-delete-account>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport {User} from '../../models/user/user';\r\nimport {ActivatedRoute} from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-user-edit-page',\r\n  templateUrl: './user-edit-page.component.html',\r\n  styleUrls: ['./user-edit-page.component.css']\r\n})\r\nexport class UserEditPageComponent implements OnInit {\r\n\r\n  user: User;\r\n\r\n  constructor(private route: ActivatedRoute) { }\r\n\r\n  ngOnInit(): void {\r\n    this.user = this.route.snapshot.data['user'];\r\n  }\r\n\r\n}\r\n","import {SharedConfirmPassword} from '../../../shared/utils/shared-confirm-password';\r\nimport {AbstractControl} from '@angular/forms';\r\n\r\nexport class UserEditConfirmPassword extends SharedConfirmPassword {\r\n  matchPassword(abstractControl: AbstractControl) {\r\n    return super.matchPasswordHelper(abstractControl, 'newPassword',\r\n      'confirmNewPassword');\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXItZWRpdC91c2VyLWVkaXQtcGFnZS91c2VyLXBhc3N3b3JkLWNoYW5nZS91c2VyLXBhc3N3b3JkLWNoYW5nZS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"user-password-change-wrapper\\\">\\r\\n  <form [formGroup]=\\\"passwordChangeForm\\\" class=\\\"material-form full-width-form\\\">\\r\\n    <div>\\r\\n    <mat-form-field>\\r\\n      <input matInput formControlName=\\\"oldPassword\\\" type=\\\"password\\\" placeholder=\\\"Stare hasło\\\">\\r\\n\\r\\n      <mat-error *ngIf=\\\"passwordChangeForm.get('oldPassword').hasError('required')\\\">\\r\\n        Stare hasło jest wymagane\\r\\n      </mat-error>\\r\\n      <mat-error  *ngIf=\\\"passwordChangeForm.get('oldPassword').hasError('minlength')\\\">\\r\\n        Stare hasło musi zawierać co najmniej {{minPasswordLength}} znaków.\\r\\n      </mat-error>\\r\\n      <mat-error *ngIf=\\\"passwordChangeForm.get('oldPassword').hasError('maxlength')\\\">\\r\\n        Stare hasło może zawierać maksymalnie {{maxPasswordLength}} znaków.\\r\\n      </mat-error>\\r\\n    </mat-form-field>\\r\\n    </div>\\r\\n    <div>\\r\\n      <mat-form-field>\\r\\n        <input matInput formControlName=\\\"newPassword\\\" type=\\\"password\\\" placeholder=\\\"Nowe hasło\\\">\\r\\n\\r\\n        <mat-error *ngIf=\\\"passwordChangeForm.get('newPassword').hasError('required')\\\">\\r\\n          Hasło jest wymagane.\\r\\n        </mat-error>\\r\\n        <mat-error *ngIf=\\\"passwordChangeForm.get('newPassword').hasError('minlength')\\\">\\r\\n          Hasło musi zawierać co najmniej {{minPasswordLength}} znaków.\\r\\n        </mat-error>\\r\\n        <mat-error *ngIf=\\\"passwordChangeForm.get('newPassword').hasError('maxlength')\\\">\\r\\n          Hasło może zawierać maksymalnie {{maxPasswordLength}} znaków.\\r\\n        </mat-error>\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n    <div>\\r\\n      <mat-form-field>\\r\\n        <input matInput formControlName=\\\"confirmNewPassword\\\" type=\\\"password\\\"\\r\\n               placeholder=\\\"Potwierdź nowe hasło\\\" [errorStateMatcher]=\\\"errorMatcher\\\">\\r\\n\\r\\n        <mat-error *ngIf=\\\"passwordChangeForm.get('confirmNewPassword').hasError('required')\\\">\\r\\n          Musisz potwierdzić hasło.\\r\\n        </mat-error>\\r\\n        <mat-error *ngIf=\\\"passwordChangeForm.hasError('matchPassword')\\\">\\r\\n          Hasła są różne\\r\\n        </mat-error>\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n    <div class=\\\"full-width-button\\\">\\r\\n      <button mat-button\\r\\n              [disabled]=\\\"passwordChangeForm.invalid || passwordChangeForm.errors || getProcessingChange()\\\"\\r\\n              type=\\\"submit\\\" (click)=\\\"changePassword()\\\">\\r\\n              Zmień hasło</button>\\r\\n    </div>\\r\\n\\r\\n  </form>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport {ChangePasswordService} from '../../services/change-password.service';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {ConfirmPasswordErrorMatcher} from '../../../shared/utils/confirm-password-error-state-matcher';\r\nimport {UserEditConfirmPassword} from './user-edit-confirm-password';\r\nimport {SessionStorageService} from '../../../shared/services/session-storage.service';\r\nimport {LoadingSpinnerComponent} from '../../../core/loading-spinner/loading-spinner.component';\r\nimport {MAX_PASSWORD_LENGTH, MIN_PASSWORD_LENGTH} from '../../../shared/utils/global-variables';\r\n\r\n@Component({\r\n  selector: 'app-user-password-change',\r\n  templateUrl: './user-password-change.component.html',\r\n  styleUrls: ['./user-password-change.component.css']\r\n})\r\nexport class UserPasswordChangeComponent implements OnInit {\r\n\r\n  passwordChangeForm: FormGroup;\r\n  confirmPassword = new UserEditConfirmPassword();\r\n  errorMatcher = new ConfirmPasswordErrorMatcher();\r\n  minPasswordLength = MIN_PASSWORD_LENGTH;\r\n  maxPasswordLength = MAX_PASSWORD_LENGTH;\r\n\r\n  constructor(private formBuilder: FormBuilder,\r\n              private passwordChangeService: ChangePasswordService,\r\n              private sessionStorageService: SessionStorageService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.buildForm();\r\n  }\r\n  buildForm(): void {\r\n    this.passwordChangeForm = this.formBuilder.group({\r\n      oldPassword: ['', [\r\n        Validators.required,\r\n        Validators.minLength(this.minPasswordLength),\r\n        Validators.maxLength(this.maxPasswordLength)\r\n      ]],\r\n      newPassword: ['', [\r\n        Validators.required,\r\n        Validators.minLength(this.minPasswordLength),\r\n        Validators.maxLength(this.maxPasswordLength)\r\n      ]],\r\n      confirmNewPassword: ['', [Validators.required]],\r\n    }, {\r\n      validator: this.confirmPassword.matchPassword\r\n    } );\r\n  }\r\n  changePassword(): void {\r\n    this.passwordChangeService.changePassword(\r\n      this.sessionStorageService.getUser().username,\r\n      this.passwordChangeForm.value\r\n    ).subscribe();\r\n  }\r\n  getProcessingChange(): boolean {\r\n    return LoadingSpinnerComponent.showLoadingIndicator;\r\n  }\r\n}\r\n","import {Route, RouterModule} from '@angular/router';\r\nimport {NgModule} from '@angular/core';\r\nimport {USER_EDIT_PAGE_URL} from '../shared/utils/frontend-urls';\r\nimport {UserEditPageComponent} from './user-edit-page/user-edit-page.component';\r\nimport {LoggedUserGuard} from '../guards/logged-user-guard';\r\nimport {LoggedUserResolveService} from './services/logged-user-resolve.service';\r\n\r\n\r\nconst USER_EDIT_PAGE_ROUTES: Route[] = [\r\n  {\r\n    path: `${USER_EDIT_PAGE_URL}`,\r\n    component: <any>UserEditPageComponent,\r\n    resolve: {\r\n      user: LoggedUserResolveService\r\n    },\r\n    canActivate: [LoggedUserGuard],\r\n    runGuardsAndResolvers: 'always'\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forChild(USER_EDIT_PAGE_ROUTES),\r\n  ],\r\n  exports: [\r\n    RouterModule\r\n  ]\r\n})\r\nexport class UserEditRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { UserEditPageComponent } from './user-edit-page/user-edit-page.component';\r\nimport { UserDetailsEditComponent } from './user-edit-page/user-details-edit/user-details-edit.component';\r\nimport { UserPasswordChangeComponent } from './user-edit-page/user-password-change/user-password-change.component';\r\nimport { DeleteAccountComponent } from './user-edit-page/delete-account/delete-account.component';\r\nimport {DeleteUserAccountDialogComponent} from '../dialogs/yes-no-dialog/delete-user-account-dialog/delete-user-account-dialog.component';\r\nimport {MatButtonModule, MatDialogModule, MatFormFieldModule, MatInputModule, MatSelectModule} from '@angular/material';\r\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport {UserEditRoutingModule} from './user-edit-routing.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    UserEditRoutingModule,\r\n    MatButtonModule,\r\n    MatSelectModule,\r\n    BrowserAnimationsModule,\r\n    MatDialogModule,\r\n    ReactiveFormsModule,\r\n    MatFormFieldModule,\r\n    FormsModule,\r\n    MatInputModule\r\n  ],\r\n  declarations: [\r\n    UserEditPageComponent,\r\n    UserDetailsEditComponent,\r\n    UserPasswordChangeComponent,\r\n    DeleteAccountComponent\r\n  ],\r\n  entryComponents: [\r\n    DeleteUserAccountDialogComponent\r\n  ]\r\n})\r\nexport class UserEditModule { }\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXIvcG9zaXRpb25zL3Bvc2l0aW9ucy5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"positions-container\\\">\\r\\n  <table>\\r\\n    <thead>\\r\\n      <tr>\\r\\n        <td>ID</td>\\r\\n        <td>Nazwa stanowiska</td>\\r\\n        <td>Język</td>\\r\\n        <td>Nazwa testu</td>\\r\\n        <td>Rozwiąż</td>\\r\\n      </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n      <tr *ngFor=\\\"let position of positions.positions\\\">\\r\\n        <td>{{position.id}}</td>\\r\\n        <td>{{position.name}}</td>\\r\\n        <td>{{position.test.language}}</td>\\r\\n        <td>{{position.test.name}}</td>\\r\\n        <td class=\\\"material-form\\\">\\r\\n          <button mat-button (click)=\\\"resolveTest(position.test.id)\\\">Rozwiąż</button>\\r\\n        </td>\\r\\n      </tr>\\r\\n    </tbody>\\r\\n  </table>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport {Positions} from '../../models/positions';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {RESOLVE_TEST_PAGE} from '../../shared/utils/frontend-urls';\r\n\r\n@Component({\r\n  selector: 'app-positions',\r\n  templateUrl: './positions.component.html',\r\n  styleUrls: ['./positions.component.css']\r\n})\r\nexport class PositionsComponent implements OnInit {\r\n\r\n  constructor(private route: ActivatedRoute,\r\n              private router: Router) { }\r\n\r\n  positions: Positions;\r\n\r\n  ngOnInit(): void {\r\n    this.positions =  this.route.snapshot.data['positions'];\r\n  }\r\n  resolveTest(id: number): void {\r\n    this.router.navigate([RESOLVE_TEST_PAGE, id]);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {Positions} from '../../models/positions';\r\nimport {POSITIONS_URL, TESTS_POSTFIX} from '../../shared/utils/backend-urls';\r\nimport {SessionStorageService} from '../../shared/services/session-storage.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PositionService {\r\n\r\n  constructor(private http: HttpClient,\r\n              private sessionStorageService: SessionStorageService) { }\r\n\r\n  getAll(): Observable<Positions> {\r\n    return this.http.get<Positions>(`${POSITIONS_URL}/${TESTS_POSTFIX}?language=${this.sessionStorageService.getUser().language}`);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {ErrorHandlingService} from '../../shared/services/error-handling.service';\r\nimport {SolutionsService} from '../../tests/services/solutions.service';\r\nimport {ActivatedRouteSnapshot, Router} from '@angular/router';\r\nimport {Observable} from 'rxjs';\r\nimport {Solutions} from '../../models/question';\r\nimport {Positions} from '../../models/positions';\r\nimport {PositionService} from './position.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PositionsResolveService {\r\n\r\n  constructor(private errorHandlingService: ErrorHandlingService,\r\n              private positionService: PositionService,\r\n              private router: Router) { }\r\n\r\n  resolve(route: ActivatedRouteSnapshot) {\r\n    this.errorHandlingService.clear();\r\n    return this.positionService\r\n      .getAll()\r\n      .toPromise()\r\n      .then( result => {\r\n        return result;\r\n      }).catch(() => {\r\n        return null;\r\n      });\r\n  }\r\n}\r\n","module.exports = \".positions-container {\\r\\n  margin-bottom: 50px;\\r\\n}\\r\\nh1 {\\r\\n  margin-bottom: 20px;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdXNlci91c2VyLXBhZ2UvdXNlci1wYWdlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxtQkFBbUI7QUFDckI7QUFDQTtFQUNFLG1CQUFtQjtBQUNyQiIsImZpbGUiOiJzcmMvYXBwL3VzZXIvdXNlci1wYWdlL3VzZXItcGFnZS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnBvc2l0aW9ucy1jb250YWluZXIge1xyXG4gIG1hcmdpbi1ib3R0b206IDUwcHg7XHJcbn1cclxuaDEge1xyXG4gIG1hcmdpbi1ib3R0b206IDIwcHg7XHJcbn1cclxuIl19 */\"","module.exports = \"<div class=\\\"user-page-container\\\">\\r\\n  <div class=\\\"positions-container\\\">\\r\\n    <h1>Dostępne stanowiska i testy</h1>\\r\\n    <app-positions></app-positions>\\r\\n  </div>\\r\\n  <div>\\r\\n    <h1>Moje rozwiązane testy</h1>\\r\\n    <app-user-tests></app-user-tests>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-user-page',\r\n  templateUrl: './user-page.component.html',\r\n  styleUrls: ['./user-page.component.css']\r\n})\r\nexport class UserPageComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import {Route, RouterModule} from '@angular/router';\r\nimport {USER_PAGE_URL} from '../shared/utils/frontend-urls';\r\nimport {NgModule} from '@angular/core';\r\nimport {PositionsResolveService} from './services/positions-resolve.service';\r\nimport {UserGuard} from '../guards/user-guard';\r\nimport {UserPageComponent} from './user-page/user-page.component';\r\nimport {UserSolutionsResolveService} from '../tests/services/user-solutions-resolve.service';\r\n\r\nconst USER_PAGE_ROUTES: Route[] = [\r\n  {\r\n    path: USER_PAGE_URL,\r\n    component: <any>UserPageComponent,\r\n    runGuardsAndResolvers: 'always',\r\n    resolve: {\r\n      positions: PositionsResolveService,\r\n      solutions: UserSolutionsResolveService\r\n    },\r\n    canActivate: [\r\n      UserGuard\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forChild(USER_PAGE_ROUTES),\r\n  ],\r\n  exports: [\r\n    RouterModule\r\n  ]\r\n})\r\n\r\nexport class UserRoutingModule {\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { UserPageComponent } from './user-page/user-page.component';\r\nimport { PositionsComponent } from './positions/positions.component';\r\nimport {UserRoutingModule} from './user-routing.module';\r\nimport {SharedModule} from '../shared/shared.module';\r\nimport {MatButtonModule} from '@angular/material';\r\nimport {TestsModule} from '../tests/tests.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    MatButtonModule,\r\n    UserRoutingModule,\r\n    SharedModule,\r\n    TestsModule\r\n  ],\r\n  declarations: [\r\n    UserPageComponent,\r\n    PositionsComponent]\r\n})\r\nexport class UserModule { }\r\n","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}